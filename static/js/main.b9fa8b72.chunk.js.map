{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","className","id","defaultValue","totalRunft","onChange","changetotalRunft","i","value","key","totalRunin","changetotalRunin","e","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Details","stringerInches","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","changenosingin","changenosingfr","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","idealRun","parseFloat","idealRise","stairAngle","Math","atan","PI","type","min","max","Height","totalRun","parseInt","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","totalRise","count","boolean","lengthH","headroomLength","windowWidth","window","innerWidth","stringerA","sin","stringerB","coordinates","floorThickness","push","headroomPts","stairLength","move","treadThickness","treadfr","riserThickness","riserfr","nosing","nosingin","nosingfr","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","width","height","innerHeight","x","y","points","stroke","strokeWidth","lineCap","lineJoin","closed","map","_","fill","App","state","runOn","event","setState","target","this","runCount","riseCount","headroomDelta","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wTA+BeA,G,YA7BE,SAACC,GAEd,IAAIC,EAAaC,MAAMC,KAAK,CAACC,OAAO,KAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAKrD,OACI,6BACI,2BAAOC,UAAU,mBAAjB,aACA,4BAAQC,GAAG,eAAeC,aAAcT,EAAMU,WAAYC,SAAUX,EAAMY,iBAAkBL,UAAU,YACjGL,MAAMC,KAAKF,GAAY,SAACY,GACrB,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQL,GAAG,iBAAiBC,aAAcT,EAAMgB,WAAYL,SAAUX,EAAMiB,iBAAkBV,UAAU,YACnGL,MAAMC,KAAKD,MAbL,KAa0B,SAACgB,EAAGL,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQL,GAAG,mBAAmBC,aAAcT,EAAMmB,WAAYR,SAAUX,EAAMoB,iBAAkBb,UAAU,YACrGL,MAAMC,KAAKD,MAjBF,KAiB0B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,cCM/DQ,EA5BG,SAACrB,GAEf,IAAIC,EAAaC,MAAMC,KAAK,CAACC,OAAO,KAAQ,SAACC,EAAEC,GAAH,OAAOA,KAInD,OACI,6BACI,2BAAOC,UAAU,mBAAjB,cACA,4BAAQC,GAAG,cAAcC,aAAcT,EAAMsB,YAAaX,SAAUX,EAAMuB,kBAAmBhB,UAAU,YAClGL,MAAMC,KAAKF,GAAY,SAACY,GACrB,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQL,GAAG,cAAcC,aAAcT,EAAMwB,YAAab,SAAUX,EAAMyB,kBAAmBlB,UAAU,YAClGL,MAAMC,KAAKD,MAZL,KAY0B,SAACgB,EAAGL,GACjC,OAAS,4BAAQE,IAAKF,GAAIA,EAAG,SAGrC,4BAAQL,GAAG,cAAcC,aAAcT,EAAM0B,YAAaf,SAAUX,EAAM2B,kBAAmBpB,UAAU,YAClGL,MAAMC,KAAKD,MAhBF,KAgB0B,SAACgB,EAAGL,GACpC,OAAS,4BAAQE,IAAS,MAAJF,GAAaA,EAAI,aCC5Ce,EAtBE,SAAC5B,GAEd,IAAI6B,EAAe3B,MAAMC,KAAK,CAACC,OAAO,KAAS,SAACC,EAAEC,GAAH,OAAOA,EAAE,MAGxD,OACI,6BACI,2BAAOC,UAAU,mBAAjB,aACA,4BAAQE,aAAcT,EAAM8B,WAAYnB,SAAUX,EAAM+B,iBAAkBxB,UAAU,YAC/EL,MAAMC,KAAK0B,GAAc,SAAChB,GACvB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAcT,EAAMgC,WAAYrB,SAAUX,EAAMiC,iBAAkB1B,UAAU,YAC/EL,MAAMC,KAAKD,MAXF,KAW0B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,aCQ/DqB,EAvBG,SAAClC,GAEf,IAAI6B,EAAe3B,MAAMC,KAAK,CAACC,OAAO,IAAO,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAGtD,OACI,6BACI,2BAAOC,UAAU,mBAAjB,cACA,4BAAQE,aAAcT,EAAMmC,YAAaxB,SAAUX,EAAMoC,kBAAmB7B,UAAU,2BACjFL,MAAMC,KAAK0B,GAAc,SAAChB,GACvB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAcT,EAAMqC,YAAa1B,SAAUX,EAAMsC,kBAAmB/B,UAAU,+BACjFL,MAAMC,KAAKD,MAXF,KAW0B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,aCoD/D0B,EAnEC,SAACvC,GAEb,IAAIwC,EAAiBtC,MAAMC,KAAK,CAACC,OAAO,IAAQ,SAACC,EAAEC,GAAH,OAAOA,EAAE,KAMzD,OACI,6BACI,yBAAKC,UAAU,SAAf,WACA,6BACI,2BAAOA,UAAU,mBAAjB,mBACA,4BAAQE,aAAcT,EAAMyC,QAAS9B,SAAUX,EAAM0C,cAAenC,UAAU,YACzEL,MAAMC,KAAKD,MAXV,IAW8B,SAACgB,EAAGL,GAChC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAa,IAAIE,SAAUX,EAAM2C,cAAepC,UAAU,YAC7DL,MAAMC,KAAKD,MAbN,KAa8B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAItE,6BACI,2BAAON,UAAU,mBAAjB,mBACA,4BAAQE,aAAcT,EAAM4C,QAASjC,SAAUX,EAAM6C,cAAetC,UAAU,YACzEL,MAAMC,KAAKD,MAxBV,IAwB8B,SAACgB,EAAGL,GAChC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAa,IAAIE,SAAUX,EAAM8C,cAAevC,UAAU,YAC7DL,MAAMC,KAAKD,MA1BN,KA0B8B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAItE,6BACI,2BAAON,UAAU,mBAAjB,UACA,4BAAQE,aAAa,IAAIE,SAAUX,EAAM+C,eAAgBxC,UAAU,YAC9DL,MAAMC,KAAKD,MApCT,IAoC8B,SAACgB,EAAGL,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAa,IAAIE,SAAUX,EAAMgD,eAAgBzC,UAAU,YAC9DL,MAAMC,KAAKD,MAxCN,IAwC8B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,YAItE,6BACI,2BAAON,UAAU,mBAAjB,kBACA,4BAAQE,aAAcT,EAAMiD,WAAYtC,SAAUX,EAAMkD,kBACnDhD,MAAMC,KAAKqC,GAAgB,SAAC3B,GACzB,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAcT,EAAMmD,WAAYxC,SAAUX,EAAMoD,kBACnDlD,MAAMC,KAAKD,MApDN,KAoD8B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,cC3CnEwC,EAhBI,SAACrD,GAEhB,IAAIsD,EAAWC,WAAWvD,EAAM8B,YAAcyB,WAAWvD,EAAMgC,YAC3DwB,EAAYD,WAAWvD,EAAMmC,aAAeoB,WAAWvD,EAAMqC,aAE7DoB,EAAaC,KAAKC,KAAMH,EAAUF,IAAc,IAAII,KAAKE,IAE7D,OACI,6BACI,2BAAOrD,UAAU,gBAAjB,eACA,0BAAMA,UAAU,YAAYkD,EAAa,QACzC,2BAAOI,KAAK,QAAQpD,aAAcgD,EAAYK,IAAI,KAAKC,IAAI,SCExDC,EAbA,SAAChE,GAEZ,IAAIiE,EAAWC,SAASlE,EAAMU,YAAcwD,SAASlE,EAAMgB,YAAcuC,WAAWvD,EAAMmB,YACtFgD,EAAcZ,WAAWU,EAAW,GAExC,OACI,6BACI,2BAAO1D,UAAU,mBAAjB,UACA,2BAAOsD,KAAK,QAAQpD,aAAa,IAAIqD,IAAI,IAAIC,IAAKI,EAAaxD,SAAUX,EAAMoE,yBCoB5EC,EA5BQ,SAACrE,GAMpB,OACI,6BACI,2BAAOO,UAAU,mBAAjB,mBACA,4BAAQE,aAAcT,EAAMsE,QAAS3D,SAAUX,EAAMuE,eAChDrE,MAAMC,KAAKD,MARL,KAQ0B,SAACgB,EAAGL,GACjC,OAAS,4BAAQC,MAAS,GAAFD,EAAME,IAAO,GAAFF,GAAOA,EAAG,SAGrD,4BAAQJ,aAAcT,EAAMwE,QAAS7D,SAAUX,EAAMyE,eAChDvE,MAAMC,KAAKD,MAZL,KAY0B,SAACgB,EAAGL,GACjC,OAAS,4BAAQC,MAAOD,EAAGE,IAAKF,GAAIA,EAAG,SAG/C,4BAAQJ,aAAcT,EAAM0E,QAAS/D,SAAUX,EAAM2E,eAChDzE,MAAMC,KAAKD,MAhBF,KAgB0B,SAACgB,EAAGL,GACpC,OAAS,4BAAQC,MAAW,MAAJD,EAAYE,IAAS,MAAJF,GAAaA,EAAI,a,eCqH/D+D,EAzID,SAAC5E,GAEb,IAAIiE,EAAWC,SAASlE,EAAMU,YAAcwD,SAASlE,EAAMgB,YAAcuC,WAAWvD,EAAMmB,YACtF0D,EAAYX,SAASlE,EAAMsB,aAAe4C,SAASlE,EAAMwB,aAAe+B,WAAWvD,EAAM0B,aAEzF4B,EAAWC,WAAWvD,EAAM8B,YAAcyB,WAAWvD,EAAMgC,YAC3DwB,EAAYD,WAAWvD,EAAMmC,aAAeoB,WAAWvD,EAAMqC,aAE7DyC,EAAQ,GAEU,IAAlB9E,EAAM+E,QACVD,EAAQZ,SAASD,EAASX,IACG,IAAlBtD,EAAM+E,UACfD,EAAQZ,SAASW,EAAUrB,IAG7B,IACIwB,EAAUzB,WAAWvD,EAAMiF,gBAG3BC,EAAmC,IAApBC,OAAOC,WAAqB,GAE3CC,GAAa9B,WAAWvD,EAAMiD,YAAcM,WAAWvD,EAAMmD,aAAeO,KAAK4B,IAAI5B,KAAKC,KAAKL,EAAWE,IAC1G+B,GAAahC,WAAWvD,EAAMiD,YAAcM,WAAWvD,EAAMmD,aAAeO,KAAK4B,IAAI5B,KAAKC,KAAKH,EAAYF,IAE3GkC,EAAc,GAEdC,EAAkBlC,WAAWvD,EAAMsE,SAAWf,WAAWvD,EAAMwE,SAAWjB,WAAWvD,EAAM0E,SAI/F,IAAsB,IAAlB1E,EAAM+E,QAAiB,CACzB,IAAK,IAAIlE,EAAE,EAAGA,EAAEiE,EAAOjE,IACrB2E,EAAYE,KAAOzB,EAAWX,EAASzC,EAAI2C,EAAU3C,EAAIoD,EAAWX,GAAUzC,EAAE,GAAK2C,EAAU3C,EAAIoD,EAAWX,GAAUzC,EAAE,GAAM2C,GAAW3C,EAAE,IAG/I2E,EAAYE,KAAOF,EAAYA,EAAYpF,OAAO,GAAGmF,EAAYC,EAAYA,EAAYpF,OAAO,GAAIoF,EAAY,GAAIH,EAAWG,EAAY,GAAIC,EAAiBD,EAAY,GApBhK,GAoB6KC,EAAiBD,EAAY,GApB1M,GAoBuN,QAE9N,IAAsB,IAAlBxF,EAAM+E,QAAkB,CACjC,IAAK,IAAIlE,EAAE,EAAGA,EAAEiE,EAAOjE,IACrB2E,EAAYE,KAAOb,EAAYvB,EAASzC,EAAI2C,EAAU3C,EAAIgE,EAAYvB,GAAUzC,EAAE,GAAK2C,EAAU3C,EAAIgE,EAAYvB,GAAUzC,EAAE,GAAM2C,GAAW3C,EAAE,IAGlJ2E,EAAYE,KAAOF,EAAYA,EAAYpF,OAAO,GAAGmF,EAAYC,EAAYA,EAAYpF,OAAO,GAAIoF,EAAY,GAAIH,EAAWG,EAAY,GAAIC,EAAiBD,EAAY,GA3BhK,GA2B6KC,EAAiBD,EAAY,GA3B1M,GA2BuN,GA4BrO,IAxBA,IAAIG,EAAc,CAAGH,EAAYA,EAAYpF,OAAO,IAAc,EAATkD,EAAcmC,EAAiBD,EAAYA,EAAYpF,OAAO,IAAc,EAATkD,EAAc,EAAGkC,EAAYA,EAAYpF,OAAO,IAAIkD,EAAW0B,EAAS,EAAGQ,EAAYA,EAAYpF,OAAO,IAAIkD,EAAW0B,EAASS,GAK1PG,EAAkBJ,EAAYA,EAAYpF,OAAO,IAAa,EAATkD,EApC3C,GAoCmEkC,EAAY,GAOzFK,EAAO,CADSX,EAAY,EAAMU,EAAY,EAC3B,KAInBE,EAAiBvC,WAAWvD,EAAMyC,SAAWc,WAAWvD,EAAM+F,SAC9DC,EAAiBzC,WAAWvD,EAAM4C,SAAWW,WAAWvD,EAAMiG,SAC9DC,EAAS3C,WAAWvD,EAAMmG,UAAY5C,WAAWvD,EAAMoG,UAEvDC,EAAc/C,EAAW4C,EAASF,EAClCM,EAAc9C,EAAYsC,EAE1BS,EAAU,GACLjG,EAAE,EAAGA,EAAGkF,EAAYpF,OAASE,GAAG,EACvCiG,EAAQb,KAAKG,EAAK,GAAKL,EAAYlF,GAAK4F,GAI1C,IAFA,IAAIM,EAAU,GACVC,EAAU,GACLC,EAAE,EAAGA,EAAElB,EAAYpF,OAAQsG,GAAG,EACrCF,EAAQd,KAAKG,EAAK,GAAKL,EAAYkB,IACnCD,EAAQf,KAAKG,EAAK,GAAKL,EAAYkB,GAAKZ,GAG1C,IADA,IAAIa,EAAU,GACLC,EAAE,EAAGA,EAAEL,EAAQnG,OAAQwG,IAC9BD,EAAQjB,KAAKa,EAAQK,GAAGV,GAG1B,OACE,kBAAC,QAAD,CAAOW,MAAO3B,EAAa4B,OAAQ3B,OAAO4B,aACtC,kBAAC,QAAD,KACE,kBAAC,OAAD,CACEC,EAAGnB,EAAK,GACRoB,EAAGpB,EAAK,GACRqB,OAAQ1B,EACR2B,OAAO,QACPC,YAAa,GACbC,QAAQ,QACRC,SAAS,QACTC,OAAO,SAEX,kBAAC,OAAD,CACIP,EAAGnB,EAAK,GACRoB,EAAGpB,EAAK,GACRqB,OAAQvB,EACRwB,OAAO,QACPC,YAAa,GACbC,QAAQ,QACRC,SAAS,QACTC,OAAO,SAGT,YAAIrH,MAAM4E,IAAQ0C,KAAI,SAACC,EAAG5G,GAAJ,OACpB,kBAAC,OAAD,CACEE,IAAKF,EACLmG,EAAGT,EAAQ1F,GACXoG,EAAGT,EAAQ3F,GACXgG,MAAOR,EACPS,OAAQhB,EACR4B,KAAK,MACLN,YAAa,QAIhB,YAAIlH,MAAM4E,IAAQ0C,KAAI,SAACC,EAAG5G,GAAJ,OACrB,kBAAC,OAAD,CACEE,IAAKF,EACLmG,EAAGL,EAAQ9F,GACXoG,EAAGR,EAAQ5F,GACXgG,MAAOb,EACPc,OAAQR,EACRoB,KAAK,MACLN,YAAa,WCkMZO,E,2MAtTbC,MAAQ,CACNlH,WAAY,IACZM,WAAY,EACZG,WAAY,EAEZG,YAAa,GACbE,YAAa,EACbE,YAAa,EAEbS,YAAa,EACbE,YAAa,EAEbP,WAAY,GACZE,WAAY,EAEZiB,WAAY,EAAIS,KAAK4B,IAAI5B,KAAKC,KAAK,EAAI,KACvCR,WAAY,EAEZmB,QAAS,EACTE,QAAS,EACTE,QAAS,EAETP,YAAa,EACbc,eAAgB,EAEhBxC,QAAS,EACTsD,QAAS,EAETnD,QAAS,EACTqD,QAAS,EAETE,SAAU,EACVC,SAAU,EAEVyB,OAAO,G,EA+BTjH,iBAAmB,SAACkH,GAChB,EAAKC,SAAS,CACZrH,WAAWoH,EAAME,OAAOlH,MACxB+G,OAAO,K,EAGb5G,iBAAmB,SAAC6G,GAChB,EAAKC,SAAS,CACZ/G,WAAW8G,EAAME,OAAOlH,MACxB+G,OAAO,K,EAGbzG,iBAAmB,SAAC0G,GAChB,EAAKC,SAAS,CACZ5G,WAAW2G,EAAME,OAAOlH,MACxB+G,OAAO,K,EAKbtG,kBAAoB,SAACuG,GACjB,EAAKC,SAAS,CACZzG,YAAYwG,EAAME,OAAOlH,MACzB+G,OAAO,K,EAGbpG,kBAAoB,SAACqG,GACjB,EAAKC,SAAS,CACZvG,YAAYsG,EAAME,OAAOlH,MACzB+G,OAAO,K,EAGblG,kBAAoB,SAACmG,GACjB,EAAKC,SAAS,CACZrG,YAAYoG,EAAME,OAAOlH,MACzB+G,OAAO,K,EAKb9F,iBAAmB,SAAC+F,GAClB,EAAKC,SAAS,CAACjG,WAAWgG,EAAME,OAAOlH,S,EAEzCmB,iBAAmB,SAAC6F,GAChB,EAAKC,SAAS,CAAC/F,WAAW8F,EAAME,OAAOlH,S,EAI3CsB,kBAAoB,SAAC0F,GACjB,EAAKC,SAAS,CAAC5F,YAAY2F,EAAME,OAAOlH,S,EAE5CwB,kBAAoB,SAACwF,GACjB,EAAKC,SAAS,CAAC1F,YAAYyF,EAAME,OAAOlH,S,EAI5CoC,iBAAmB,SAAC4E,GAClB,EAAKC,SAAS,CAAC9E,WAAW6E,EAAME,OAAOlH,S,EAGzCsC,iBAAmB,SAAC0E,GAClB,EAAKC,SAAS,CAAC5E,WAAW2E,EAAME,OAAOlH,S,EAIzCyD,cAAgB,SAACuD,GACf,EAAKC,SAAS,CAACzD,QAAQwD,EAAME,OAAOlH,S,EAGtC2D,cAAgB,SAACqD,GACf,EAAKC,SAAS,CAACvD,QAAQsD,EAAME,OAAOlH,S,EAGtC6D,cAAgB,SAACmD,GACf,EAAKC,SAAS,CAACrD,QAAQoD,EAAME,OAAOlH,S,EAItCsD,qBAAuB,SAAC0D,GACtB,EAAKC,SAAS,CACZ9C,eAAe6C,EAAME,OAAOlH,S,EAKhC4B,cAAgB,SAACoF,GACf,EAAKC,SAAS,CACZtF,QAAQqF,EAAME,OAAOlH,S,EAGzB6B,cAAgB,SAACmF,GACf,EAAKC,SAAS,CACZhC,QAAQ+B,EAAME,OAAOlH,S,EAKzB+B,cAAgB,SAACiF,GACf,EAAKC,SAAS,CACZnF,QAAQkF,EAAME,OAAOlH,S,EAGzBgC,cAAgB,SAACgF,GACf,EAAKC,SAAS,CACZ9B,QAAQ6B,EAAME,OAAOlH,S,EAKxBiC,eAAiB,SAAC+E,GACjB,EAAKC,SAAS,CACZ5B,SAAS2B,EAAME,OAAOlH,S,EAG1BkC,eAAiB,SAAC8E,GAChB,EAAKC,SAAS,CACZ3B,SAAS0B,EAAME,OAAOlH,S,wEAKxB,OACE,yBAAKP,UAAU,mBACb,yBAAKA,UAAU,OAEb,yBAAKC,GAAG,UAAUD,UAAU,SACxB,6BACE,yBAAKA,UAAU,SAAf,YACA,kBAAC,EAAD,CACIG,WAAcuH,KAAKL,MAAMlH,WACzBM,WAAciH,KAAKL,MAAM5G,WACzBG,WAAc8G,KAAKL,MAAMzG,WACzBP,iBAAoBqH,KAAKrH,iBACzBK,iBAAoBgH,KAAKhH,iBACzBG,iBAAoB6G,KAAK7G,mBAE7B,kBAAC,EAAD,CACIE,YAAe2G,KAAKL,MAAMtG,YAC1BE,YAAeyG,KAAKL,MAAMpG,YAC1BE,YAAeuG,KAAKL,MAAMlG,YAC1BH,kBAAqB0G,KAAK1G,kBAC1BE,kBAAqBwG,KAAKxG,kBAC1BE,kBAAqBsG,KAAKtG,oBAE9B,kBAAC,EAAD,CACIG,WAAcmG,KAAKL,MAAM9F,WACzBE,WAAciG,KAAKL,MAAM5F,WACzBD,iBAAoBkG,KAAKlG,iBACzBE,iBAAoBgG,KAAKhG,mBAE7B,kBAAC,EAAD,CACIE,YAAe8F,KAAKL,MAAMzF,YAC1BE,YAAe4F,KAAKL,MAAMvF,YAC1BD,kBAAqB6F,KAAK7F,kBAC1BE,kBAAqB2F,KAAK3F,qBAIlC,kBAAC,EAAD,CACEW,WAAYgF,KAAKL,MAAM3E,WACvBE,WAAY8E,KAAKL,MAAMzE,WACvBV,QAASwF,KAAKL,MAAMnF,QACpBsD,QAASkC,KAAKL,MAAM7B,QACpBnD,QAASqF,KAAKL,MAAMhF,QACpBqD,QAASgC,KAAKL,MAAM3B,QACpBE,SAAU8B,KAAKL,MAAMzB,SACrBC,SAAU6B,KAAKL,MAAMxB,SACrBlD,iBAAkB+E,KAAK/E,iBACvBE,iBAAkB6E,KAAK7E,iBACvBV,cAAeuF,KAAKvF,cACpBC,cAAesF,KAAKtF,cACpBE,cAAeoF,KAAKpF,cACpBC,cAAemF,KAAKnF,cACpBC,eAAgBkF,KAAKlF,eACrBC,eAAgBiF,KAAKjF,iBAGvB,6BACI,yBAAKzC,UAAU,SAAf,YACA,kBAAC,EAAD,CACEG,WAAYuH,KAAKL,MAAMlH,WACvBM,WAAYiH,KAAKL,MAAM5G,WACvBG,WAAY8G,KAAKL,MAAMzG,WACvB8D,eAAgBgD,KAAKL,MAAM3C,eAC3Bb,qBAAsB6D,KAAK7D,uBAE7B,kBAAC,EAAD,CACEE,QAAS2D,KAAKL,MAAMtD,QACpBE,QAASyD,KAAKL,MAAMpD,QACpBE,QAASuD,KAAKL,MAAMlD,QACpBH,cAAe0D,KAAK1D,cACpBE,cAAewD,KAAKxD,cACpBE,cAAesD,KAAKtD,iBAK1B,kBAAC,EAAD,CACE7C,WAAYmG,KAAKL,MAAM9F,WACvBE,WAAYiG,KAAKL,MAAM5F,WACvBG,YAAa8F,KAAKL,MAAMzF,YACxBE,YAAa4F,KAAKL,MAAMvF,eAI9B,yBAAK9B,UAAU,QAAQC,GAAG,aACxB,kBAAC,EAAD,CACEE,WAAYuH,KAAKL,MAAMlH,WACvBM,WAAYiH,KAAKL,MAAM5G,WACvBG,WAAY8G,KAAKL,MAAMzG,WACvBG,YAAa2G,KAAKL,MAAMtG,YACxBE,YAAayG,KAAKL,MAAMpG,YACxBE,YAAauG,KAAKL,MAAMlG,YACxBI,WAAYmG,KAAKL,MAAM9F,WACvBE,WAAYiG,KAAKL,MAAM5F,WACvBG,YAAa8F,KAAKL,MAAMzF,YACxBE,YAAa4F,KAAKL,MAAMvF,YACxB0C,QAASkD,KAAKL,MAAMC,MACpBK,SAAUD,KAAKL,MAAMM,SACrBC,UAAWF,KAAKL,MAAMO,UACtBlF,WAAYgF,KAAKL,MAAM3E,WACvBE,WAAY8E,KAAKL,MAAMzE,WACvBmB,QAAS2D,KAAKL,MAAMtD,QACpBE,QAASyD,KAAKL,MAAMpD,QACpBE,QAASuD,KAAKL,MAAMlD,QACpBO,eAAgBgD,KAAKL,MAAM3C,eAC3BmD,cAAeH,KAAKL,MAAMQ,cAC1B3F,QAASwF,KAAKL,MAAMnF,QACpBsD,QAASkC,KAAKL,MAAM7B,QACpBnD,QAASqF,KAAKL,MAAMhF,QACpBqD,QAASgC,KAAKL,MAAM3B,QACpBE,SAAU8B,KAAKL,MAAMzB,SACrBC,SAAU6B,KAAKL,MAAMxB,kB,GA3SfiC,aCFEC,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b9fa8b72.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:30-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown\">\r\n                {Array.from(selectFeet, (i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown\">\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown\">\r\n                {Array.from(selectFeet, (i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown\">\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:36-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <select defaultValue={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown\">\r\n                {Array.from(selectInches, (i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 12;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <select defaultValue={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                {Array.from(selectInches, (i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractions = 8 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"title\">Details</div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin}>\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr}>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n  \r\n    let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n    let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n    let stairAngle = Math.atan((idealRise/idealRun)) * (180/Math.PI);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <span className=\"dropdown\">{stairAngle + '°'}</span>\r\n            <input type=\"range\" defaultValue={stairAngle} min=\"30\" max=\"45\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 2);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" max={headroomMax} onChange={props.changeheadroomlength} />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <select defaultValue={props.floorft} onChange={props.changefloorft}>\r\n                {Array.from(Array(maxThickness), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorin} onChange={props.changefloorin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorfr} onChange={props.changefloorfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport { Stage, Layer, Line, Rect} from 'react-konva';\r\n\r\nconst Stair = (props) => {\r\n\r\n  let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n  let totalRise = parseInt(props.totalRiseft) + parseInt(props.totalRisein) + parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let count = 0;\r\n\r\n  if (props.boolean === true){\r\n  count = parseInt(totalRun/idealRun);\r\n  } else if (props.boolean === false){\r\n    count = parseInt(totalRise/idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n\r\n  let windowWidth = (window.innerWidth * 0.65) - 15;\r\n\r\n  let stringerA = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = (parseFloat(props.floorft) + parseFloat(props.floorin) + parseFloat(props.floorfr));\r\n\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.boolean === true){ //If total run is adjusted\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRun)-(idealRun*i), idealRise*i, (totalRun)-(idealRun*(i+1)), idealRise*i, (totalRun)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n\r\n  } else if (props.boolean === false){ //If total rise is adjusted\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRise)-(idealRun*i), idealRise*i, (totalRise)-(idealRun*(i+1)), idealRise*i, (totalRise)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [ (coordinates[coordinates.length-12]-(idealRun*3)), floorThickness, (coordinates[coordinates.length-12]-(idealRun*3)), 0, coordinates[coordinates.length-12]-idealRun + lengthH, 0, coordinates[coordinates.length-12]-idealRun + lengthH, floorThickness ];\r\n\r\n  // //This is for the floor opening dimension\r\n  // let headroomDelta = coordinates[3] - (coordinates[coordinates.length-12]-idealRun + lengthH);\r\n\r\n  let stairLength = ( ((coordinates[coordinates.length-12]-idealRun*3) + landing + coordinates[0]) );\r\n  //This scales the drawing\r\n  let canvasWidth = stairLength;\r\n  let canvasHeight = idealRise*count;\r\n  \r\n  //This moves the drawing to the center\r\n  let moveCenter = ( (windowWidth/2) - (stairLength/2) );\r\n  let move = [moveCenter,100];\r\n\r\n\r\n  //This creates the treads, risers, and nosing\r\n  let treadThickness = parseFloat(props.treadin) + parseFloat(props.treadfr);\r\n  let riserThickness = parseFloat(props.riserin) + parseFloat(props.riserfr);\r\n  let nosing = parseFloat(props.nosingin) + parseFloat(props.nosingfr);\r\n\r\n  let treadLength = idealRun + nosing + riserThickness;\r\n  let riserHeight = idealRise - treadThickness;\r\n\r\n  let treadsX = [];\r\n  for (let k=2; k<(coordinates.length); k+=6){\r\n    treadsX.push(move[0] + coordinates[k] - nosing);\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j=3; j<coordinates.length; j+=6){\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h=0; h<treadsX.length; h++){\r\n    treadsW.push(treadsX[h]+nosing);\r\n  }\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={coordinates}\r\n            stroke=\"black\"\r\n            strokeWidth={0.5}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n        <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={0.5}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n          {\r\n          [...Array(count)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX[i]}\r\n              y={treadsY[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"red\"\r\n              strokeWidth={0.5}\r\n            />\r\n          ))\r\n          }\r\n          {[...Array(count)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"red\"\r\n              strokeWidth={0.5}\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n  )\r\n}\r\n\r\nexport default Stair","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Styles/App.css';\nimport TotalRun from './Components/inputs/totalrun';\nimport TotalRise from './Components/inputs/totalrise';\nimport IdealRun from './Components/inputs/idealrun';\nimport IdealRise from './Components/inputs/idealrise';\nimport Details from './Components/inputs/details';\nimport StairAngle from './Components/inputs/stairangle';\nimport Height from './Components/inputs/height';\nimport FloorThickness from './Components/inputs/floorthickness';\nimport Stair from './Components/stair';\n\n\nclass App extends Component {\n\n  state = {\n    totalRunft: 10 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 6 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 7 * Math.sin(Math.atan(7 / 11)),\n    stringerfr: 0,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    \n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0,\n\n    runOn: true\n\n  }\n\n  // //Retrieves run count\n  // runCount = () => {\n  //   let sumRuntotal = parseInt( parseInt(this.state.totalRunft) + parseInt(this.state.totalRunin) + parseFloat(this.state.totalRunfr) );\n  //   let sumRunideal = parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) );\n  //   return ( sumRuntotal / sumRunideal )\n  // }\n\n  // //Retrieves rise count\n  // riseCount = () => {\n  //   let sumRisetotal = parseInt( parseInt(this.state.totalRiseft) + parseInt(this.state.totalRisein) + parseFloat(this.state.totalRisefr) );\n  //   let sumRiseideal = parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) );\n  //   return ( sumRisetotal / sumRiseideal )\n  // }\n\n  // //Changes rise input values based on run\n  // riseChange = () => {\n  //   let totalRise = this.runCount * (parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) ) );\n  //   return totalRise\n  // }\n\n  // //Changes run input values based on rise\n  // runChange = () => {\n  //   let totalRun = this.riseCount * (parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) ) );\n  //   return totalRun\n  // }\n\n  //Handlers for changing total run\n  changetotalRunft = (event) => {\n      this.setState({\n        totalRunft:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunin = (event) => {\n      this.setState({\n        totalRunin:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunfr = (event) => {\n      this.setState({\n        totalRunfr:event.target.value,\n        runOn: true\n      })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = (event) => {\n      this.setState({\n        totalRiseft:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisein = (event) => {\n      this.setState({\n        totalRisein:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisefr = (event) => {\n      this.setState({\n        totalRisefr:event.target.value,\n        runOn: false\n      })\n  }\n\n  //Handlers for changing ideal run\n  changeidealRunin = (event) => {\n    this.setState({idealRunin:event.target.value})\n  }\n  changeidealRunfr = (event) => {\n      this.setState({idealRunfr:event.target.value})\n  }\n\n  //Handlers for changing ideal rise\n  changeidealRisein = (event) => {\n      this.setState({idealRisein:event.target.value})\n  }\n  changeidealRisefr = (event) => {\n      this.setState({idealRisefr:event.target.value})\n  }\n\n  //Handlers for changing stringer\n  changestringerin = (event) => {\n    this.setState({stringerin:event.target.value})\n  }\n\n  changestringerfr = (event) => {\n    this.setState({stringerfr:event.target.value})\n  }\n\n  //Handlers for changing floor thickness\n  changefloorft = (event) => {\n    this.setState({floorft:event.target.value})\n  }\n\n  changefloorin = (event) => {\n    this.setState({floorin:event.target.value})\n  }\n\n  changefloorfr = (event) => {\n    this.setState({floorfr:event.target.value})\n  }\n  \n  //Handlers for headroom\n  changeheadroomlength = (event) => {\n    this.setState({\n      headroomLength:event.target.value\n    })\n  }\n\n  //Handlers for tread\n  changetreadin = (event) => {\n    this.setState({\n      treadin:event.target.value\n    })\n  }\n  changetreadfr = (event) => {\n    this.setState({\n      treadfr:event.target.value\n    })\n  }\n\n  //Handlers for riser\n  changeriserin = (event) => {\n    this.setState({\n      riserin:event.target.value\n    })\n  }\n  changeriserfr = (event) => {\n    this.setState({\n      riserfr:event.target.value\n    })\n  }\n\n   //Handlers for nosing\n   changenosingin = (event) => {\n    this.setState({\n      nosingin:event.target.value\n    })\n  }\n  changenosingfr = (event) => {\n    this.setState({\n      nosingfr:event.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n\n          <div id=\"sidebar\" className=\"col-4\">\n              <div>\n                <div className=\"title\">Rise-run</div>\n                <TotalRun \n                    totalRunft = {this.state.totalRunft}\n                    totalRunin = {this.state.totalRunin}\n                    totalRunfr = {this.state.totalRunfr}\n                    changetotalRunft = {this.changetotalRunft}\n                    changetotalRunin = {this.changetotalRunin}\n                    changetotalRunfr = {this.changetotalRunfr}\n                />\n                <TotalRise \n                    totalRiseft = {this.state.totalRiseft}\n                    totalRisein = {this.state.totalRisein}\n                    totalRisefr = {this.state.totalRisefr}\n                    changetotalRiseft = {this.changetotalRiseft}\n                    changetotalRisein = {this.changetotalRisein}\n                    changetotalRisefr = {this.changetotalRisefr}\n                />\n                <IdealRun \n                    idealRunin = {this.state.idealRunin}\n                    idealRunfr = {this.state.idealRunfr}\n                    changeidealRunin = {this.changeidealRunin}\n                    changeidealRunfr = {this.changeidealRunfr}\n                />\n                <IdealRise \n                    idealRisein = {this.state.idealRisein}\n                    idealRisefr = {this.state.idealRisefr}\n                    changeidealRisein = {this.changeidealRisein}\n                    changeidealRisefr = {this.changeidealRisefr}\n                />\n              </div>\n\n            <Details \n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n              changetreadin={this.changetreadin}\n              changetreadfr={this.changetreadfr}\n              changeriserin={this.changeriserin}\n              changeriserfr={this.changeriserfr}\n              changenosingin={this.changenosingin}\n              changenosingfr={this.changenosingfr}\n            />\n\n            <div>\n                <div className=\"title\">Headroom</div>\n                <Height \n                  totalRunft={this.state.totalRunft}\n                  totalRunin={this.state.totalRunin}\n                  totalRunfr={this.state.totalRunfr}\n                  headroomLength={this.state.headroomLength}\n                  changeheadroomlength={this.changeheadroomlength}\n                />\n                <FloorThickness \n                  floorft={this.state.floorft}\n                  floorin={this.state.floorin}\n                  floorfr={this.state.floorfr}\n                  changefloorft={this.changefloorft}\n                  changefloorin={this.changefloorin}\n                  changefloorfr={this.changefloorfr}\n                />\n\n            </div>\n          \n            <StairAngle\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n            />\n        </div>\n\n        <div className=\"col-8\" id=\"container\">\n          <Stair \n            totalRunft={this.state.totalRunft}\n            totalRunin={this.state.totalRunin}\n            totalRunfr={this.state.totalRunfr}\n            totalRiseft={this.state.totalRiseft}\n            totalRisein={this.state.totalRisein}\n            totalRisefr={this.state.totalRisefr}\n            idealRunin={this.state.idealRunin}\n            idealRunfr={this.state.idealRunfr}\n            idealRisein={this.state.idealRisein}\n            idealRisefr={this.state.idealRisefr}\n            boolean={this.state.runOn}\n            runCount={this.state.runCount}\n            riseCount={this.state.riseCount}\n            stringerin={this.state.stringerin}\n            stringerfr={this.state.stringerfr}\n            floorft={this.state.floorft}\n            floorin={this.state.floorin}\n            floorfr={this.state.floorfr}\n            headroomLength={this.state.headroomLength}\n            headroomDelta={this.state.headroomDelta}\n            treadin={this.state.treadin}\n            treadfr={this.state.treadfr}\n            riserin={this.state.riserin}\n            riserfr={this.state.riserfr}\n            nosingin={this.state.nosingin}\n            nosingfr={this.state.nosingfr}\n          />\n        </div>\n        \n      </div>\n\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport './Styles/fonts.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}