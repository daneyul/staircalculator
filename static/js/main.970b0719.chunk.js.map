{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/topstair.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","Components/inputs/detailsToggle.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","className","id","defaultValue","totalRunft","onChange","changetotalRunft","i","value","key","totalRunin","changetotalRunin","e","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Topstair","topStair","onClick","changeTopStairOn","changeTopStairOff","Details","stringerInches","detailsTrue","details","console","log","stringerfr","Fragment","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","changenosingin","changenosingfr","stringerin","changestringerin","changestringerfr","nosingfr","StairAngle","type","stairAngle","min","max","step","changeStairAngle","Height","totalRun","parseInt","parseFloat","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","window","matchMedia","lgMax","lgMin","totalRise","idealRun","idealRise","preTreadThickness","treadfr","preRiserThickness","riserfr","count","totalBoolean","lengthH","headroomLength","stringerA","Math","sin","atan","stringerB","coordinates","floorThickness","idealBoolean","stairToggle","tan","PI","push","round","headroomPts","headroomTrue","windowWidth","matches","innerWidth","stairLength","wr","abs","ratio","m","n","moveCenter","move","treadThickness","riserThickness","nosing","nosingin","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","topTread","textSize","dRise","dRiseArrowTop","dRiseArrowBot","dRiseText","dRiseDashedTop","dRiseDashedBot","dRiseFeet","floor","dRiseInches","dRiseFraction","dRun","dRunArrowLeft","dRunArrowRight","dRunText","dRunDashedLeft","dRunDashedRight","dRunFeet","dRunInches","dRunFraction","sZ","sA","sAlpha","sC","sqrt","sX","sY","stringerTrue","dStringer","cos","dNosing","dNosingDashedLeft","dNosingDashedRight","dNosingText","dHeadroomStepX","dHeadroomStepY","p","dHeadroomDashed","headroomBoolean","dHeadroom","dHeadroomArrowTop","dHeadroomArrowBot","dHeadroomText","dHeadroomValue","dHeadroomFeet","dHeadroomInches","dHeadroomFraction","dFloor","dFloorArrowTop","dFloorArrowBot","dFloorText","dFloorDashedTop","dFloorDashedBot","dAngleStart","dAngle","dAngleText","toFixed","dRiseStep","dRunStep","errors","ePosition","eHeadroomText","eHeadroomColor","withNosing","eRunText","eAngleText","eAngleColor","eRiseText","eMessage","width","height","innerHeight","dimensions","x","y","fontFamily","fontSize","fill","text","align","points","stroke","strokeWidth","lineCap","lineJoin","closed","map","_","dash","rotation","arrowOffset","Units","unitsTrue","units","changeUnitsIn","changeUnitsMM","Dimensions","dimensionsTrue","changeDimensionsOn","changeDimensionsOff","DetailsToggle","changeDetailsOn","changeDetailsOff","App","state","runOn","idealOn","event","setState","target","this","runCount","riseCount","headroomDelta","Component","Boolean","location","hostname","match","WebFont","load","custom","families","active","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.970b0719.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                {props.totalRunft === 12 ? (\r\n                    <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                        <option value={10} key={10}></option>\r\n                        <option value={11} key={11}></option>\r\n                    </select>\r\n                ) : (\r\n                    <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                    </select>\r\n                )\r\n                }\r\n                <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:24-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select value={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select value={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 13;\r\n\r\n    return (\r\n        <div className=\"select-wrapper\">\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <div className=\"dropdown__parent d-flex justify-content-start\">\r\n                <select value={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select value={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Topstair = (props) => {\r\n\r\n    let topStair = props.topStair;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Top Stair</div>\r\n            {topStair ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topstair","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n    \r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractions = 16;\r\n    let selectFractions = 16;\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n\r\n    let detailsTrue = props.details;\r\n    console.log(props.stringerfr);\r\n\r\n    return (\r\n        <div className=\"sidebar__section  sidebar__section--third\">\r\n            <div className=\"title\">Details</div>\r\n\r\n            {detailsTrue ? (\r\n                <React.Fragment>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(treadInches), (e, i) => {\r\n                            return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n        \r\n            </React.Fragment>\r\n            ) : (\r\n            <React.Fragment>\r\n            <div>\r\n            <label className=\"subtitle d-flex\">Tread thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        \r\n            </React.Fragment>\r\n            )}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n\r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <div className=\"d-flex justify-content-between sidebar__section--stairangle\">\r\n                <input type=\"number\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.1\" onChange={props.changeStairAngle} className=\"stairangle__number dropdown\"/>\r\n                <input type=\"range\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.01\" onChange={props.changeStairAngle} className=\"slider slider__angle\"/>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 3);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" step=\"0.01\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider slider__height\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 1+1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(Array(maxThickness), (e, i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from \"react\";\r\nimport { Stage, Layer, Line, Rect, Text } from \"react-konva\";\r\nimport \"../Styles/fonts.css\";\r\n\r\nconst Stair = props => {\r\n\r\n  var smMax = window.matchMedia(\"(max-width: 540px)\");\r\n  var smMin = window.matchMedia(\"(min-width: 540px)\");\r\n\r\n  var mdMax = window.matchMedia(\"(max-width: 720px)\");\r\n  var mdMin = window.matchMedia(\"(min-width: 720px)\");\r\n\r\n  var lgMax = window.matchMedia(\"(max-width: 960px)\");\r\n  var lgMin = window.matchMedia(\"(min-width: 960px)\");\r\n\r\n  var xlMax = window.matchMedia(\"(max-width: 1140px)\");\r\n  var xlMin = window.matchMedia(\"(min-width: 1140px)\");\r\n  \r\n\r\n\r\n  \r\n  let totalRun =\r\n    parseInt(props.totalRunft) +\r\n    parseInt(props.totalRunin) +\r\n    parseFloat(props.totalRunfr);\r\n  let totalRise =\r\n    parseInt(props.totalRiseft) +\r\n    parseInt(props.totalRisein) +\r\n    parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let preTreadThickness = parseFloat(props.treadin) + parseFloat(props.treadfr);\r\n  let preRiserThickness = parseFloat(props.riserin) + parseFloat(props.riserfr);\r\n\r\n  let count = 0;\r\n\r\n  if (props.totalBoolean === true) {\r\n    count = parseInt(totalRun / idealRun);\r\n  } else if (props.totalBoolean === false) {\r\n    count = parseInt(totalRise / idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n  \r\n\r\n  let stringerA =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n    Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n    Math.sin(Math.atan(idealRise / idealRun));\r\n  if (props.details) {\r\n    stringerA =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n        )\r\n      );\r\n    stringerB =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n        )\r\n      );\r\n  } else {\r\n    stringerA =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(Math.atan(idealRun / idealRise));\r\n    stringerB =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(Math.atan(idealRise / idealRun));\r\n  }\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness =\r\n    parseFloat(props.floorft) +\r\n    parseFloat(props.floorin) +\r\n    parseFloat(props.floorfr);\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.totalBoolean === true) {\r\n    //If total run is selected (need to change so that total run changes ideal run)\r\n    if (props.idealBoolean === true) {\r\n      //If ideal is selected\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n      //This creates the landing and stringer\r\n      props.details\r\n        ? coordinates.push(\r\n            coordinates[coordinates.length - 2] + preRiserThickness + stringerB,\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n        : coordinates.push(\r\n            coordinates[coordinates.length - 2] + stringerB,\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          );\r\n    } else {\r\n      count = Math.round(totalRun / 11);\r\n      idealRun = totalRun / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n      //This creates the landing and stringer\r\n      props.details\r\n        ? coordinates.push(\r\n            coordinates[coordinates.length - 2] + preRiserThickness + stringerB,\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n        : coordinates.push(\r\n            coordinates[coordinates.length - 2] + stringerB,\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          );\r\n    }\r\n  } else if (props.totalBoolean === false) {\r\n    //If total rise is selected (need to change so that total rise changes ideal rise)\r\n    if (props.idealBoolean === true) {\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n      //This creates the landing and stringer\r\n      props.details\r\n        ? coordinates.push(\r\n            coordinates[coordinates.length - 2] +\r\n              (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n        : coordinates.push(\r\n            coordinates[coordinates.length - 2] + stringerB,\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          );\r\n    } else {\r\n      count = Math.round(totalRise / 7);\r\n      idealRise = totalRise / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n      //This creates the landing and stringer\r\n      props.details\r\n        ? coordinates.push(\r\n            coordinates[coordinates.length - 2] +\r\n              (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n        : coordinates.push(\r\n            coordinates[coordinates.length - 2] + stringerB,\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          );\r\n    }\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [\r\n    coordinates[coordinates.length - 12] - idealRun * 3,\r\n    floorThickness,\r\n    coordinates[coordinates.length - 12] - idealRun * 3,\r\n    0,\r\n    coordinates[coordinates.length - 12] - idealRun + lengthH,\r\n    0,\r\n    coordinates[coordinates.length - 12] - idealRun + lengthH,\r\n    floorThickness\r\n  ];\r\n  //This part removes the headroom if the stair is too short\r\n  let headroomTrue = true;\r\n  if (\r\n    totalRise < 84 ||\r\n    idealRise * count < 84 ||\r\n    totalRun < 84 ||\r\n    idealRun * count < 84\r\n  ) {\r\n    headroomTrue = false;\r\n  }\r\n\r\n  //This is the scale factor for the stair drawing\r\n  let windowWidth = lgMin.matches ? (window.innerWidth * 0.82 - 15) : (window.innerWidth);\r\n  let stairLength = (headroomPts[0] + landing + coordinates[0]);\r\n  let wr = windowWidth / (Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  let ratio = lgMin.matches ? (wr * 0.75) : (wr * 0.75);\r\n\r\n  //This transforms the drawing based on the scale factor\r\n  for (var m = 0; m < coordinates.length; m++) {\r\n    coordinates[m] = coordinates[m] * ratio;\r\n  }\r\n  for (var n = 0; n < headroomPts.length; n++) {\r\n    headroomPts[n] = headroomPts[n] * ratio;\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = windowWidth / 2 - (stairLength * ratio) / 2;\r\n  let move = lgMin.matches ? [moveCenter, 150] : [moveCenter, 100];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness =\r\n    ratio * (parseFloat(props.treadin) + parseFloat(props.treadfr));\r\n  let riserThickness =\r\n    ratio * (parseFloat(props.riserin) + parseFloat(props.riserfr));\r\n  let nosing =\r\n    ratio * (parseFloat(props.nosingin) + parseFloat(props.nosingfr));\r\n\r\n  let treadLength = idealRun * ratio + nosing + riserThickness;\r\n  let riserHeight = idealRise * ratio - treadThickness;\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  for (let k = 2; k < coordinates.length; k += 6) {\r\n    treadsX.push(move[0] + coordinates[k] - nosing);\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j = 3; j < coordinates.length; j += 6) {\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h = 0; h < treadsX.length; h++) {\r\n    treadsW.push(treadsX[h] + nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r = 1; r < treadsX.length; r++) {\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t = 1; t < treadsY.length; t++) {\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  //Dimension strings\r\n  //This is the arrow dimensions\r\n  let arrowWidth = 10 / 2;\r\n  let arrowOffset = 40;\r\n  let textLineOffset = 25;\r\n  let textNumOffset = 10;\r\n\r\n  let textSize = lgMax.matches ? 6 : 12;\r\n\r\n\r\n  //This is the dimension string for the total rise\r\n  let dRise = [\r\n    coordinates[coordinates.length - 2] + arrowOffset,\r\n    0,\r\n    coordinates[coordinates.length - 2] + arrowOffset,\r\n    coordinates[coordinates.length - 9]\r\n  ];\r\n  let dRiseArrowTop = [\r\n    dRise[0] - arrowWidth,\r\n    dRise[1] + arrowWidth,\r\n    dRise[0],\r\n    dRise[1],\r\n    dRise[0] + arrowWidth,\r\n    dRise[1] + arrowWidth\r\n  ];\r\n  let dRiseArrowBot = [\r\n    dRise[2] - arrowWidth,\r\n    dRise[3] - arrowWidth,\r\n    dRise[2],\r\n    dRise[3],\r\n    dRise[2] + arrowWidth,\r\n    dRise[3] - arrowWidth\r\n  ];\r\n  let dRiseText = [dRise[0], (dRise[1] + dRise[3]) / 2];\r\n  let dRiseDashedTop = [\r\n    coordinates[coordinates.length - 2],\r\n    dRise[1],\r\n    dRise[0],\r\n    dRise[1]\r\n  ];\r\n  let dRiseDashedBot = [\r\n    coordinates[coordinates.length - 10],\r\n    dRise[3],\r\n    dRise[0],\r\n    dRise[3]\r\n  ];\r\n  let dRiseFeet = Math.floor(\r\n    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio / 12\r\n  );\r\n  let dRiseInches = Math.floor(\r\n    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n      dRiseFeet * 12\r\n  );\r\n  let dRiseFraction = Math.round(\r\n    ((coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n      dRiseFeet * 12 -\r\n      dRiseInches) *\r\n      16\r\n  );\r\n\r\n  //This is the dimension string for the total run\r\n  let dRun = [\r\n    coordinates[coordinates.length - 12],\r\n    coordinates[coordinates.length - 11] + arrowOffset,\r\n    coordinates[0],\r\n    coordinates[coordinates.length - 11] + arrowOffset\r\n  ];\r\n  let dRunArrowLeft = [\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] - arrowWidth,\r\n    dRun[0],\r\n    dRun[1],\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] + arrowWidth\r\n  ];\r\n  let dRunArrowRight = [\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] - arrowWidth,\r\n    dRun[2],\r\n    dRun[3],\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] + arrowWidth\r\n  ];\r\n  let dRunText = [(dRun[0] + dRun[2]) / 2, dRun[1]];\r\n  let dRunDashedLeft = [dRun[0], dRun[1], dRun[0], dRun[1] - arrowOffset];\r\n  let dRunDashedRight = [dRun[2], dRun[3], dRun[2], coordinates[1]];\r\n  let dRunFeet = Math.floor(\r\n    (coordinates[0] - coordinates[coordinates.length - 12]) / ratio / 12\r\n  );\r\n  let dRunInches = Math.floor(\r\n    (coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n      dRunFeet * 12\r\n  );\r\n  let dRunFraction = Math.round(\r\n    ((coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n      dRunFeet * 12 -\r\n      dRunInches) *\r\n      16\r\n  );\r\n\r\n  //This is the dimension string for the stringer\r\n  let sZ =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) * ratio;\r\n  let sA = stringerA * ratio;\r\n  let sAlpha = Math.atan(idealRise / idealRun);\r\n  let sC = Math.sqrt(sA * sA - sZ * sZ);\r\n\r\n  let sX = coordinates[10] + riserThickness;\r\n  let sY = coordinates[11] + treadThickness;\r\n  if (props.details === false){\r\n    sX = coordinates[10];\r\n    sY = coordinates[11];\r\n  }\r\n  if (count <= 3) {\r\n    sX = coordinates[4] + riserThickness;\r\n    sY = coordinates[5] + treadThickness;\r\n  }\r\n\r\n  let stringerTrue = count > 2;\r\n\r\n  let sX1 = sX + sC * Math.cos(sAlpha);\r\n  let sY1 = sY + sA - sC * Math.sin(sAlpha);\r\n  let dStringer = [sX, sY, sX1 + sZ / 2, sY1 + sA / 2];\r\n\r\n  //This is the dimension string for the nosing\r\n  let dNosing = [coordinates[2], 0, coordinates[2] - nosing, 0];\r\n  let dNosingDashedLeft = [\r\n    dNosing[0],\r\n    dNosing[1],\r\n    dNosing[0],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingDashedRight = [\r\n    dNosing[2],\r\n    dNosing[1],\r\n    dNosing[2],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingText = [(dNosing[0] + dNosing[2]) / 2, dNosing[1] - 28];\r\n\r\n  //This is the dimension string for the headroom\r\n  let dHeadroomStepX = headroomPts[6];\r\n  let dHeadroomStepY = coordinates[coordinates.length - 9];\r\n  for (var p = 0; p < coordinates.length; p += 2) {\r\n    if (\r\n      dHeadroomStepX > coordinates[p + 2] &&\r\n      dHeadroomStepX < coordinates[p - 2]\r\n    ) {\r\n      dHeadroomStepY = coordinates[p + 1];\r\n    }\r\n  }\r\n\r\n  let dHeadroomDashed = [\r\n    dHeadroomStepX,\r\n    coordinates[coordinates.length - 9],\r\n    coordinates[coordinates.length - 10],\r\n    coordinates[coordinates.length - 9]\r\n  ];\r\n  let headroomBoolean = false;\r\n  if (dHeadroomStepX < coordinates[coordinates.length - 10]) {\r\n    headroomBoolean = true;\r\n  }\r\n\r\n  let dHeadroom = [\r\n    dHeadroomStepX,\r\n    headroomPts[7],\r\n    dHeadroomStepX,\r\n    dHeadroomStepY\r\n  ];\r\n  let dHeadroomArrowTop = [\r\n    dHeadroom[0] - arrowWidth,\r\n    dHeadroom[1] + arrowWidth,\r\n    dHeadroom[0],\r\n    dHeadroom[1],\r\n    dHeadroom[0] + arrowWidth,\r\n    dHeadroom[1] + arrowWidth\r\n  ];\r\n  let dHeadroomArrowBot = [\r\n    dHeadroom[2] - arrowWidth,\r\n    dHeadroom[3] - arrowWidth,\r\n    dHeadroom[2],\r\n    dHeadroom[3],\r\n    dHeadroom[2] + arrowWidth,\r\n    dHeadroom[3] - arrowWidth\r\n  ];\r\n  let dHeadroomText = [dHeadroom[0], (dHeadroom[1] + dHeadroom[3]) / 2];\r\n  let dHeadroomValue =\r\n    (parseFloat(dHeadroomStepY) - parseFloat(dHeadroom[1])) / ratio;\r\n  let dHeadroomFeet = Math.floor((dHeadroomStepY - dHeadroom[1]) / ratio / 12);\r\n  let dHeadroomInches = Math.floor(\r\n    (dHeadroomStepY - dHeadroom[1]) / ratio - dHeadroomFeet * 12\r\n  );\r\n  let dHeadroomFraction =\r\n    Math.round(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio -\r\n        dHeadroomFeet * 12 -\r\n        dHeadroomInches\r\n    ) * 16;\r\n\r\n  //This is the dimension string for the floor thickness\r\n  let dFloor = [headroomPts[6], headroomPts[7], headroomPts[4], headroomPts[5]];\r\n  let dFloorArrowTop = [\r\n    dFloor[2] - arrowWidth,\r\n    dFloor[3] + arrowWidth,\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowWidth,\r\n    dFloor[3] + arrowWidth\r\n  ];\r\n  let dFloorArrowBot = [\r\n    dFloor[0] - arrowWidth,\r\n    dFloor[1] - arrowWidth,\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowWidth,\r\n    dFloor[1] - arrowWidth\r\n  ];\r\n  let dFloorText = [dFloor[2], dFloor[3]];\r\n  let dFloorDashedTop = [\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowOffset,\r\n    dFloor[3]\r\n  ];\r\n  let dFloorDashedBot = [\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowOffset,\r\n    dFloor[1]\r\n  ];\r\n\r\n  //This is the dimension string for the stair angle\r\n  let dAngleStart = [\r\n    coordinates[coordinates.length - 12],\r\n    coordinates[coordinates.length - 11]\r\n  ];\r\n  let dAngle = [\r\n    dAngleStart[0],\r\n    dAngleStart[1],\r\n    dAngleStart[0] - idealRun * ratio,\r\n    dAngleStart[1],\r\n    dAngleStart[0],\r\n    dAngleStart[1] - idealRise * ratio\r\n  ];\r\n  let dAngleText = [\r\n    coordinates[coordinates.length - 10] + (idealRun / 2) * ratio,\r\n    dAngle[1]\r\n  ];\r\n  let stairAngle = (Math.atan(idealRise / idealRun) * (180 / Math.PI)).toFixed(\r\n    2\r\n  );\r\n  if (stairAngle < 30 || count <= 3) {\r\n    dAngleText = [\r\n      coordinates[coordinates.length - 10] + (idealRun / 2) * ratio + 10,\r\n      dAngle[1]\r\n    ];\r\n  }\r\n\r\n  //These are coordinates for the rise and run dimension strings\r\n  let dRiseStep = [coordinates[8], coordinates[9] - ((coordinates[9] - coordinates[11]) / 2)];\r\n  let dRunStep = [coordinates[8] - ((coordinates[8] - coordinates[10]) / 2), coordinates[9]];\r\n\r\n  //Error message texts\r\n  let errors = [];\r\n  let ePosition = [80, 80];\r\n\r\n  //Headroom errors\r\n  let eHeadroomText = \"\";\r\n  let eHeadroomColor = \"#ff0000\";\r\n  if (dHeadroomValue < 84 && headroomTrue) {\r\n    eHeadroomColor = \"#ff0000\";\r\n    eHeadroomText = \"Low Headroom\";\r\n    errors.push(eHeadroomText);\r\n  } else {\r\n    eHeadroomColor = \"#5541EA\";\r\n  }\r\n\r\n  //Tread length errors\r\n  let withNosing = false;\r\n  if (idealRun === 10 && props.nosingin === 0) {\r\n    withNosing = true;\r\n  }\r\n  let eRunText = \"\";\r\n  if (idealRun < 11 && withNosing) {\r\n    eRunText = \"Stair run too short\";\r\n    errors.push(eRunText);\r\n  }\r\n\r\n  //Stair angle errors\r\n  let eAngleText = \"\";\r\n  let eAngleColor = \"#5541EA\";\r\n  if (stairAngle > 42 || stairAngle < 30) {\r\n    eAngleText = \"Angle must be between 30 and 42\";\r\n    eAngleColor = \"#ff0000\";\r\n    errors.push(eAngleText);\r\n  }\r\n\r\n  //Rise error\r\n  let eRiseText = \"\";\r\n  if (idealRise > 7){\r\n    eRiseText = 'Stair rise exceeds 7\"'\r\n    errors.push(eRiseText);\r\n  }\r\n\r\n  //Compiled error messages\r\n  let eMessage = \"\";\r\n  if (errors.length === 1) {\r\n    eMessage = errors[0];\r\n  } else if (errors.length === 2) {\r\n    eMessage = errors[0] + \" • \" + errors[1];\r\n  } else if (errors.length === 3) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2];\r\n  } else if (errors.length === 4) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2] + \" • \" + errors[3];\r\n  }\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n      <Layer>\r\n        {props.dimensions && (\r\n          <Text\r\n            x={ePosition[0]}\r\n            y={ePosition[1]}\r\n            fontFamily=\"Sohne Mono Buch\"\r\n            fontSize={textSize}\r\n            fill=\"#ff0000\"\r\n            text={eMessage}\r\n            align=\"left\"\r\n          />\r\n        )}\r\n        <Line\r\n          x={move[0]}\r\n          y={move[1]}\r\n          points={coordinates}\r\n          stroke=\"black\"\r\n          strokeWidth={1.5}\r\n          lineCap=\"sqare\"\r\n          lineJoin=\"sqare\"\r\n          closed=\"true\"\r\n        />\r\n        {headroomTrue && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={1.5}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.details && (\r\n          <Rect\r\n            x={topTread[0]}\r\n            y={topTread[1]}\r\n            width={treadLength + landing * ratio - riserThickness}\r\n            height={treadThickness}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={1.5}\r\n          />\r\n        )}\r\n        {props.details &&\r\n          [...Array(count - 1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          ))}\r\n        {props.details &&\r\n          [...Array(count)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          ))}\r\n      </Layer>\r\n      <Layer>\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRise}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textNumOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Rise\"\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textLineOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                dRiseFeet + \"' \" + dRiseInches + '\" ' + dRiseFraction + \"/16\"\r\n              }\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRun}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowLeft}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowRight}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Run\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dRunFeet + \"' \" + dRunInches + '\" ' + dRunFraction + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && props.details && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - 12 - textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Nosing\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - 12 - textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={props.nosingin + '\" ' + props.nosingfr * 16 + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloor}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Floor thickness\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1] + 15}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                props.floorft / 12 +\r\n                \"' \" +\r\n                props.floorin +\r\n                '\" ' +\r\n                props.floorfr * 16 +\r\n                \"/16\"\r\n              }\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dAngleText[0] + 14}\r\n              y={move[1] + dAngleText[1] - 14}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eAngleColor}\r\n              text={stairAngle + \"°\"}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroom}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowTop}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowBot}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dHeadroomText[0] - textLineOffset}\r\n              y={move[1] + dHeadroomText[1] - 50}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text={\r\n                dHeadroomFeet +\r\n                \"' \" +\r\n                dHeadroomInches +\r\n                '\" ' +\r\n                dHeadroomFraction +\r\n                \"/16\"\r\n              }\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dHeadroomText[0] - textNumOffset}\r\n              y={move[1] + dHeadroomText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text=\"Headroom height\"\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && headroomBoolean && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={dHeadroomDashed}\r\n            stroke=\"black\"\r\n            strokeWidth={0.75}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            dash={[3, 4]}\r\n          />\r\n        )}\r\n        {props.dimensions && stringerTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dStringer}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Stringer width\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3] + 15}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                props.stringerin +\r\n                '\" ' +\r\n                Math.round(props.stringerfr * 16) +\r\n                \"/16\"\r\n              }\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={50}\r\n              x={move[0] + dRiseStep[0] - 52}\r\n              y={move[1] + dRiseStep[1] - 6}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={idealRise.toFixed(1) + '\"'}\r\n              align=\"right\"\r\n            />\r\n            <Text\r\n              width={50}\r\n              x={move[0] + dRunStep[0]}\r\n              y={move[1] + dRunStep[1] - 16}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                idealRun.toFixed(1) + '\"'}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Stair;\r\n","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n    let unitsTrue = props.units;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Units</div>\r\n            {unitsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    \r\n    let dimensionsTrue = props.dimensions;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Dimensions</div>\r\n            {dimensionsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dimensions","import React from 'react';\r\n\r\nconst DetailsToggle = (props) => {\r\n    \r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Treads & Risers</div>\r\n            {detailsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsToggle","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Styles/App.css\";\nimport TotalRun from \"./Components/inputs/totalrun\";\nimport TotalRise from \"./Components/inputs/totalrise\";\nimport IdealRun from \"./Components/inputs/idealrun\";\nimport IdealRise from \"./Components/inputs/idealrise\";\nimport TopStair from \"./Components/inputs/topstair\";\nimport Details from \"./Components/inputs/details\";\nimport StairAngle from \"./Components/inputs/stairangle\";\nimport Height from \"./Components/inputs/height\";\nimport FloorThickness from \"./Components/inputs/floorthickness\";\nimport Stair from \"./Components/stair\";\nimport Units from \"./Components/inputs/units\";\nimport Dimensions from \"./Components/inputs/dimensions\";\nimport DetailsToggle from \"./Components/inputs/detailsToggle\";\n\nclass App extends Component {\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 9 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n\n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0,\n\n    stairAngle: 32.5,\n    stairToggle: false,\n\n    runOn: true,\n    idealOn: false,\n    dimensions: true,\n    units: true,\n    details: true,\n    topStair: true\n  };\n\n  //Handlers for changing total run\n  changetotalRunft = event => {\n    this.setState({\n      totalRunft: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunin = event => {\n    this.setState({\n      totalRunin: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunfr = event => {\n    this.setState({\n      totalRunfr: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n\n  //Handlers for changing total rise\n  changetotalRiseft = event => {\n    this.setState({\n      totalRiseft: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisein = event => {\n    this.setState({\n      totalRisein: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisefr = event => {\n    this.setState({\n      totalRisefr: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n\n  //Handlers for changing ideal run\n  changeidealRunin = event => {\n    this.setState({\n      idealRunin: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRunfr = event => {\n    this.setState({\n      idealRunfr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing ideal rise\n  changeidealRisein = event => {\n    this.setState({\n      idealRisein: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRisefr = event => {\n    this.setState({\n      idealRisefr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing stringer\n  changestringerin = event => {\n    this.setState({ stringerin: event.target.value });\n  };\n\n  changestringerfr = event => {\n    this.setState({ stringerfr: event.target.value });\n  };\n\n  //Handlers for changing floor thickness\n  changefloorft = event => {\n    this.setState({ floorft: event.target.value });\n  };\n\n  changefloorin = event => {\n    this.setState({ floorin: event.target.value });\n  };\n\n  changefloorfr = event => {\n    this.setState({ floorfr: event.target.value });\n  };\n\n  //Handlers for headroom\n  changeheadroomlength = event => {\n    this.setState({\n      headroomLength: event.target.value\n    });\n  };\n\n  //Handlers for tread\n  changetreadin = event => {\n    this.setState({\n      treadin: event.target.value\n    });\n  };\n  changetreadfr = event => {\n    this.setState({\n      treadfr: event.target.value\n    });\n  };\n\n  //Handlers for riser\n  changeriserin = event => {\n    this.setState({\n      riserin: event.target.value\n    });\n  };\n  changeriserfr = event => {\n    this.setState({\n      riserfr: event.target.value\n    });\n  };\n\n  //Handlers for nosing\n  changenosingin = event => {\n    this.setState({\n      nosingin: event.target.value\n    });\n  };\n  changenosingfr = event => {\n    this.setState({\n      nosingfr: event.target.value\n    });\n  };\n\n  //Handlers for toggles\n  changeUnitsIn = () => {\n    this.setState({\n      units: true\n    });\n  };\n  changeUnitsMM = () => {\n    this.setState({\n      units: false\n    });\n  };\n  changeDimensionsOn = () => {\n    this.setState({\n      dimensions: true\n    });\n  };\n  changeDimensionsOff = () => {\n    this.setState({\n      dimensions: false\n    });\n  };\n  changeDetailsOn = () => {\n    this.setState({\n      details: true\n    });\n  };\n  changeDetailsOff = () => {\n    this.setState({\n      details: false\n    });\n  };\n  changeTopStairOn = () => {\n    this.setState({\n      topStair: true\n    })\n  }\n  changeTopStairOff = () => {\n    this.setState({\n      topStair: false\n    })\n  }\n\n\n  //Handler for stair angle\n  changeStairAngle = event => {\n    this.setState({\n      stairToggle: true,\n      stairAngle: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div id=\"sidebar\" className=\"col-12 col-lg-2\">\n            <div className=\"sidebar__section sidebar__section--first\">\n              <Units\n                units={this.state.units}\n                changeUnitsIn={this.changeUnitsIn}\n                changeUnitsMM={this.changeUnitsMM}\n              />\n              <Dimensions\n                dimensions={this.state.dimensions}\n                changeDimensionsOn={this.changeDimensionsOn}\n                changeDimensionsOff={this.changeDimensionsOff}\n              />\n              <DetailsToggle\n                details={this.state.details}\n                changeDetailsOn={this.changeDetailsOn}\n                changeDetailsOff={this.changeDetailsOff}\n              />\n              <TopStair\n                topStair={this.state.topStair}\n                changeTopStairOn={this.changeTopStairOn}\n                changeTopStairOff={this.changeTopStairOff}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--second\">\n              <div className=\"title\">Rise-run</div>\n              <TotalRun\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                changetotalRunft={this.changetotalRunft}\n                changetotalRunin={this.changetotalRunin}\n                changetotalRunfr={this.changetotalRunfr}\n              />\n              <TotalRise\n                totalRiseft={this.state.totalRiseft}\n                totalRisein={this.state.totalRisein}\n                totalRisefr={this.state.totalRisefr}\n                changetotalRiseft={this.changetotalRiseft}\n                changetotalRisein={this.changetotalRisein}\n                changetotalRisefr={this.changetotalRisefr}\n              />\n              <IdealRun\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                changeidealRunin={this.changeidealRunin}\n                changeidealRunfr={this.changeidealRunfr}\n              />\n              <IdealRise\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n                changeidealRisein={this.changeidealRisein}\n                changeidealRisefr={this.changeidealRisefr}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <Details\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              changetreadin={this.changetreadin}\n              changetreadfr={this.changetreadfr}\n              changeriserin={this.changeriserin}\n              changeriserfr={this.changeriserfr}\n              changenosingin={this.changenosingin}\n              changenosingfr={this.changenosingfr}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              details={this.state.details}\n            />\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--fourth\">\n              <div className=\"title\">Headroom</div>\n              <Height\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                headroomLength={this.state.headroomLength}\n                changeheadroomlength={this.changeheadroomlength}\n              />\n              <FloorThickness\n                floorft={this.state.floorft}\n                floorin={this.state.floorin}\n                floorfr={this.state.floorfr}\n                changefloorft={this.changefloorft}\n                changefloorin={this.changefloorin}\n                changefloorfr={this.changefloorfr}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <StairAngle\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              changeStairAngle={this.changeStairAngle}\n              stairAngle={this.state.stairAngle}\n            />\n          </div>\n\n          <div id=\"container\" className=\"col-12 col-lg-10\">\n            <Stair\n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              totalBoolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              details={this.state.details}\n              dimensions={this.state.dimensions}\n              stairAngle={this.state.stairAngle}\n              stairToggle={this.state.stairToggle}\n              idealBoolean={this.state.idealOn}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.scss\";\nimport \"./Styles/fonts.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\n\nfunction initApp() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nWebFont.load({\n  custom: {\n    families: [\"Sohne Mono Buch\"]\n  },\n  active: () => {\n    console.log(\"font loaded\");\n    initApp();\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}