{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/topstair.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","Components/inputs/detailsToggle.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","selectInchesMin","className","parseInt","totalRunft","Fragment","id","defaultValue","onChange","changetotalRunft","i","value","key","changetotalRunin","totalRunfr","changetotalRunfr","e","totalRunin","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Topstair","topStair","onClick","changeTopStairOn","changeTopStairOff","Details","nosingFractionsMin","nosingFractionsMax","stringerInches","details","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","nosingin","changenosingin","nosingfr","changenosingfr","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","type","stairAngle","min","max","step","changeStairAngle","Height","totalRun","parseFloat","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","window","matchMedia","lgMin","totalRise","idealRun","idealRise","preTreadThickness","treadfr","preRiserThickness","riserfr","count","totalBoolean","lengthH","headroomLength","stringerA","Math","sin","atan","stringerB","coordinates","floorThickness","idealBoolean","stairToggle","tan","PI","push","round","headroomPts","headroomTrue","windowWidth","matches","innerWidth","stairLength","wr","abs","ratio","m","n","slice","moveCenter","move","treadThickness","riserThickness","nosing","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","detailCount","topTread","topStairLine","topStairLanding","arrowWidth","textSize","strokeWidth","dRise","dRiseArrowTop","dRiseArrowBot","dRiseText","dRiseDashedTop","dRiseDashedBot","dRiseFeet","floor","dRiseInches","dRiseFraction","dRun","dRunArrowLeft","dRunArrowRight","dRunText","dRunDashedLeft","dRunDashedRight","dRunFeet","dRunInches","dRunFraction","sZ","sA","sAlpha","sC","sqrt","sX","sY","stringerTrue","dStringer","cos","dNosing","dNosingDashedLeft","dNosingDashedRight","dNosingText","dHeadroomStepX","dHeadroomStepY","p","dHeadroomDashed","headroomBoolean","dHeadroom","dHeadroomArrowTop","dHeadroomArrowBot","dHeadroomText","dHeadroomValue","toFixed","dHeadroomFeet","dHeadroomInches","dHeadroomFraction","dFloor","dFloorArrowTop","dFloorArrowBot","dFloorText","dFloorDashedTop","dFloorDashedBot","dAngleStart","dAngle","dAngleText","dStep","runCount","idealRunParsedIn","idealRunParsedFr","idealRiseParsedIn","idealRiseParsedFr","errors","ePosition","eHeadroomText","eHeadroomColor","withNosing","eRunText","eAngleText","eAngleColor","eRiseText","eMessage","width","height","innerHeight","x","y","fill","stroke","points","lineCap","lineJoin","closed","dimensions","fontFamily","fontSize","text","align","map","_","dash","rotation","arrowOffset","Units","unitsTrue","units","changeUnitsIn","changeUnitsMM","Dimensions","dimensionsTrue","changeDimensionsOn","changeDimensionsOff","DetailsToggle","detailsTrue","changeDetailsOn","changeDetailsOff","App","state","runOn","idealOn","event","setState","target","this","changetotalRunSwitchOn","changetotalRunSwitchOff","riseCount","headroomDelta","Component","Boolean","location","hostname","match","WebFont","load","custom","families","active","console","log","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e95c9f74.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n    let selectInchesMin = Array.from({length:2-1+1},(v,k)=>k+10);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n\r\n            {parseInt(props.totalRunft) === 12 ? (\r\n                <React.Fragment>\r\n                    <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                        {Array.from(selectFeet, (i) => {\r\n                            return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select id=\"totalRunInches\" defaultValue={10} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(selectInchesMin, (i) => {\r\n                            return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </React.Fragment>\r\n            ) :\r\n            (\r\n                <React.Fragment>\r\n                    <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                        {Array.from(selectFeet, (i) => {\r\n                            return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(selectInches), (e, i) => {\r\n                            return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </React.Fragment>\r\n            )}\r\n\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:24-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select value={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select value={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 13;\r\n\r\n    return (\r\n        <div className=\"select-wrapper\">\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <div className=\"dropdown__parent d-flex justify-content-start\">\r\n                <select value={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select value={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Topstair = (props) => {\r\n\r\n    let topStair = props.topStair;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Top Stair</div>\r\n            {topStair ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topstair","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n    \r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractionsMin = Array.from({length:12-5+1},(v,k)=>k+8);\r\n    let nosingFractionsMax = Array.from({length:13-5+1},(v,k)=>k+0);\r\n    let selectFractions = 16;\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n\r\n    return (\r\n        <div className=\"sidebar__section  sidebar__section--third\">\r\n            <div className=\"title\">Details</div>\r\n\r\n            {props.details ? (\r\n                <React.Fragment>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(treadInches), (e, i) => {\r\n                            return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            {props.nosingin === 0 ? (\r\n            \r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue={0} onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(nosingFractionsMin, (i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n            ):\r\n            (\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue={0} onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(nosingFractionsMax, (i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            )}\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n        \r\n            </React.Fragment>\r\n            ) : (\r\n            <React.Fragment>\r\n            <div>\r\n            <label className=\"subtitle d-flex\">Tread thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(16), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        \r\n            </React.Fragment>\r\n            )}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n\r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <div className=\"d-flex justify-content-between sidebar__section--stairangle\">\r\n                <input type=\"number\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.1\" onChange={props.changeStairAngle} className=\"stairangle__number dropdown\"/>\r\n                <input type=\"range\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.01\" onChange={props.changeStairAngle} className=\"slider slider__angle\"/>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 3);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" step=\"0.01\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider slider__height\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 1+1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n    let selectInchesMin = Array.from({length:6-1+1},(v,k)=>k+6);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(Array(maxThickness), (e, i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n\r\n                {parseInt(props.floorft) === 0 ? (\r\n                <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInchesMin, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                ): \r\n                (\r\n                <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select> \r\n                )}\r\n\r\n                <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from \"react\";\r\nimport { Stage, Layer, Line, Rect, Text } from \"react-konva\";\r\nimport \"../Styles/fonts.css\";\r\n\r\nconst Stair = props => {\r\n\r\n  var smMax = window.matchMedia(\"(max-width: 540px)\");\r\n  var smMin = window.matchMedia(\"(min-width: 540px)\");\r\n\r\n  var mdMax = window.matchMedia(\"(max-width: 720px)\");\r\n  var mdMin = window.matchMedia(\"(min-width: 720px)\");\r\n\r\n  var lgMax = window.matchMedia(\"(max-width: 960px)\");\r\n  var lgMin = window.matchMedia(\"(min-width: 960px)\");\r\n\r\n  var xlMax = window.matchMedia(\"(max-width: 1140px)\");\r\n  var xlMin = window.matchMedia(\"(min-width: 1140px)\");\r\n  \r\n\r\n\r\n  \r\n  let totalRun =\r\n    parseInt(props.totalRunft) === 12 ? (\r\n      parseInt(props.totalRunin) === 11 ? (\r\n        23\r\n      ):\r\n      (\r\n        22\r\n      )\r\n    ):\r\n    (\r\n      parseInt(props.totalRunft) +\r\n      parseInt(props.totalRunin) +\r\n      parseFloat(props.totalRunfr)\r\n    );\r\n      \r\n  let totalRise =\r\n    parseInt(props.totalRiseft) +\r\n    parseInt(props.totalRisein) +\r\n    parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let preTreadThickness = props.details ? parseFloat(props.treadin) + parseFloat(props.treadfr) : 0;\r\n  let preRiserThickness = props.details ? parseFloat(props.riserin) + parseFloat(props.riserfr) : 0;\r\n\r\n  let count = 0;\r\n\r\n  if (props.totalBoolean === true) {\r\n    count = parseInt(totalRun / idealRun);\r\n  } else if (props.totalBoolean === false) {\r\n    count = parseInt(totalRise / idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n  \r\n\r\n  let stringerA =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n    Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n    Math.sin(Math.atan(idealRise / idealRun));\r\n  if (props.details) {\r\n    stringerA =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n        )\r\n      );\r\n    stringerB =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n        )\r\n      );\r\n  } else {\r\n    stringerA =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(Math.atan(idealRun / idealRise));\r\n    stringerB =\r\n      (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n      Math.sin(Math.atan(idealRise / idealRun));\r\n  }\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = \r\n    props.floorft === 0 ? (\r\n      props.floorin < 6 ? (\r\n        6\r\n      ):\r\n      (\r\n        props.floorin\r\n      )\r\n    ):\r\n    (\r\n      parseFloat(props.floorft) +\r\n      parseFloat(props.floorin) +\r\n      parseFloat(props.floorfr)\r\n    )\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.totalBoolean === true) {\r\n    //If total run is selected (need to change so that total run changes ideal run)\r\n    if (props.idealBoolean === true) {\r\n      //If ideal is selected\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n  \r\n\r\n    } else {\r\n      count = Math.round(totalRun / 11);\r\n      idealRun = totalRun / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n        \r\n\r\n    }\r\n  } else if (props.totalBoolean === false) {\r\n    //If total rise is selected (need to change so that total rise changes ideal rise)\r\n    if (props.idealBoolean === true) {\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n        \r\n\r\n    } else {\r\n      count = Math.round(totalRise / 7);\r\n      idealRise = totalRise / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          \r\n        )\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [\r\n    coordinates[coordinates.length - 12] - idealRun * 3,\r\n    floorThickness,\r\n    coordinates[coordinates.length - 12] - idealRun * 3,\r\n    0,\r\n    coordinates[coordinates.length - 12] - idealRun + lengthH,\r\n    0,\r\n    coordinates[coordinates.length - 12] - idealRun + lengthH,\r\n    floorThickness\r\n  ];\r\n  //This part removes the headroom if the stair is too short\r\n  let headroomTrue = true;\r\n  if (\r\n    totalRise < 84 ||\r\n    idealRise * count < 84 ||\r\n    totalRun < 84 ||\r\n    idealRun * count < 84\r\n  ) {\r\n    headroomTrue = false;\r\n  }\r\n\r\n  //This is the scale factor for the stair drawing\r\n  let windowWidth = \r\n    lgMin.matches \r\n      ? (window.innerWidth * 0.82 - 15)\r\n      : (window.innerWidth);\r\n  let stairLength = (headroomPts[0] + landing + coordinates[0]);\r\n  let wr = windowWidth / (Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  let ratio = lgMin.matches ? (wr * 0.75) : (wr * 0.75);\r\n\r\n  //This transforms the drawing based on the scale factor\r\n  for (var m = 0; m < coordinates.length; m++) {\r\n    coordinates[m] = coordinates[m] * ratio;\r\n  }\r\n  for (var n = 0; n < headroomPts.length; n++) {\r\n    headroomPts[n] = headroomPts[n] * ratio;\r\n  }\r\n  if (props.topStair === false){\r\n    coordinates = coordinates.slice(4, coordinates.length - 4);\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = (windowWidth / 2) - (stairLength * ratio) / 2;\r\n  let move = lgMin.matches ? [moveCenter, 150] : [moveCenter, 100];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness =\r\n    ratio * (parseFloat(props.treadin) + parseFloat(props.treadfr));\r\n  let riserThickness =\r\n    ratio * (parseFloat(props.riserin) + parseFloat(props.riserfr));\r\n  let nosing =\r\n    ratio * (parseFloat(props.nosingin) + parseFloat(props.nosingfr));\r\n\r\n  let treadLength = idealRun * ratio + nosing + riserThickness;\r\n  let riserHeight = idealRise * ratio - treadThickness;\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  if (props.topStair){\r\n    for (let k = 2; k < coordinates.length; k += 6) {\r\n      treadsX.push(move[0] + coordinates[k] - nosing);\r\n    }\r\n  } else {\r\n    for (let k = 6; k < coordinates.length; k += 6) {\r\n      treadsX.push(move[0] + coordinates[k] - nosing);\r\n    }\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j = 3; j < coordinates.length; j += 6) {\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h = 0; h < treadsX.length; h++) {\r\n    treadsW.push(treadsX[h] + nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r = 1; r < treadsX.length; r++) {\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t = 1; t < treadsY.length; t++) {\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  let detailCount = props.topStair ? count : count - 1;\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  //This is for the line between the top stair and landing\r\n  let topStairLine = [coordinates[0], coordinates[1], coordinates[0], coordinates[5]];\r\n\r\n  //This is the landing when the top stair is toggled off\r\n  let topStairLanding = [coordinates[2], coordinates[3]];\r\n\r\n  //Dimension strings\r\n  //These are the settings for arrows, text, and stroke width\r\n  let arrowWidth = lgMin.matches ? (10 / 2) : (10 / 4);\r\n  let arrowOffset = 40;\r\n  let textLineOffset = 25;\r\n  let textNumOffset = 10;\r\n  let textSize = lgMin.matches ? 12 : 6;\r\n  let strokeWidth = lgMin.matches ? 1.5 : 0.75;\r\n\r\n\r\n  //This is the dimension string for the total rise\r\n  let dRise = \r\n    props.topStair ? (\r\n      [\r\n        coordinates[coordinates.length - 2] + arrowOffset,\r\n        0,\r\n        coordinates[coordinates.length - 2] + arrowOffset,\r\n        coordinates[coordinates.length - 9]\r\n      ]\r\n    ):\r\n    (\r\n      [\r\n        coordinates[2] + landing*ratio + arrowOffset,\r\n        0,\r\n        coordinates[2] + landing*ratio + arrowOffset,\r\n        coordinates[coordinates.length - 5]\r\n      ]\r\n    )\r\n\r\n  let dRiseArrowTop = [\r\n    dRise[0] - arrowWidth,\r\n    dRise[1] + arrowWidth,\r\n    dRise[0],\r\n    dRise[1],\r\n    dRise[0] + arrowWidth,\r\n    dRise[1] + arrowWidth\r\n  ];\r\n  let dRiseArrowBot = [\r\n    dRise[2] - arrowWidth,\r\n    dRise[3] - arrowWidth,\r\n    dRise[2],\r\n    dRise[3],\r\n    dRise[2] + arrowWidth,\r\n    dRise[3] - arrowWidth\r\n  ];\r\n  let dRiseText = [dRise[0], (dRise[1] + dRise[3]) / 2];\r\n  let dRiseDashedTop = [\r\n    coordinates[coordinates.length - 2],\r\n    dRise[1],\r\n    dRise[0],\r\n    dRise[1]\r\n  ];\r\n  let dRiseDashedBot = [\r\n    coordinates[coordinates.length - 10],\r\n    dRise[3],\r\n    dRise[0],\r\n    dRise[3]\r\n  ];\r\n  let dRiseFeet = Math.floor(\r\n    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio / 12\r\n  );\r\n  let dRiseInches = Math.floor(\r\n    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n      dRiseFeet * 12\r\n  );\r\n  let dRiseFraction = Math.round(\r\n    ((coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n      dRiseFeet * 12 -\r\n      dRiseInches) *\r\n      16\r\n  );\r\n\r\n  //This is the dimension string for the total run\r\n  let dRun = \r\n    props.topStair ? (\r\n      [\r\n        coordinates[coordinates.length - 12],\r\n        coordinates[coordinates.length - 11] + arrowOffset,\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 11] + arrowOffset\r\n      ]\r\n    ):\r\n    (\r\n      [\r\n        coordinates[coordinates.length - 8],\r\n        coordinates[coordinates.length - 7] + arrowOffset,\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 7] + arrowOffset\r\n      ]\r\n    )\r\n\r\n  let dRunArrowLeft = [\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] - arrowWidth,\r\n    dRun[0],\r\n    dRun[1],\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] + arrowWidth\r\n  ];\r\n  let dRunArrowRight = [\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] - arrowWidth,\r\n    dRun[2],\r\n    dRun[3],\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] + arrowWidth\r\n  ];\r\n  let dRunText = [(dRun[0] + dRun[2]) / 2, dRun[1]];\r\n  let dRunDashedLeft = [dRun[0], dRun[1], dRun[0], dRun[1] - arrowOffset];\r\n  let dRunDashedRight = [dRun[2], dRun[3], dRun[2], coordinates[5]];\r\n  let dRunFeet = Math.floor(\r\n    (coordinates[0] - coordinates[coordinates.length - 12]) / ratio / 12\r\n  );\r\n  let dRunInches = Math.floor(\r\n    (coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n      dRunFeet * 12\r\n  );\r\n  let dRunFraction = Math.round(\r\n    ((coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n      dRunFeet * 12 -\r\n      dRunInches) *\r\n      16\r\n  );\r\n\r\n  //This is the dimension string for the stringer\r\n  let sZ =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) * ratio;\r\n  let sA = stringerA * ratio;\r\n  let sAlpha = Math.atan(idealRise / idealRun);\r\n  let sC = Math.sqrt(sA * sA - sZ * sZ);\r\n\r\n  let sX = props.details ? (coordinates[10] + riserThickness) : (coordinates[10]);\r\n  let sY = props.details ? (coordinates[11] + treadThickness) : (coordinates[11]);\r\n\r\n  if (count <= 3) {\r\n    sX = coordinates[4] + riserThickness;\r\n    sY = coordinates[5] + treadThickness;\r\n  }\r\n\r\n  if (props.topStair === false){\r\n    sY += (idealRise * ratio);\r\n  }\r\n\r\n  let stringerTrue = count > 2;\r\n\r\n  let sX1 = sX + sC * Math.cos(sAlpha);\r\n  let sY1 = sY + sA - sC * Math.sin(sAlpha);\r\n  let dStringer = [sX, sY, sX1 + sZ / 2, sY1 + sA / 2];\r\n\r\n  //This is the dimension string for the nosing\r\n  let dNosing = props.topStair ? [coordinates[2], 0, coordinates[2] - nosing, 0] : [coordinates[4], idealRise*ratio, coordinates[4] - nosing, idealRise*ratio];\r\n  let dNosingDashedLeft = [\r\n    dNosing[0],\r\n    dNosing[1],\r\n    dNosing[0],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingDashedRight = [\r\n    dNosing[2],\r\n    dNosing[1],\r\n    dNosing[2],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingText = [(dNosing[0] + dNosing[2]) / 2, dNosing[1] - 28];\r\n\r\n  //This is the dimension string for the headroom\r\n  let dHeadroomStepX = headroomPts[6];\r\n  let dHeadroomStepY = props.topStair ? coordinates[coordinates.length - 9] : coordinates[coordinates.length - 5];\r\n  for (var p = 0; p < coordinates.length; p += 2) {\r\n    if (\r\n      dHeadroomStepX > coordinates[p + 2] &&\r\n      dHeadroomStepX < coordinates[p - 2]\r\n    ) {\r\n      dHeadroomStepY = coordinates[p + 1];\r\n    }\r\n  }\r\n\r\n  let dHeadroomDashed = \r\n    props.topStair ?\r\n      [\r\n        dHeadroomStepX,\r\n        coordinates[coordinates.length - 9],\r\n        coordinates[coordinates.length - 10],\r\n        coordinates[coordinates.length - 9]\r\n      ]\r\n  :\r\n      [\r\n        dHeadroomStepX,\r\n        coordinates[coordinates.length - 5],\r\n        coordinates[coordinates.length - 6],\r\n        coordinates[coordinates.length - 5]\r\n      ]\r\n\r\n  let headroomBoolean = false;\r\n  if (dHeadroomStepX < coordinates[coordinates.length - 10]) {\r\n    headroomBoolean = true;\r\n  }\r\n\r\n  let dHeadroom = [\r\n    dHeadroomStepX,\r\n    headroomPts[7],\r\n    dHeadroomStepX,\r\n    dHeadroomStepY\r\n  ];\r\n  let dHeadroomArrowTop = [\r\n    dHeadroom[0] - arrowWidth,\r\n    dHeadroom[1] + arrowWidth,\r\n    dHeadroom[0],\r\n    dHeadroom[1],\r\n    dHeadroom[0] + arrowWidth,\r\n    dHeadroom[1] + arrowWidth\r\n  ];\r\n  let dHeadroomArrowBot = [\r\n    dHeadroom[2] - arrowWidth,\r\n    dHeadroom[3] - arrowWidth,\r\n    dHeadroom[2],\r\n    dHeadroom[3],\r\n    dHeadroom[2] + arrowWidth,\r\n    dHeadroom[3] - arrowWidth\r\n  ];\r\n  let dHeadroomText = [dHeadroom[0], (dHeadroom[1] + dHeadroom[3]) / 2];\r\n  let dHeadroomValue =\r\n    ((parseFloat(dHeadroomStepY) - parseFloat(dHeadroom[1])) / ratio).toFixed(2);\r\n  let dHeadroomFeet = Math.floor(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio / 12\r\n  );\r\n  let dHeadroomInches = Math.floor(\r\n    (dHeadroomStepY - dHeadroom[1]) / ratio - dHeadroomFeet * 12\r\n  );\r\n  let dHeadroomFraction =\r\n    Math.round(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio -\r\n        dHeadroomFeet * 12 -\r\n        dHeadroomInches\r\n    ) * 16;\r\n\r\n  //These are for the weird dimension string bugs\r\n  if (dHeadroomFraction === 16){\r\n  \r\n    dHeadroomInches += 1;\r\n    dHeadroomFraction = 0;\r\n\r\n    if (dHeadroomInches === 12){\r\n      dHeadroomFeet += 1;\r\n      dHeadroomInches = 0;\r\n    } else if (dHeadroomInches === 11){\r\n      dHeadroomFeet += 1;\r\n      dHeadroomInches = 0;\r\n      dHeadroomFraction = 0;\r\n    }\r\n\r\n  }\r\n\r\n  //This is the dimension string for the floor thickness\r\n  let dFloor = [headroomPts[6], headroomPts[7], headroomPts[4], headroomPts[5]];\r\n  let dFloorArrowTop = [\r\n    dFloor[2] - arrowWidth,\r\n    dFloor[3] + arrowWidth,\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowWidth,\r\n    dFloor[3] + arrowWidth\r\n  ];\r\n  let dFloorArrowBot = [\r\n    dFloor[0] - arrowWidth,\r\n    dFloor[1] - arrowWidth,\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowWidth,\r\n    dFloor[1] - arrowWidth\r\n  ];\r\n  let dFloorText = [dFloor[2], dFloor[3]];\r\n  let dFloorDashedTop = [\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowOffset,\r\n    dFloor[3]\r\n  ];\r\n  let dFloorDashedBot = [\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowOffset,\r\n    dFloor[1]\r\n  ];\r\n\r\n  //This is the dimension string for the stair angle\r\n  let dAngleStart = \r\n    props.topStair ?\r\n      [\r\n        coordinates[coordinates.length - 12],\r\n        coordinates[coordinates.length - 11]\r\n      ]\r\n    :\r\n      [\r\n        coordinates[coordinates.length - 8],\r\n        coordinates[coordinates.length - 7]\r\n      ]\r\n  \r\n  let dAngle = [\r\n    dAngleStart[0],\r\n    dAngleStart[1],\r\n    dAngleStart[0] - idealRun * ratio,\r\n    dAngleStart[1],\r\n    dAngleStart[0],\r\n    dAngleStart[1] - idealRise * ratio\r\n  ];\r\n\r\n  let dAngleText = \r\n    props.topStair ?\r\n      [\r\n        coordinates[coordinates.length - 10] + (idealRun / 2) * ratio,\r\n        dAngle[1]\r\n      ]\r\n    :\r\n    [\r\n      coordinates[coordinates.length - 6] + (idealRun / 2) * ratio,\r\n      dAngle[1]\r\n    ]\r\n\r\n  let stairAngle = (Math.atan(idealRise / idealRun) * (180 / Math.PI)).toFixed(2)\r\n\r\n  if (stairAngle < 30 || count <= 3) {\r\n    if (props.topStair){\r\n      dAngleText = [\r\n        coordinates[coordinates.length - 10] + (idealRun / 2) * ratio + 10,\r\n        dAngle[1]\r\n      ];\r\n    } else {\r\n      dAngleText = [\r\n        coordinates[coordinates.length - 6] + (idealRun / 2) * ratio + 10,\r\n        dAngle[1]\r\n      ];\r\n    }\r\n  }\r\n\r\n  //These are coordinates for the rise and run dimension text\r\n  let dStep = \r\n    props.topStair ? (\r\n      [coordinates[coordinates.length - 2], coordinates[coordinates.length - 11]]\r\n    ): \r\n    (\r\n      [coordinates[2] + landing*ratio, coordinates[coordinates.length - 7]]\r\n    );\r\n\r\n  let runCount = props.topStair ? (count) : (count - 1);\r\n  let idealRunParsedIn = props.idealRunin;\r\n  let idealRunParsedFr = props.idealRunfr * 16;\r\n  let idealRiseParsedIn = props.idealRisein;\r\n  let idealRiseParsedFr = props.idealRisefr * 16;\r\n\r\n  //Error message texts\r\n  let errors = [];\r\n  let ePosition = [80, 80];\r\n\r\n  //Headroom errors\r\n  let eHeadroomText = \"\";\r\n  let eHeadroomColor = \"#ff0000\";\r\n  if (dHeadroomValue < 84 && headroomTrue) {\r\n    eHeadroomColor = \"#ff0000\";\r\n    eHeadroomText = \"Low Headroom\";\r\n    errors.push(eHeadroomText);\r\n  } else {\r\n    eHeadroomColor = \"#5541EA\";\r\n  }\r\n\r\n  //Tread length errors\r\n  let withNosing = false;\r\n  if (idealRun === 10 && props.nosingin === 0) {\r\n    withNosing = true;\r\n  }\r\n  let eRunText = \"\";\r\n  if (idealRun < 11 && withNosing) {\r\n    eRunText = \"Stair run too short\";\r\n    errors.push(eRunText);\r\n  }\r\n\r\n  //Stair angle errors\r\n  let eAngleText = \"\";\r\n  let eAngleColor = \"#5541EA\";\r\n  if (stairAngle > 42 || stairAngle < 30) {\r\n    eAngleText = \"Angle must be between 30° and 42°\";\r\n    eAngleColor = \"#ff0000\";\r\n    errors.push(eAngleText);\r\n  }\r\n\r\n  //Rise error\r\n  let eRiseText = \"\";\r\n  if (idealRise > 7){\r\n    eRiseText = 'Stair rise exceeds 7\"'\r\n    errors.push(eRiseText);\r\n  }\r\n\r\n  //Compiled error messages\r\n  let eMessage = \"\";\r\n  if (errors.length === 1) {\r\n    eMessage = errors[0];\r\n  } else if (errors.length === 2) {\r\n    eMessage = errors[0] + \" • \" + errors[1];\r\n  } else if (errors.length === 3) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2];\r\n  } else if (errors.length === 4) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2] + \" • \" + errors[3];\r\n  }\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n      <Layer>\r\n        {props.topStair === false && (\r\n          <Rect\r\n            x={move[0] + topStairLanding[0]}\r\n            y={move[1] + topStairLanding[1] - (idealRise * ratio)}\r\n            width={landing * ratio}\r\n            height={floorThickness * ratio}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n          />\r\n        )}\r\n        {props.topStair && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={topStairLine}\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.dimensions && (\r\n          <Text\r\n            x={ePosition[0]}\r\n            y={ePosition[1]}\r\n            fontFamily=\"Sohne Mono Buch\"\r\n            fontSize={textSize}\r\n            fill=\"#ff0000\"\r\n            text={eMessage}\r\n            align=\"left\"\r\n          />\r\n        )}\r\n        <Line\r\n          x={move[0]}\r\n          y={move[1]}\r\n          points={coordinates}\r\n          stroke=\"black\"\r\n          strokeWidth={strokeWidth}\r\n          lineCap=\"sqare\"\r\n          lineJoin=\"sqare\"\r\n          closed=\"true\"\r\n        />\r\n        {headroomTrue && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.details && (\r\n          <Rect\r\n            x={topTread[0]}\r\n            y={topTread[1]}\r\n            width={treadLength - riserThickness}\r\n            height={treadThickness}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n          />\r\n        )}\r\n        {props.details &&\r\n          [...Array(detailCount - 1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={strokeWidth}\r\n            />\r\n          ))}\r\n        {props.details &&\r\n          [...Array(detailCount)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={strokeWidth}\r\n            />\r\n          ))}\r\n      </Layer>\r\n      <Layer>\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRise}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textNumOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Rise\"\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textLineOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                dRiseFeet + \"' \" + dRiseInches + '\" ' + dRiseFraction + \"/16\"\r\n              }\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRun}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowLeft}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowRight}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Run\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dRunFeet + \"' \" + dRunInches + '\" ' + dRunFraction + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && props.details && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - 12 - textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Nosing\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - 12 - textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={props.nosingin + '\" ' + props.nosingfr * 16 + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloor}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Floor thickness\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1] + 15}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                props.floorft / 12 +\r\n                \"' \" +\r\n                props.floorin +\r\n                '\" ' +\r\n                props.floorfr * 16 +\r\n                \"/16\"\r\n              }\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dAngleText[0] + 14}\r\n              y={move[1] + dAngleText[1] - 14}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eAngleColor}\r\n              text={stairAngle + \"°\"}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroom}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowTop}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowBot}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dHeadroomText[0] - textLineOffset}\r\n              y={move[1] + dHeadroomText[1] - 50}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text={\r\n                dHeadroomFeet +\r\n                \"' \" +\r\n                dHeadroomInches +\r\n                '\" ' +\r\n                dHeadroomFraction +\r\n                \"/16\"\r\n              }\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dHeadroomText[0] - textNumOffset}\r\n              y={move[1] + dHeadroomText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text=\"Headroom height\"\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && headroomBoolean && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={dHeadroomDashed}\r\n            stroke=\"black\"\r\n            strokeWidth={0.75}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            dash={[3, 4]}\r\n          />\r\n        )}\r\n        {props.dimensions && stringerTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dStringer}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Stringer width\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3] + 15}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                props.stringerin +\r\n                '\" ' +\r\n                Math.round(props.stringerfr * 16) +\r\n                \"/16\"\r\n              }\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={200}\r\n              x={move[0] + dStep[0] - 200}\r\n              y={move[1] + dStep[1] + textSize / 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={runCount + \" runs at \" + idealRunParsedIn + '\" ' + idealRunParsedFr + \"/16\"}\r\n              align=\"right\"\r\n            />\r\n            <Text\r\n              width={200}\r\n              x={move[0] + dStep[0] - 200}\r\n              y={move[1] + dStep[1] + textSize / 2 + textSize + 4}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={count + \" rises at \" + idealRiseParsedIn + '\" ' + idealRiseParsedFr + \"/16\"}\r\n              align=\"right\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Stair;\r\n","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n    let unitsTrue = props.units;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Units</div>\r\n            {unitsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    \r\n    let dimensionsTrue = props.dimensions;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Dimensions</div>\r\n            {dimensionsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dimensions","import React from 'react';\r\n\r\nconst DetailsToggle = (props) => {\r\n    \r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Treads & Risers</div>\r\n            {detailsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsToggle","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Styles/App.css\";\nimport TotalRun from \"./Components/inputs/totalrun\";\nimport TotalRise from \"./Components/inputs/totalrise\";\nimport IdealRun from \"./Components/inputs/idealrun\";\nimport IdealRise from \"./Components/inputs/idealrise\";\nimport TopStair from \"./Components/inputs/topstair\";\nimport Details from \"./Components/inputs/details\";\nimport StairAngle from \"./Components/inputs/stairangle\";\nimport Height from \"./Components/inputs/height\";\nimport FloorThickness from \"./Components/inputs/floorthickness\";\nimport Stair from \"./Components/stair\";\nimport Units from \"./Components/inputs/units\";\nimport Dimensions from \"./Components/inputs/dimensions\";\nimport DetailsToggle from \"./Components/inputs/detailsToggle\";\n\nclass App extends Component {\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 9 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n\n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0.0625 * 8,\n\n    stairAngle: 32.5,\n    stairToggle: false,\n\n    runOn: true,\n    idealOn: false,\n    dimensions: true,\n    units: true,\n    details: true,\n    topStair: true\n  };\n\n  //Handlers for changing total run\n  changetotalRunft = event => {\n    this.setState({\n      totalRunft: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunin = event => {\n    this.setState({\n      totalRunin: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunfr = event => {\n    this.setState({\n      totalRunfr: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n\n  //Handlers for changing total rise\n  changetotalRiseft = event => {\n    this.setState({\n      totalRiseft: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisein = event => {\n    this.setState({\n      totalRisein: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisefr = event => {\n    this.setState({\n      totalRisefr: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n\n  //Handlers for changing ideal run\n  changeidealRunin = event => {\n    this.setState({\n      idealRunin: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRunfr = event => {\n    this.setState({\n      idealRunfr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing ideal rise\n  changeidealRisein = event => {\n    this.setState({\n      idealRisein: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRisefr = event => {\n    this.setState({\n      idealRisefr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing stringer\n  changestringerin = event => {\n    this.setState({ stringerin: event.target.value });\n  };\n\n  changestringerfr = event => {\n    this.setState({ stringerfr: event.target.value });\n  };\n\n  //Handlers for changing floor thickness\n  changefloorft = event => {\n    this.setState({ floorft: event.target.value });\n  };\n\n  changefloorin = event => {\n    this.setState({ floorin: event.target.value });\n  };\n\n  changefloorfr = event => {\n    this.setState({ floorfr: event.target.value });\n  };\n\n  //Handlers for headroom\n  changeheadroomlength = event => {\n    this.setState({\n      headroomLength: event.target.value\n    });\n  };\n\n  //Handlers for tread\n  changetreadin = event => {\n    this.setState({\n      treadin: event.target.value\n    });\n  };\n  changetreadfr = event => {\n    this.setState({\n      treadfr: event.target.value\n    });\n  };\n\n  //Handlers for riser\n  changeriserin = event => {\n    this.setState({\n      riserin: event.target.value\n    });\n  };\n  changeriserfr = event => {\n    this.setState({\n      riserfr: event.target.value\n    });\n  };\n\n  //Handlers for nosing\n  changenosingin = event => {\n    this.setState({\n      nosingin: event.target.value\n    });\n  };\n  changenosingfr = event => {\n    this.setState({\n      nosingfr: event.target.value\n    });\n  };\n\n  //Handlers for toggles\n  changeUnitsIn = () => {\n    this.setState({\n      units: true\n    });\n  };\n  changeUnitsMM = () => {\n    this.setState({\n      units: false\n    });\n  };\n  changeDimensionsOn = () => {\n    this.setState({\n      dimensions: true\n    });\n  };\n  changeDimensionsOff = () => {\n    this.setState({\n      dimensions: false\n    });\n  };\n  changeDetailsOn = () => {\n    this.setState({\n      details: true\n    });\n  };\n  changeDetailsOff = () => {\n    this.setState({\n      details: false\n    });\n  };\n  changeTopStairOn = () => {\n    this.setState({\n      topStair: true\n    })\n  }\n  changeTopStairOff = () => {\n    this.setState({\n      topStair: false\n    })\n  }\n\n\n  //Handler for stair angle\n  changeStairAngle = event => {\n    this.setState({\n      stairToggle: true,\n      stairAngle: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div id=\"sidebar\" className=\"col-12 col-lg-2\">\n            <div className=\"sidebar__section sidebar__section--first\">\n              <div className=\"title\">Toggles</div>\n              <Units\n                units={this.state.units}\n                changeUnitsIn={this.changeUnitsIn}\n                changeUnitsMM={this.changeUnitsMM}\n              />\n              <Dimensions\n                dimensions={this.state.dimensions}\n                changeDimensionsOn={this.changeDimensionsOn}\n                changeDimensionsOff={this.changeDimensionsOff}\n              />\n              <DetailsToggle\n                details={this.state.details}\n                changeDetailsOn={this.changeDetailsOn}\n                changeDetailsOff={this.changeDetailsOff}\n              />\n              <TopStair\n                topStair={this.state.topStair}\n                changeTopStairOn={this.changeTopStairOn}\n                changeTopStairOff={this.changeTopStairOff}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--second\">\n              <div className=\"title\">Rise-run</div>\n              <TotalRun\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                changetotalRunft={this.changetotalRunft}\n                changetotalRunin={this.changetotalRunin}\n                changetotalRunfr={this.changetotalRunfr}\n                changetotalRunSwitchOn={this.changetotalRunSwitchOn}\n                changetotalRunSwitchOff={this.changetotalRunSwitchOff}\n              />\n              <TotalRise\n                totalRiseft={this.state.totalRiseft}\n                totalRisein={this.state.totalRisein}\n                totalRisefr={this.state.totalRisefr}\n                changetotalRiseft={this.changetotalRiseft}\n                changetotalRisein={this.changetotalRisein}\n                changetotalRisefr={this.changetotalRisefr}\n              />\n              <IdealRun\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                changeidealRunin={this.changeidealRunin}\n                changeidealRunfr={this.changeidealRunfr}\n              />\n              <IdealRise\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n                changeidealRisein={this.changeidealRisein}\n                changeidealRisefr={this.changeidealRisefr}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <Details\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              changetreadin={this.changetreadin}\n              changetreadfr={this.changetreadfr}\n              changeriserin={this.changeriserin}\n              changeriserfr={this.changeriserfr}\n              changenosingin={this.changenosingin}\n              changenosingfr={this.changenosingfr}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              details={this.state.details}\n            />\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--fourth\">\n              <div className=\"title\">Headroom</div>\n              <Height\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                headroomLength={this.state.headroomLength}\n                changeheadroomlength={this.changeheadroomlength}\n              />\n              <FloorThickness\n                floorft={this.state.floorft}\n                floorin={this.state.floorin}\n                floorfr={this.state.floorfr}\n                changefloorft={this.changefloorft}\n                changefloorin={this.changefloorin}\n                changefloorfr={this.changefloorfr}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <StairAngle\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              changeStairAngle={this.changeStairAngle}\n              stairAngle={this.state.stairAngle}\n            />\n          </div>\n\n          <div id=\"container\" className=\"col-12 col-lg-10\">\n            <Stair\n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              totalBoolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              details={this.state.details}\n              dimensions={this.state.dimensions}\n              stairAngle={this.state.stairAngle}\n              stairToggle={this.state.stairToggle}\n              idealBoolean={this.state.idealOn}\n              topStair={this.state.topStair}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.scss\";\nimport \"./Styles/fonts.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\n\nfunction initApp() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nWebFont.load({\n  custom: {\n    families: [\"Sohne Mono Buch\"]\n  },\n  active: () => {\n    console.log(\"font loaded\");\n    initApp();\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}