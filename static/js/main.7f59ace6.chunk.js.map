{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","className","id","defaultValue","totalRunft","onChange","changetotalRunft","i","value","key","totalRunin","changetotalRunin","e","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Details","stringerInches","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","changenosingin","changenosingfr","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","idealRun","parseFloat","idealRise","stairAngle","Math","atan","PI","toFixed","type","min","max","Height","totalRun","parseInt","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","totalRise","count","boolean","lengthH","headroomLength","windowWidth","window","innerWidth","stringerA","sin","stringerB","coordinates","floorThickness","push","headroomPts","stairLength","ratio","abs","m","n","move","treadThickness","treadfr","riserThickness","riserfr","nosing","nosingin","nosingfr","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","topTread","width","height","innerHeight","x","y","points","stroke","strokeWidth","lineCap","lineJoin","closed","fill","map","_","Units","onClick","changeUnits","Dimensions","dimensions","App","state","runOn","units","event","setState","target","this","runCount","riseCount","headroomDelta","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f59ace6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown\">\r\n                {Array.from(selectFeet, (i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown\">\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown\">\r\n                {Array.from(selectFeet, (i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown\">\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:36-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <select defaultValue={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown\">\r\n                {Array.from(selectInches, (i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 12;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <select defaultValue={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                {Array.from(selectInches, (i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractions = 8 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div className=\"sidebar__section\">\r\n            <div className=\"title\">Details</div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n  \r\n    let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n    let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n    let stairAngle = (Math.atan((idealRise/idealRun)) * (180/Math.PI)).toFixed(1);\r\n\r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n                <span className=\"stairangle__number\">{stairAngle + '°'}</span>\r\n                <input type=\"range\" defaultValue={stairAngle} min=\"30\" max=\"45\" className=\"slider\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 2);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown\">\r\n                {Array.from(Array(maxThickness), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown\">\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport { Stage, Layer, Line, Rect} from 'react-konva';\r\n\r\nconst Stair = (props) => {\r\n\r\n  let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n  let totalRise = parseInt(props.totalRiseft) + parseInt(props.totalRisein) + parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let count = 0;\r\n\r\n  if (props.boolean === true){\r\n  count = parseInt(totalRun/idealRun);\r\n  } else if (props.boolean === false){\r\n    count = parseInt(totalRise/idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n\r\n  let windowWidth = (window.innerWidth * 0.82) - 15;\r\n\r\n  let stringerA = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = (parseFloat(props.floorft) + parseFloat(props.floorin) + parseFloat(props.floorfr));\r\n\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.boolean === true){ //If total run is adjusted\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRun)-(idealRun*i), idealRise*i, (totalRun)-(idealRun*(i+1)), idealRise*i, (totalRun)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n\r\n  } else if (props.boolean === false){ //If total rise is adjusted\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRise)-(idealRun*i), idealRise*i, (totalRise)-(idealRun*(i+1)), idealRise*i, (totalRise)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [ (coordinates[coordinates.length-12]-(idealRun*3)), floorThickness, (coordinates[coordinates.length-12]-(idealRun*3)), 0, coordinates[coordinates.length-12]-idealRun + lengthH, 0, coordinates[coordinates.length-12]-idealRun + lengthH, floorThickness ];\r\n\r\n  // //This is for the floor opening dimension\r\n  // let headroomDelta = coordinates[3] - (coordinates[coordinates.length-12]-idealRun + lengthH);\r\n\r\n  //This scales the drawing\r\n  let stairLength = ((headroomPts[0]) + landing + coordinates[0]);\r\n  let wr = (windowWidth)/(Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  var ratio = wr*0.75;\r\n\r\n  //This transforms the drawing based on the scale\r\n  for (var m=0; m<coordinates.length; m++){\r\n    coordinates[m] = coordinates[m]*ratio\r\n  }\r\n  for (var n=0; n<headroomPts.length; n++){\r\n    headroomPts[n] = headroomPts[n]*ratio\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = ( (windowWidth/2) - (stairLength*ratio/2) );\r\n  let move = [moveCenter,100];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness = ratio * (parseFloat(props.treadin) + parseFloat(props.treadfr));\r\n  let riserThickness = ratio * (parseFloat(props.riserin) + parseFloat(props.riserfr));\r\n  let nosing = ratio * (parseFloat(props.nosingin) + parseFloat(props.nosingfr));\r\n\r\n  let treadLength = (idealRun*ratio + nosing + riserThickness);\r\n  let riserHeight = (idealRise*ratio - treadThickness);\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  for (let k=2; k<(coordinates.length); k+=6){\r\n    treadsX.push(move[0] + coordinates[k] - nosing);\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j=3; j<coordinates.length; j+=6){\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h=0; h<treadsX.length; h++){\r\n    treadsW.push(treadsX[h]+nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r=1; r<treadsX.length; r++){\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t=1; t<treadsY.length; t++){\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={coordinates}\r\n            stroke=\"black\"\r\n            strokeWidth={0.75}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n        <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={0.75}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n          <Rect\r\n              x={topTread[0]}\r\n              y={topTread[1]}\r\n              width={treadLength + landing*ratio - riserThickness}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n            />\r\n          {\r\n          [...Array(count-1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n            />\r\n          ))\r\n          }\r\n          {[...Array(count)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n  )\r\n}\r\n\r\nexport default Stair","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n        return (\r\n                <div>\r\n                    <div className=\"subtitle\">Units</div>\r\n                    <button className=\"toggle toggle__left toggle--active\" value={true} onClick={props.changeUnits}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" value={false} onClick={props.changeUnits}>MM</button>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    if (props.dimensions === true){\r\n        return (\r\n                <div>\r\n                    <div className=\"subtitle\">Dimensions</div>\r\n                    <div className=\"d-flex\">\r\n                        <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnits}>ON</button>\r\n                        <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnits}>OFF</button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    } else if (props.dimensions === false){\r\n        return (\r\n            <div>\r\n                <div className=\"subtitle\">Dimensions</div>\r\n                <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnits}>ON</button>\r\n                <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnits}>OFF</button>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Dimensions","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Styles/App.css';\nimport TotalRun from './Components/inputs/totalrun';\nimport TotalRise from './Components/inputs/totalrise';\nimport IdealRun from './Components/inputs/idealrun';\nimport IdealRise from './Components/inputs/idealrise';\nimport Details from './Components/inputs/details';\nimport StairAngle from './Components/inputs/stairangle';\nimport Height from './Components/inputs/height';\nimport FloorThickness from './Components/inputs/floorthickness';\nimport Stair from './Components/stair';\nimport Units from './Components/inputs/units';\nimport Dimensions from './Components/inputs/dimensions';\n\n\nclass App extends Component {\n\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 9 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    \n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0,\n\n    runOn: true,\n    dimensions: false,\n    units: true\n\n  }\n\n  // //Retrieves run count\n  // runCount = () => {\n  //   let sumRuntotal = parseInt( parseInt(this.state.totalRunft) + parseInt(this.state.totalRunin) + parseFloat(this.state.totalRunfr) );\n  //   let sumRunideal = parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) );\n  //   return ( sumRuntotal / sumRunideal )\n  // }\n\n  // //Retrieves rise count\n  // riseCount = () => {\n  //   let sumRisetotal = parseInt( parseInt(this.state.totalRiseft) + parseInt(this.state.totalRisein) + parseFloat(this.state.totalRisefr) );\n  //   let sumRiseideal = parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) );\n  //   return ( sumRisetotal / sumRiseideal )\n  // }\n\n  // //Changes rise input values based on run\n  // riseChange = () => {\n  //   let totalRise = this.runCount * (parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) ) );\n  //   return totalRise\n  // }\n\n  // //Changes run input values based on rise\n  // runChange = () => {\n  //   let totalRun = this.riseCount * (parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) ) );\n  //   return totalRun\n  // }\n\n  //Handlers for changing total run\n  changetotalRunft = (event) => {\n      this.setState({\n        totalRunft:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunin = (event) => {\n      this.setState({\n        totalRunin:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunfr = (event) => {\n      this.setState({\n        totalRunfr:event.target.value,\n        runOn: true\n      })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = (event) => {\n      this.setState({\n        totalRiseft:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisein = (event) => {\n      this.setState({\n        totalRisein:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisefr = (event) => {\n      this.setState({\n        totalRisefr:event.target.value,\n        runOn: false\n      })\n  }\n\n  //Handlers for changing ideal run\n  changeidealRunin = (event) => {\n    this.setState({idealRunin:event.target.value})\n  }\n  changeidealRunfr = (event) => {\n      this.setState({idealRunfr:event.target.value})\n  }\n\n  //Handlers for changing ideal rise\n  changeidealRisein = (event) => {\n      this.setState({idealRisein:event.target.value})\n  }\n  changeidealRisefr = (event) => {\n      this.setState({idealRisefr:event.target.value})\n  }\n\n  //Handlers for changing stringer\n  changestringerin = (event) => {\n    this.setState({stringerin:event.target.value})\n  }\n\n  changestringerfr = (event) => {\n    this.setState({stringerfr:event.target.value})\n  }\n\n  //Handlers for changing floor thickness\n  changefloorft = (event) => {\n    this.setState({floorft:event.target.value})\n  }\n\n  changefloorin = (event) => {\n    this.setState({floorin:event.target.value})\n  }\n\n  changefloorfr = (event) => {\n    this.setState({floorfr:event.target.value})\n  }\n  \n  //Handlers for headroom\n  changeheadroomlength = (event) => {\n    this.setState({\n      headroomLength:event.target.value\n    })\n  }\n\n  //Handlers for tread\n  changetreadin = (event) => {\n    this.setState({\n      treadin:event.target.value\n    })\n  }\n  changetreadfr = (event) => {\n    this.setState({\n      treadfr:event.target.value\n    })\n  }\n\n  //Handlers for riser\n  changeriserin = (event) => {\n    this.setState({\n      riserin:event.target.value\n    })\n  }\n  changeriserfr = (event) => {\n    this.setState({\n      riserfr:event.target.value\n    })\n  }\n\n   //Handlers for nosing\n   changenosingin = (event) => {\n    this.setState({\n      nosingin:event.target.value\n    })\n  }\n  changenosingfr = (event) => {\n    this.setState({\n      nosingfr:event.target.value\n    })\n  }\n\n  //Handlers for toggles\n  changeUnits = (event) => {\n    this.setState({\n      units: event.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row d-flex\">\n\n          <div id=\"sidebar\" className=\"col-2\">\n              <div className=\"sidebar__section\">\n                <Units \n                  units = {this.state.units}\n                  changeUnits = {this.changeUnits}\n                />\n                <Dimensions \n                  dimensions = {this.state.dimensions}\n                />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <div className=\"sidebar__section\">\n                <div className=\"title\">Rise-run</div>\n                <TotalRun \n                    totalRunft = {this.state.totalRunft}\n                    totalRunin = {this.state.totalRunin}\n                    totalRunfr = {this.state.totalRunfr}\n                    changetotalRunft = {this.changetotalRunft}\n                    changetotalRunin = {this.changetotalRunin}\n                    changetotalRunfr = {this.changetotalRunfr}\n                />\n                <TotalRise \n                    totalRiseft = {this.state.totalRiseft}\n                    totalRisein = {this.state.totalRisein}\n                    totalRisefr = {this.state.totalRisefr}\n                    changetotalRiseft = {this.changetotalRiseft}\n                    changetotalRisein = {this.changetotalRisein}\n                    changetotalRisefr = {this.changetotalRisefr}\n                />\n                <IdealRun \n                    idealRunin = {this.state.idealRunin}\n                    idealRunfr = {this.state.idealRunfr}\n                    changeidealRunin = {this.changeidealRunin}\n                    changeidealRunfr = {this.changeidealRunfr}\n                />\n                <IdealRise \n                    idealRisein = {this.state.idealRisein}\n                    idealRisefr = {this.state.idealRisefr}\n                    changeidealRisein = {this.changeidealRisein}\n                    changeidealRisefr = {this.changeidealRisefr}\n                />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <Details \n                stringerin={this.state.stringerin}\n                stringerfr={this.state.stringerfr}\n                treadin={this.state.treadin}\n                treadfr={this.state.treadfr}\n                riserin={this.state.riserin}\n                riserfr={this.state.riserfr}\n                nosingin={this.state.nosingin}\n                nosingfr={this.state.nosingfr}\n                changestringerin={this.changestringerin}\n                changestringerfr={this.changestringerfr}\n                changetreadin={this.changetreadin}\n                changetreadfr={this.changetreadfr}\n                changeriserin={this.changeriserin}\n                changeriserfr={this.changeriserfr}\n                changenosingin={this.changenosingin}\n                changenosingfr={this.changenosingfr}\n              />\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <div className=\"sidebar__section\">\n                  <div className=\"title\">Headroom</div>\n                  <Height \n                    totalRunft={this.state.totalRunft}\n                    totalRunin={this.state.totalRunin}\n                    totalRunfr={this.state.totalRunfr}\n                    headroomLength={this.state.headroomLength}\n                    changeheadroomlength={this.changeheadroomlength}\n                  />\n                  <FloorThickness \n                    floorft={this.state.floorft}\n                    floorin={this.state.floorin}\n                    floorfr={this.state.floorfr}\n                    changefloorft={this.changefloorft}\n                    changefloorin={this.changefloorin}\n                    changefloorfr={this.changefloorfr}\n                  />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n            \n              <StairAngle\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n              />\n\n          </div>\n\n          <div id=\"container\" className=\"col-10\">\n            <Stair \n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              boolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n            />\n          </div>\n        \n      </div>\n\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.scss';\nimport './Styles/fonts.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}