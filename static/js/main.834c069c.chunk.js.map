{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","Components/inputs/detailsToggle.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","className","id","defaultValue","totalRunft","onChange","changetotalRunft","i","value","key","totalRunin","changetotalRunin","e","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Details","stringerInches","detailsTrue","details","nosing","Fragment","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","changenosingin","changenosingfr","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","parseFloat","stairAngle","type","min","max","step","changeStairAngle","Height","totalRun","parseInt","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","totalRise","idealRun","idealRise","count","boolean","lengthH","headroomLength","windowWidth","window","innerWidth","stringerA","Math","sin","atan","stringerB","coordinates","floorThickness","stairToggle","tan","PI","console","log","push","headroomPts","headroomTrue","stairLength","ratio","abs","m","n","move","treadThickness","treadfr","riserThickness","riserfr","nosingin","nosingfr","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","topTread","dRise","dRiseArrowTop","dRiseArrowBot","dRiseText","dRiseDashedTop","dRiseDashedBot","dRun","dRunArrowLeft","dRunArrowRight","dRunText","dRunDashedLeft","dRunDashedRight","dNosing","round","dNosingDashedLeft","dNosingDashedRight","dNosingText","dHeadroomStepX","dHeadroomStepY","p","dFloor","dFloorArrowTop","dFloorArrowBot","dFloorText","dFloorDashedTop","dFloorDashedBot","dAngleStart","dAngle","dAngleText","toFixed","width","height","innerHeight","x","y","points","stroke","strokeWidth","lineCap","lineJoin","closed","fill","map","_","dimensions","dash","fontFamily","fontSize","text","rotation","align","arrowWidth","Units","unitsTrue","units","onClick","changeUnitsIn","changeUnitsMM","Dimensions","dimensionsTrue","changeDimensionsOn","changeDimensionsOff","DetailsToggle","changeDetailsOn","changeDetailsOff","App","state","runOn","event","setState","target","this","runCount","riseCount","headroomDelta","Component","Boolean","location","hostname","match","require","load","custom","families","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.834c069c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:36-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 13;\r\n\r\n    return (\r\n        <div className=\"select-wrapper\">\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <div className=\"dropdown__parent d-flex justify-content-start\">\r\n                <select defaultValue={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractions = 16;\r\n    let nosingFractions2 = 8;\r\n    let selectFractions = 16;\r\n\r\n    let detailsTrue = props.details;\r\n    let nosing = (props.nosing == 1);\r\n\r\n    return (\r\n        <div className=\"sidebar__section\">\r\n            <div className=\"title\">Details</div>\r\n\r\n            {detailsTrue ? (\r\n                <React.Fragment>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(treadInches), (e, i) => {\r\n                            return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            nosing ? (\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            ) : (\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(nosingFractions2), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            )\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </React.Fragment>\r\n            ) : (\r\n            <React.Fragment>\r\n            <div>\r\n            <label className=\"subtitle d-flex\">Tread thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </React.Fragment>\r\n            )}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n  \r\n    let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n    let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <span className=\"stairangle__number dropdown\">{props.stairAngle + '°'}</span>\r\n                <input type=\"range\" defaultValue={props.stairAngle} min=\"30\" max=\"45\" step=\"0.1\" onChange={props.changeStairAngle} className=\"slider slider__angle\"/>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 3);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider slider__height\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 1+1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(Array(maxThickness), (e, i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport { Stage, Layer, Line, Rect, Text } from 'react-konva';\r\nimport '../Styles/fonts.css';\r\n\r\nconst Stair = (props) => {\r\n\r\n  let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n  let totalRise = parseInt(props.totalRiseft) + parseInt(props.totalRisein) + parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let count = 0;\r\n\r\n  if (props.boolean === true){\r\n  count = parseInt(totalRun/idealRun);\r\n  } else if (props.boolean === false){\r\n    count = parseInt(totalRise/idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n\r\n  let windowWidth = (window.innerWidth * 0.82) - 15;\r\n\r\n  let stringerA = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = (parseFloat(props.floorft) + parseFloat(props.floorin) + parseFloat(props.floorfr));\r\n\r\n  if (props.stairToggle === true){\r\n    idealRun = parseFloat(idealRise / Math.tan(props.stairAngle * (Math.PI / 180)));\r\n  }\r\n  console.log(props.stairToggle);\r\n\r\n\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.boolean === true){ //If total run is selected (need to change so that total run changes ideal run)\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRun)-(idealRun*i), idealRise*i, (totalRun)-(idealRun*(i+1)), idealRise*i, (totalRun)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n\r\n  } else if (props.boolean === false){ //If total rise is selected (need to change so that total rise changes ideal rise)\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRise)-(idealRun*i), idealRise*i, (totalRise)-(idealRun*(i+1)), idealRise*i, (totalRise)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [ (coordinates[coordinates.length-12]-(idealRun*3)), floorThickness, (coordinates[coordinates.length-12]-(idealRun*3)), 0, coordinates[coordinates.length-12]-idealRun + lengthH, 0, coordinates[coordinates.length-12]-idealRun + lengthH, floorThickness ];\r\n  let headroomTrue = totalRise > 90 || (idealRise * count) > 90;\r\n\r\n  //Calculate total run from the pre-scaled coordinates\r\n  let preTotalRun = [];\r\n  let preTotalRise = [];\r\n\r\n  //This scales the drawing\r\n  let stairLength = ((headroomPts[0]) + landing + coordinates[0]);\r\n  let wr = (windowWidth)/(Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  var ratio = wr*0.75;\r\n\r\n  //This transforms the drawing based on the scale\r\n  for (var m=0; m<coordinates.length; m++){\r\n    coordinates[m] = coordinates[m]*ratio\r\n  }\r\n  for (var n=0; n<headroomPts.length; n++){\r\n    headroomPts[n] = headroomPts[n]*ratio\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = ( (windowWidth/2) - (stairLength*ratio/2) );\r\n  let move = [moveCenter,150];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness = ratio * (parseFloat(props.treadin) + parseFloat(props.treadfr));\r\n  let riserThickness = ratio * (parseFloat(props.riserin) + parseFloat(props.riserfr));\r\n  let nosing = ratio * (parseFloat(props.nosingin) + parseFloat(props.nosingfr));\r\n\r\n  let treadLength = (idealRun*ratio + nosing + riserThickness);\r\n  let riserHeight = (idealRise*ratio - treadThickness);\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  for (let k=2; k<(coordinates.length); k+=6){\r\n    treadsX.push(move[0] + coordinates[k] - nosing);\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j=3; j<coordinates.length; j+=6){\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h=0; h<treadsX.length; h++){\r\n    treadsW.push(treadsX[h]+nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r=1; r<treadsX.length; r++){\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t=1; t<treadsY.length; t++){\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  //Dimension strings\r\n  //This is the arrow dimensions\r\n  let arrowWidth = 10 / 2;\r\n  let arrowOffset = 40;\r\n  let textLineOffset = 40;\r\n  let textNumOffset = 20;\r\n\r\n  //This is the dimension string for the total rise\r\n  let dRise = [coordinates[coordinates.length-2]+arrowOffset, 0, coordinates[coordinates.length-2]+arrowOffset, coordinates[coordinates.length-9]];\r\n  let dRiseArrowTop = [dRise[0]-arrowWidth, dRise[1]+arrowWidth, dRise[0], dRise[1], dRise[0]+arrowWidth, dRise[1]+arrowWidth];\r\n  let dRiseArrowBot = [dRise[2]-arrowWidth, dRise[3]-arrowWidth, dRise[2], dRise[3], dRise[2]+arrowWidth, dRise[3]-arrowWidth];\r\n  let dRiseText = [dRise[0], (dRise[1]+dRise[3])/2];\r\n  let dRiseDashedTop = [coordinates[coordinates.length-2], dRise[1], dRise[0], dRise[1]];\r\n  let dRiseDashedBot = [coordinates[coordinates.length-10], dRise[3], dRise[0], dRise[3]];\r\n\r\n  //This is the dimension string for the total run\r\n  let dRun = [coordinates[coordinates.length-12], coordinates[coordinates.length-11]+arrowOffset, coordinates[0], coordinates[coordinates.length-11]+arrowOffset];\r\n  let dRunArrowLeft = [dRun[0]+arrowWidth, dRun[1]-arrowWidth, dRun[0], dRun[1], dRun[0]+arrowWidth, dRun[1]+arrowWidth];\r\n  let dRunArrowRight = [dRun[2]-arrowWidth, dRun[3]-arrowWidth, dRun[2], dRun[3], dRun[2]-arrowWidth, dRun[3]+arrowWidth];\r\n  let dRunText = [(dRun[0]+dRun[2])/2, dRun[1]];\r\n  let dRunDashedLeft = [dRun[0], dRun[1], dRun[0], dRun[1]-arrowOffset];\r\n  let dRunDashedRight = [dRun[2], dRun[3], dRun[2], coordinates[1]];\r\n\r\n  //This is the dimension string for the stringer\r\n  let dStringer = [coordinates[Math.round(coordinates.length/2)], coordinates[Math.round(coordinates.length/2)+1], ];\r\n\r\n  //This is the dimension string for the nosing\r\n  let dNosing = [coordinates[2], 0, coordinates[2]-(nosing), 0]; \r\n  let dNosingDashedLeft = [dNosing[0], dNosing[1], dNosing[0], dNosing[1]-arrowOffset];\r\n  let dNosingDashedRight = [dNosing[2], dNosing[1], dNosing[2], dNosing[1]-arrowOffset];\r\n  let dNosingText = [(dNosing[0]+dNosing[2])/2, dNosing[1]-28];\r\n\r\n  //This is the dimension string for the headroom\r\n  let dHeadroomStepX = headroomPts[6];\r\n  let dHeadroomStepY = coordinates[coordinates.length-9];\r\n  for (var p=0; p<coordinates.length; p++){\r\n    if (dHeadroomStepX === coordinates[p]){\r\n      dHeadroomStepY = coordinates[p+1];\r\n    }\r\n  }\r\n  let dHeadroom = [dHeadroomStepX, headroomPts[7], dHeadroomStepX, dHeadroomStepY];\r\n\r\n  //This is the dimension string for the floor thickness\r\n  let dFloor = [headroomPts[6], headroomPts[7], headroomPts[4], headroomPts[5]];\r\n  let dFloorArrowTop = [dFloor[2]-arrowWidth, dFloor[3]+arrowWidth, dFloor[2], dFloor[3], dFloor[2]+arrowWidth, dFloor[3]+arrowWidth];\r\n  let dFloorArrowBot= [dFloor[0]-arrowWidth, dFloor[1]-arrowWidth, dFloor[0], dFloor[1], dFloor[0]+arrowWidth, dFloor[1]-arrowWidth];\r\n  let dFloorText = [dFloor[0], (dFloor[1]+dFloor[3])/2];\r\n  let dFloorDashedTop = [dFloor[2], dFloor[3], dFloor[2]+arrowOffset, dFloor[3]];\r\n  let dFloorDashedBot = [dFloor[0], dFloor[1], dFloor[0]+arrowOffset, dFloor[1]];\r\n\r\n  //This is the dimension string for the stair angle\r\n  let dAngleStart = [coordinates[coordinates.length-12],coordinates[coordinates.length-11]];\r\n  let dAngle = [dAngleStart[0], dAngleStart[1], dAngleStart[0] - 36, dAngleStart[1], dAngleStart[0], dAngleStart[1]-(36*Math.tan(Math.atan(idealRise/idealRun)))];\r\n  let dAngleText = [dAngle[2], dAngle[3]];\r\n  let stairAngle = (Math.atan((idealRise/idealRun)) * (180/Math.PI)).toFixed(1);\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={coordinates}\r\n            stroke=\"black\"\r\n            strokeWidth={1.5}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n          {headroomTrue &&\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={1.5}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n          }\r\n          {props.details &&\r\n          <Rect\r\n              x={topTread[0]}\r\n              y={topTread[1]}\r\n              width={treadLength + landing*ratio - riserThickness}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          }\r\n          {props.details &&\r\n          [...Array(count-1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          ))\r\n          }\r\n          {props.details &&\r\n          [...Array(count)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          ))\r\n          }\r\n        </Layer>\r\n        <Layer> \r\n        {props.dimensions &&\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRise}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dRiseText[0] + textLineOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Rise\"\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dRiseText[0] + textNumOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text={props.totalRiseft/12 + \"' \" + props.totalRisein + '\" ' + props.totalRisefr}\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n        {props.dimensions &&\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRun}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowLeft}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowRight}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textLineOffset}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Run\"\r\n              align=\"center\"\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textNumOffset}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text={props.totalRunft/12 + \"' \" + props.totalRunin + '\" ' + props.totalRunfr*16 + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n        {props.dimensions &&\r\n          props.details &&\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - 12 - textLineOffset}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text=\"Nosing\"\r\n              align=\"center\"\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - 12 - textNumOffset}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text={props.nosingin + '\" ' + (props.nosingfr*16) + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n        {props.dimensions &&\r\n          headroomTrue &&\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]+arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]+arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]+arrowOffset}\r\n              y={move[1]}\r\n              points={dFloor}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dFloorText[0] + 25}\r\n              y={move[1] + dFloorText[1] - 12}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text=\"Floor thickness\"\r\n              align=\"center\"\r\n            />\r\n            <Text \r\n              width={150}\r\n              x={move[0] + dFloorText[0] + 25}\r\n              y={move[1] + dFloorText[1] - 12 + textNumOffset}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text={(props.floorft/12) + \"' \" + props.floorin + '\" ' + (props.floorfr*16) + \"/16\"}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n        {props.dimensions &&\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0] - (arrowWidth*4)}\r\n              y={move[1]}\r\n              points={dAngle}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Text \r\n              width={40}\r\n              x={move[0] + dAngleText[0] - 30 - textLineOffset}\r\n              y={move[1] + dAngleText[1] - 12}\r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={12}\r\n              fill=\"#5541EA\"\r\n              text={stairAngle + '°'}\r\n              align=\"right\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n        </Layer>\r\n      </Stage>\r\n  )\r\n}\r\n\r\nexport default Stair","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n    let unitsTrue = props.units;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Units</div>\r\n            {unitsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    \r\n    let dimensionsTrue = props.dimensions;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Dimensions</div>\r\n            {dimensionsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dimensions","import React from 'react';\r\n\r\nconst DetailsToggle = (props) => {\r\n    \r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Details</div>\r\n            {detailsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsToggle","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Styles/App.css';\nimport TotalRun from './Components/inputs/totalrun';\nimport TotalRise from './Components/inputs/totalrise';\nimport IdealRun from './Components/inputs/idealrun';\nimport IdealRise from './Components/inputs/idealrise';\nimport Details from './Components/inputs/details';\nimport StairAngle from './Components/inputs/stairangle';\nimport Height from './Components/inputs/height';\nimport FloorThickness from './Components/inputs/floorthickness';\nimport Stair from './Components/stair';\nimport Units from './Components/inputs/units';\nimport Dimensions from './Components/inputs/dimensions';\nimport DetailsToggle from './Components/inputs/detailsToggle';\n\n\nclass App extends Component {\n\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 9 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    \n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0,\n\n    stairAngle: 32.5,\n    stairToggle: false,\n\n    runOn: true,\n    dimensions: true,\n    units: true,\n    details: true\n\n  }\n\n  //Handlers for changing total run\n  changetotalRunft = (event) => {\n      this.setState({\n        totalRunft:event.target.value,\n        runOn: true,\n        stairToggle: false\n      })\n  }\n  changetotalRunin = (event) => {\n      this.setState({\n        totalRunin:event.target.value,\n        runOn: true,\n        stairToggle: false\n      })\n  }\n  changetotalRunfr = (event) => {\n      this.setState({\n        totalRunfr:event.target.value,\n        runOn: true,\n        stairToggle: false\n      })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = (event) => {\n      this.setState({\n        totalRiseft:event.target.value,\n        runOn: false,\n        stairToggle: false\n      })\n  }\n  changetotalRisein = (event) => {\n      this.setState({\n        totalRisein:event.target.value,\n        runOn: false,\n        stairToggle: false\n      })\n  }\n  changetotalRisefr = (event) => {\n      this.setState({\n        totalRisefr:event.target.value,\n        runOn: false,\n        stairToggle: false\n      })\n  }\n\n  //Handlers for changing ideal run\n  changeidealRunin = (event) => {\n    this.setState({\n      idealRunin:event.target.value,\n      stairToggle: false\n    })\n  }\n  changeidealRunfr = (event) => {\n      this.setState({\n        idealRunfr:event.target.value,\n        stairToggle: false\n      })\n  }\n\n  //Handlers for changing ideal rise\n  changeidealRisein = (event) => {\n      this.setState({\n        idealRisein:event.target.value,\n        stairToggle: false\n      })\n  }\n  changeidealRisefr = (event) => {\n      this.setState({\n        idealRisefr:event.target.value,\n        stairToggle: false\n      })\n  }\n\n  //Handlers for changing stringer\n  changestringerin = (event) => {\n    this.setState({stringerin:event.target.value})\n  }\n\n  changestringerfr = (event) => {\n    this.setState({stringerfr:event.target.value})\n  }\n\n  //Handlers for changing floor thickness\n  changefloorft = (event) => {\n    this.setState({floorft:event.target.value})\n  }\n\n  changefloorin = (event) => {\n    this.setState({floorin:event.target.value})\n  }\n\n  changefloorfr = (event) => {\n    this.setState({floorfr:event.target.value})\n  }\n  \n  //Handlers for headroom\n  changeheadroomlength = (event) => {\n    this.setState({\n      headroomLength:event.target.value\n    })\n  }\n\n  //Handlers for tread\n  changetreadin = (event) => {\n    this.setState({\n      treadin:event.target.value\n    })\n  }\n  changetreadfr = (event) => {\n    this.setState({\n      treadfr:event.target.value\n    })\n  }\n\n  //Handlers for riser\n  changeriserin = (event) => {\n    this.setState({\n      riserin:event.target.value\n    })\n  }\n  changeriserfr = (event) => {\n    this.setState({\n      riserfr:event.target.value\n    })\n  }\n\n   //Handlers for nosing\n   changenosingin = (event) => {\n    this.setState({\n      nosingin:event.target.value\n    })\n  }\n  changenosingfr = (event) => {\n    this.setState({\n      nosingfr:event.target.value\n    })\n  }\n\n  //Handlers for toggles\n  changeUnitsIn = () => {\n    this.setState({\n      units: true\n    })\n  }\n  changeUnitsMM = () => {\n    this.setState({\n      units: false\n    })\n  }\n  changeDimensionsOn = () => {\n    this.setState({\n      dimensions: true\n    })\n  }\n  changeDimensionsOff = () => {\n    this.setState({\n      dimensions: false\n    })\n  }\n  changeDetailsOn = () => {\n    this.setState({\n      details: true\n    })\n  }\n  changeDetailsOff = () => {\n    this.setState({\n      details: false\n    })\n  }\n\n  //Handler for stair angle\n  changeStairAngle = (event) => {\n    this.setState({\n      stairToggle: true,\n      stairAngle: event.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n\n          <div id=\"sidebar\" className=\"col-2 \">\n              <div className=\"sidebar__section\">\n                <Units \n                  units = {this.state.units}\n                  changeUnitsIn = {this.changeUnitsIn}\n                  changeUnitsMM = {this.changeUnitsMM}\n                />\n                <Dimensions \n                  dimensions = {this.state.dimensions}\n                  changeDimensionsOn = {this.changeDimensionsOn}\n                  changeDimensionsOff = {this.changeDimensionsOff}\n                />\n                <DetailsToggle \n                  details = {this.state.details}\n                  changeDetailsOn = {this.changeDetailsOn}\n                  changeDetailsOff = {this.changeDetailsOff}\n                />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <div className=\"sidebar__section\">\n                <div className=\"title\">Rise-run</div>\n                <TotalRun \n                    totalRunft = {this.state.totalRunft}\n                    totalRunin = {this.state.totalRunin}\n                    totalRunfr = {this.state.totalRunfr}\n                    changetotalRunft = {this.changetotalRunft}\n                    changetotalRunin = {this.changetotalRunin}\n                    changetotalRunfr = {this.changetotalRunfr}\n                />\n                <TotalRise \n                    totalRiseft = {this.state.totalRiseft}\n                    totalRisein = {this.state.totalRisein}\n                    totalRisefr = {this.state.totalRisefr}\n                    changetotalRiseft = {this.changetotalRiseft}\n                    changetotalRisein = {this.changetotalRisein}\n                    changetotalRisefr = {this.changetotalRisefr}\n                />\n                <IdealRun \n                    idealRunin = {this.state.idealRunin}\n                    idealRunfr = {this.state.idealRunfr}\n                    changeidealRunin = {this.changeidealRunin}\n                    changeidealRunfr = {this.changeidealRunfr}\n                />\n                <IdealRise \n                    idealRisein = {this.state.idealRisein}\n                    idealRisefr = {this.state.idealRisefr}\n                    changeidealRisein = {this.changeidealRisein}\n                    changeidealRisefr = {this.changeidealRisefr}\n                />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <Details \n                stringerin={this.state.stringerin}\n                stringerfr={this.state.stringerfr}\n                treadin={this.state.treadin}\n                treadfr={this.state.treadfr}\n                riserin={this.state.riserin}\n                riserfr={this.state.riserfr}\n                nosingin={this.state.nosingin}\n                nosingfr={this.state.nosingfr}\n                changestringerin={this.changestringerin}\n                changestringerfr={this.changestringerfr}\n                changetreadin={this.changetreadin}\n                changetreadfr={this.changetreadfr}\n                changeriserin={this.changeriserin}\n                changeriserfr={this.changeriserfr}\n                changenosingin={this.changenosingin}\n                changenosingfr={this.changenosingfr}\n                details={this.state.details}\n              />\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <div className=\"sidebar__section\">\n                  <div className=\"title\">Headroom</div>\n                  <Height \n                    totalRunft={this.state.totalRunft}\n                    totalRunin={this.state.totalRunin}\n                    totalRunfr={this.state.totalRunfr}\n                    headroomLength={this.state.headroomLength}\n                    changeheadroomlength={this.changeheadroomlength}\n                  />\n                  <FloorThickness \n                    floorft={this.state.floorft}\n                    floorin={this.state.floorin}\n                    floorfr={this.state.floorfr}\n                    changefloorft={this.changefloorft}\n                    changefloorin={this.changefloorin}\n                    changefloorfr={this.changefloorfr}\n                  />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n            \n              <StairAngle\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n                changeStairAngle={this.changeStairAngle}\n                stairAngle={this.state.stairAngle}\n              />\n\n          </div>\n\n          <div id=\"container\" className=\"col-10\">\n            <Stair \n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              boolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              details={this.state.details}\n              dimensions={this.state.dimensions}\n              stairAngle={this.state.stairAngle}\n              stairToggle={this.state.stairToggle}\n            />\n          </div>\n        \n      </div>\n\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.scss';\nimport './Styles/fonts.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nvar WebFont = require('webfontloader');\nWebFont.load({\n\tcustom: {\n\t\tfamilies: ['Söhne Mono Buch', 'Söhne Mono Halbfett', 'Söhne Buch', 'Söhne Buch Kursiv', 'Söhne Halbfett', 'Pilat', 'Pilat Compressed']\n\t}\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}