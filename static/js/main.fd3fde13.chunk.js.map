{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","Components/inputs/detailsToggle.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","className","id","defaultValue","totalRunft","onChange","changetotalRunft","i","value","key","totalRunin","changetotalRunin","e","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Details","stringerInches","detailsTrue","details","Fragment","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","changenosingin","changenosingfr","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","idealRun","parseFloat","idealRise","stairAngle","Math","atan","PI","toFixed","type","min","max","Height","totalRun","parseInt","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","require","load","then","console","log","totalRise","count","boolean","lengthH","headroomLength","windowWidth","window","innerWidth","stringerA","sin","stringerB","coordinates","floorThickness","push","headroomPts","stairLength","ratio","abs","m","n","move","treadThickness","treadfr","riserThickness","riserfr","nosing","nosingin","nosingfr","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","topTread","dRise","dRiseArrowTop","dRiseArrowBot","dRiseDashedTop","dRiseDashedBot","width","height","innerHeight","x","y","points","stroke","strokeWidth","lineCap","lineJoin","closed","fill","map","_","dimensions","dash","fontFamily","fontSize","text","align","Units","unitsTrue","units","onClick","changeUnitsIn","changeUnitsMM","Dimensions","dimensionsTrue","changeDimensionsOn","changeDimensionsOff","DetailsToggle","changeDetailsOn","changeDetailsOff","App","state","runOn","event","setState","target","this","runCount","riseCount","headroomDelta","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd3fde13.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(selectFeet, (i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:36-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 12;\r\n\r\n    return (\r\n        <div className=\"select-wrapper\">\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <div className=\"dropdown__parent d-flex justify-content-start\">\r\n                <select defaultValue={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(selectInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractions = 8 + 1;\r\n    let selectFractions = 16;\r\n\r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div className=\"sidebar__section\">\r\n            <div className=\"title\">Details</div>\r\n\r\n            {detailsTrue ? (\r\n                <React.Fragment>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(treadInches), (e, i) => {\r\n                            return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </React.Fragment>\r\n            ) : (\r\n            <React.Fragment>\r\n            <div>\r\n            <label className=\"subtitle d-flex\">Tread thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(treadInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(Array(nosingInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(nosingFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch disabled\">\r\n                    {Array.from(stringerInches, (i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction disabled\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            </React.Fragment>\r\n            )}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n  \r\n    let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n    let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n    let stairAngle = (Math.atan((idealRise/idealRun)) * (180/Math.PI)).toFixed(1);\r\n\r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <span className=\"stairangle__number dropdown\">{stairAngle + '°'}</span>\r\n                <input type=\"range\" defaultValue={stairAngle} min=\"30\" max=\"45\" className=\"slider slider__angle\"/>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 2);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider slider__height\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 1+1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown dropdown__feet\">\r\n                    {Array.from(Array(maxThickness), (e, i) => {\r\n                        return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown dropdown__fraction\">\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport { Stage, Layer, Line, Rect, Text } from 'react-konva';\r\nimport '../Styles/fonts.css';\r\n\r\nconst Stair = (props) => {\r\n\r\n  var FontFaceObserver = require('fontfaceobserver');\r\n  var font = new FontFaceObserver('Söhne Mono Buch');\r\n  font.load().then(function () {\r\n    console.log('My Family has loaded');\r\n  });\r\n\r\n  let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n  let totalRise = parseInt(props.totalRiseft) + parseInt(props.totalRisein) + parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let count = 0;\r\n\r\n  if (props.boolean === true){\r\n  count = parseInt(totalRun/idealRun);\r\n  } else if (props.boolean === false){\r\n    count = parseInt(totalRise/idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n\r\n  let windowWidth = (window.innerWidth * 0.82) - 15;\r\n\r\n  let stringerA = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = (parseFloat(props.floorft) + parseFloat(props.floorin) + parseFloat(props.floorfr));\r\n\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.boolean === true){ //If total run is selected (need to change so that total run changes ideal run)\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRun)-(idealRun*i), idealRise*i, (totalRun)-(idealRun*(i+1)), idealRise*i, (totalRun)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n\r\n  } else if (props.boolean === false){ //If total rise is selected (need to change so that total rise changes ideal rise)\r\n    for (let i=0; i<count; i++){\r\n      coordinates.push( (totalRise)-(idealRun*i), idealRise*i, (totalRise)-(idealRun*(i+1)), idealRise*i, (totalRise)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [ (coordinates[coordinates.length-12]-(idealRun*3)), floorThickness, (coordinates[coordinates.length-12]-(idealRun*3)), 0, coordinates[coordinates.length-12]-idealRun + lengthH, 0, coordinates[coordinates.length-12]-idealRun + lengthH, floorThickness ];\r\n\r\n  // //This is for the floor opening dimension\r\n  // let headroomDelta = coordinates[3] - (coordinates[coordinates.length-12]-idealRun + lengthH);\r\n\r\n  //Calculate total run from the pre-scaled coordinates\r\n  let preTotalRun = [];\r\n  let preTotalRise = [];\r\n\r\n  //This scales the drawing\r\n  let stairLength = ((headroomPts[0]) + landing + coordinates[0]);\r\n  let wr = (windowWidth)/(Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  var ratio = wr*0.75;\r\n\r\n  //This transforms the drawing based on the scale\r\n  for (var m=0; m<coordinates.length; m++){\r\n    coordinates[m] = coordinates[m]*ratio\r\n  }\r\n  for (var n=0; n<headroomPts.length; n++){\r\n    headroomPts[n] = headroomPts[n]*ratio\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = ( (windowWidth/2) - (stairLength*ratio/2) );\r\n  let move = [moveCenter,200];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness = ratio * (parseFloat(props.treadin) + parseFloat(props.treadfr));\r\n  let riserThickness = ratio * (parseFloat(props.riserin) + parseFloat(props.riserfr));\r\n  let nosing = ratio * (parseFloat(props.nosingin) + parseFloat(props.nosingfr));\r\n\r\n  let treadLength = (idealRun*ratio + nosing + riserThickness);\r\n  let riserHeight = (idealRise*ratio - treadThickness);\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  for (let k=2; k<(coordinates.length); k+=6){\r\n    treadsX.push(move[0] + coordinates[k] - nosing);\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j=3; j<coordinates.length; j+=6){\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h=0; h<treadsX.length; h++){\r\n    treadsW.push(treadsX[h]+nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r=1; r<treadsX.length; r++){\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t=1; t<treadsY.length; t++){\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  //Dimension strings\r\n  //This is the arrow dimensions\r\n  let arrowWidth = 10 / 2;\r\n  let arrowHeight = 10 / 2;\r\n  let arrowOffset = 40;\r\n\r\n  //This is the dimension string for the total rise\r\n  let dRiseval = 0;\r\n  let dRise = [coordinates[coordinates.length-2]+arrowOffset, 0, coordinates[coordinates.length-2]+arrowOffset, coordinates[coordinates.length-9]];\r\n  let dRiseArrowTop = [dRise[0]-arrowWidth, dRise[1]+arrowHeight, dRise[0], dRise[1], dRise[0]+arrowWidth, dRise[1]+arrowHeight];\r\n  let dRiseArrowBot = [dRise[2]-arrowWidth, dRise[3]-arrowHeight, dRise[2], dRise[3], dRise[2]+arrowWidth, dRise[3]-arrowHeight];\r\n  let dRiseText = [];\r\n  let dRiseDashedTop = [coordinates[coordinates.length-2], dRise[1], dRise[0], dRise[1]];\r\n  let dRiseDashedBot = [coordinates[coordinates.length-10], dRise[3], dRise[0], dRise[3]];\r\n\r\n  //This is the dimension string for the total run\r\n  let dRun = [];\r\n  //This is the dimension string for the stringer\r\n  let dStringer = [];\r\n  //This is the dimension string for the nosing\r\n  let dNosing = []; \r\n  //This is the dimension string for the headroom\r\n  let dHeadroom = [];\r\n  //This is the dimension string for the floor thickness\r\n  let dFloor = [];\r\n  //This is the dimension string for the stair angle\r\n  let dAngle = [];\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={coordinates}\r\n            stroke=\"black\"\r\n            strokeWidth={1.5}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n        <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={1.5}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n          {props.details &&\r\n          <Rect\r\n              x={topTread[0]}\r\n              y={topTread[1]}\r\n              width={treadLength + landing*ratio - riserThickness}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          }\r\n          {props.details &&\r\n          [...Array(count-1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          ))\r\n          }\r\n          {props.details &&\r\n          [...Array(count)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={1.5}\r\n            />\r\n          ))\r\n          }\r\n        </Layer>\r\n        <Layer> \r\n        {props.dimensions &&\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRise}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap='round'\r\n              lineJoin='round'\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap='sqare'\r\n              lineJoin='sqare'\r\n              dash={[3, 4]}\r\n            />\r\n            <Text \r\n              fontFamily=\"Söhne Mono Buch\"\r\n              fontSize={14}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Rise\"\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n        </Layer>\r\n      </Stage>\r\n  )\r\n}\r\n\r\nexport default Stair","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n    let unitsTrue = props.units;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Units</div>\r\n            {unitsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    \r\n    let dimensionsTrue = props.dimensions;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Dimensions</div>\r\n            {dimensionsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dimensions","import React from 'react';\r\n\r\nconst DetailsToggle = (props) => {\r\n    \r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Details</div>\r\n            {detailsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsToggle","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Styles/App.css';\nimport TotalRun from './Components/inputs/totalrun';\nimport TotalRise from './Components/inputs/totalrise';\nimport IdealRun from './Components/inputs/idealrun';\nimport IdealRise from './Components/inputs/idealrise';\nimport Details from './Components/inputs/details';\nimport StairAngle from './Components/inputs/stairangle';\nimport Height from './Components/inputs/height';\nimport FloorThickness from './Components/inputs/floorthickness';\nimport Stair from './Components/stair';\nimport Units from './Components/inputs/units';\nimport Dimensions from './Components/inputs/dimensions';\nimport DetailsToggle from './Components/inputs/detailsToggle';\n\n\nclass App extends Component {\n\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 9 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    \n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0,\n\n    runOn: true,\n    dimensions: true,\n    units: true,\n    details: true\n\n  }\n\n  // //Retrieves run count\n  // runCount = () => {\n  //   let sumRuntotal = parseInt( parseInt(this.state.totalRunft) + parseInt(this.state.totalRunin) + parseFloat(this.state.totalRunfr) );\n  //   let sumRunideal = parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) );\n  //   return ( sumRuntotal / sumRunideal )\n  // }\n\n  // //Retrieves rise count\n  // riseCount = () => {\n  //   let sumRisetotal = parseInt( parseInt(this.state.totalRiseft) + parseInt(this.state.totalRisein) + parseFloat(this.state.totalRisefr) );\n  //   let sumRiseideal = parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) );\n  //   return ( sumRisetotal / sumRiseideal )\n  // }\n\n  // //Changes rise input values based on run\n  // riseChange = () => {\n  //   let totalRise = this.runCount * (parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) ) );\n  //   return totalRise\n  // }\n\n  // //Changes run input values based on rise\n  // runChange = () => {\n  //   let totalRun = this.riseCount * (parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) ) );\n  //   return totalRun\n  // }\n\n  //Handlers for changing total run\n  changetotalRunft = (event) => {\n      this.setState({\n        totalRunft:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunin = (event) => {\n      this.setState({\n        totalRunin:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunfr = (event) => {\n      this.setState({\n        totalRunfr:event.target.value,\n        runOn: true\n      })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = (event) => {\n      this.setState({\n        totalRiseft:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisein = (event) => {\n      this.setState({\n        totalRisein:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisefr = (event) => {\n      this.setState({\n        totalRisefr:event.target.value,\n        runOn: false\n      })\n  }\n\n  //Handlers for changing ideal run\n  changeidealRunin = (event) => {\n    this.setState({idealRunin:event.target.value})\n  }\n  changeidealRunfr = (event) => {\n      this.setState({idealRunfr:event.target.value})\n  }\n\n  //Handlers for changing ideal rise\n  changeidealRisein = (event) => {\n      this.setState({idealRisein:event.target.value})\n  }\n  changeidealRisefr = (event) => {\n      this.setState({idealRisefr:event.target.value})\n  }\n\n  //Handlers for changing stringer\n  changestringerin = (event) => {\n    this.setState({stringerin:event.target.value})\n  }\n\n  changestringerfr = (event) => {\n    this.setState({stringerfr:event.target.value})\n  }\n\n  //Handlers for changing floor thickness\n  changefloorft = (event) => {\n    this.setState({floorft:event.target.value})\n  }\n\n  changefloorin = (event) => {\n    this.setState({floorin:event.target.value})\n  }\n\n  changefloorfr = (event) => {\n    this.setState({floorfr:event.target.value})\n  }\n  \n  //Handlers for headroom\n  changeheadroomlength = (event) => {\n    this.setState({\n      headroomLength:event.target.value\n    })\n  }\n\n  //Handlers for tread\n  changetreadin = (event) => {\n    this.setState({\n      treadin:event.target.value\n    })\n  }\n  changetreadfr = (event) => {\n    this.setState({\n      treadfr:event.target.value\n    })\n  }\n\n  //Handlers for riser\n  changeriserin = (event) => {\n    this.setState({\n      riserin:event.target.value\n    })\n  }\n  changeriserfr = (event) => {\n    this.setState({\n      riserfr:event.target.value\n    })\n  }\n\n   //Handlers for nosing\n   changenosingin = (event) => {\n    this.setState({\n      nosingin:event.target.value\n    })\n  }\n  changenosingfr = (event) => {\n    this.setState({\n      nosingfr:event.target.value\n    })\n  }\n\n  //Handlers for toggles\n  changeUnitsIn = () => {\n    this.setState({\n      units: true\n    })\n  }\n  changeUnitsMM = () => {\n    this.setState({\n      units: false\n    })\n  }\n  changeDimensionsOn = () => {\n    this.setState({\n      dimensions: true\n    })\n  }\n  changeDimensionsOff = () => {\n    this.setState({\n      dimensions: false\n    })\n  }\n  changeDetailsOn = () => {\n    this.setState({\n      details: true\n    })\n  }\n  changeDetailsOff = () => {\n    this.setState({\n      details: false\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n\n          <div id=\"sidebar\" className=\"col-2 \">\n              <div className=\"sidebar__section\">\n                <Units \n                  units = {this.state.units}\n                  changeUnitsIn = {this.changeUnitsIn}\n                  changeUnitsMM = {this.changeUnitsMM}\n                />\n                <Dimensions \n                  dimensions = {this.state.dimensions}\n                  changeDimensionsOn = {this.changeDimensionsOn}\n                  changeDimensionsOff = {this.changeDimensionsOff}\n                />\n                <DetailsToggle \n                  details = {this.state.details}\n                  changeDetailsOn = {this.changeDetailsOn}\n                  changeDetailsOff = {this.changeDetailsOff}\n                />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <div className=\"sidebar__section\">\n                <div className=\"title\">Rise-run</div>\n                <TotalRun \n                    totalRunft = {this.state.totalRunft}\n                    totalRunin = {this.state.totalRunin}\n                    totalRunfr = {this.state.totalRunfr}\n                    changetotalRunft = {this.changetotalRunft}\n                    changetotalRunin = {this.changetotalRunin}\n                    changetotalRunfr = {this.changetotalRunfr}\n                />\n                <TotalRise \n                    totalRiseft = {this.state.totalRiseft}\n                    totalRisein = {this.state.totalRisein}\n                    totalRisefr = {this.state.totalRisefr}\n                    changetotalRiseft = {this.changetotalRiseft}\n                    changetotalRisein = {this.changetotalRisein}\n                    changetotalRisefr = {this.changetotalRisefr}\n                />\n                <IdealRun \n                    idealRunin = {this.state.idealRunin}\n                    idealRunfr = {this.state.idealRunfr}\n                    changeidealRunin = {this.changeidealRunin}\n                    changeidealRunfr = {this.changeidealRunfr}\n                />\n                <IdealRise \n                    idealRisein = {this.state.idealRisein}\n                    idealRisefr = {this.state.idealRisefr}\n                    changeidealRisein = {this.changeidealRisein}\n                    changeidealRisefr = {this.changeidealRisefr}\n                />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <Details \n                stringerin={this.state.stringerin}\n                stringerfr={this.state.stringerfr}\n                treadin={this.state.treadin}\n                treadfr={this.state.treadfr}\n                riserin={this.state.riserin}\n                riserfr={this.state.riserfr}\n                nosingin={this.state.nosingin}\n                nosingfr={this.state.nosingfr}\n                changestringerin={this.changestringerin}\n                changestringerfr={this.changestringerfr}\n                changetreadin={this.changetreadin}\n                changetreadfr={this.changetreadfr}\n                changeriserin={this.changeriserin}\n                changeriserfr={this.changeriserfr}\n                changenosingin={this.changenosingin}\n                changenosingfr={this.changenosingfr}\n                details={this.state.details}\n              />\n\n              <div className=\"sidebar__section--border\"></div>\n\n              <div className=\"sidebar__section\">\n                  <div className=\"title\">Headroom</div>\n                  <Height \n                    totalRunft={this.state.totalRunft}\n                    totalRunin={this.state.totalRunin}\n                    totalRunfr={this.state.totalRunfr}\n                    headroomLength={this.state.headroomLength}\n                    changeheadroomlength={this.changeheadroomlength}\n                  />\n                  <FloorThickness \n                    floorft={this.state.floorft}\n                    floorin={this.state.floorin}\n                    floorfr={this.state.floorfr}\n                    changefloorft={this.changefloorft}\n                    changefloorin={this.changefloorin}\n                    changefloorfr={this.changefloorfr}\n                  />\n              </div>\n\n              <div className=\"sidebar__section--border\"></div>\n            \n              <StairAngle\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n              />\n\n          </div>\n\n          <div id=\"container\" className=\"col-10\">\n            <Stair \n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              boolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              details={this.state.details}\n              dimensions={this.state.dimensions}\n            />\n          </div>\n        \n      </div>\n\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.scss';\nimport './Styles/fonts.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}