{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","id","defaultValue","totalRunft","onChange","changetotalRunft","Array","from","e","i","value","key","totalRunin","changetotalRunin","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Details","treadin","changetreadin","changetreadfr","riserin","changeriserin","changeriserfr","changenosingin","changenosingfr","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","type","min","max","Height","totalRun","parseInt","parseFloat","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","totalRise","idealRun","idealRise","xCount","yCount","lengthH","headroomLength","windowWidth","window","innerWidth","move","stringerA","Math","sin","atan","stringerB","coordinates","floorThickness","boolean","push","length","headroomPts","treadThickness","treadfr","riserThickness","riserfr","nosing","nosingin","nosingfr","treadLength","riserHeight","treadsX","k","treadsY","risersY","j","treadsW","h","console","log","width","height","innerHeight","x","y","points","stroke","strokeWidth","lineCap","lineJoin","closed","map","_","fill","App","state","runOn","event","setState","target","className","this","runCount","riseCount","headroomDelta","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ca580d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = 60 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Total run</label>\r\n            <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft}>\r\n                {Array.from(Array(selectFeet), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = 30 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Total rise</label>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft}>\r\n                {Array.from(Array(selectFeet), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Ideal run</label>\r\n            <select defaultValue={props.idealRunin} onChange={props.changeidealRunin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRunfr} onChange={props.changeidealRunfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Ideal rise</label>\r\n            <select defaultValue={props.idealRisein} onChange={props.changeidealRisein}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRisefr} onChange={props.changeidealRisefr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    let selectInches = 6 + 1;\r\n    let selectFractions = 16;\r\n    let selectStringer = 11 + 1;\r\n\r\n    return (\r\n        <div>\r\n            <div>Details</div>\r\n            <div>\r\n                <label>Tread thickness</label>\r\n                <select defaultValue={props.treadin} onChange={props.changetreadin}>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changetreadfr}>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Riser thickness</label>\r\n                <select defaultValue={props.riserin} onChange={props.changeriserin}>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changeriserfr}>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Nosing</label>\r\n                <select defaultValue=\"0\" onChange={props.changenosingin}>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue=\"0\" onChange={props.changenosingfr}>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin}>\r\n                    {Array.from(Array(selectStringer), (e, i) => {\r\n                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr}>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <label>Stair Angle</label>\r\n            <input type=\"range\" min=\"30\" max=\"45\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 2);\r\n\r\n    return (\r\n        <div>\r\n            <label>Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" max={headroomMax} onChange={props.changeheadroomlength} />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Floor Thickness</label>\r\n            <select defaultValue={props.floorft} onChange={props.changefloorft}>\r\n                {Array.from(Array(maxThickness), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorin} onChange={props.changefloorin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorfr} onChange={props.changefloorfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport { Stage, Layer, Line, Rect} from 'react-konva';\r\n\r\nconst Stair = (props) => {\r\n\r\n  let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n  let totalRise = parseInt(props.totalRiseft) + parseInt(props.totalRisein) + parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let xCount = parseInt(totalRun/idealRun);\r\n  let yCount = parseInt(totalRise/idealRise);\r\n\r\n  let landing = 36;\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n  let scaleFactor = (window.innerWidth*0.65) / (idealRun*xCount + lengthH + landing);\r\n\r\n  let windowWidth = window.innerWidth * 0.65;\r\n  let move = [windowWidth/2,100];\r\n\r\n  let stringerA = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = (parseFloat(props.floorft) + parseFloat(props.floorin) + parseFloat(props.floorfr));\r\n\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.boolean === true){\r\n    for (let i=0; i<xCount; i++){\r\n      coordinates.push( (totalRise)-(idealRun*i), idealRise*i, (totalRise)-(idealRun*(i+1)), idealRise*i, (totalRise)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  } else if (props.boolean === false){\r\n    for (let i=0; i<yCount; i++){\r\n      coordinates.push( (totalRun)-(idealRun*i), idealRise*i, (totalRun)-(idealRun*(i+1)), idealRise*i, (totalRun)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    //This creates the landing and stringer\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [ (coordinates[coordinates.length-12]-(idealRun*3)), floorThickness, (coordinates[coordinates.length-12]-(idealRun*3)), 0, coordinates[coordinates.length-12]-idealRun + lengthH, 0, coordinates[coordinates.length-12]-idealRun + lengthH, floorThickness ];\r\n\r\n  // //This is for the floor opening dimension\r\n  // let headroomDelta = coordinates[3] - (coordinates[coordinates.length-12]-idealRun + lengthH);\r\n\r\n  //This creates the treads, risers, and nosing\r\n  let treadThickness = parseFloat(props.treadin) + parseFloat(props.treadfr);\r\n  let riserThickness = parseFloat(props.riserin) + parseFloat(props.riserfr);\r\n  let nosing = parseFloat(props.nosingin) + parseFloat(props.nosingfr);\r\n\r\n  let treadLength = idealRun + nosing + riserThickness;\r\n  let riserHeight = idealRise - treadThickness;\r\n\r\n  let treadsX = [];\r\n  for (let k=2; k<(coordinates.length); k+=6){\r\n    treadsX.push(move[0] + coordinates[k] - nosing);\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j=3; j<coordinates.length; j+=6){\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h=0; h<treadsX.length; h++){\r\n    treadsW.push(treadsX[h]+nosing);\r\n  }\r\n\r\nconsole.log(nosing);\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={coordinates}\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n        <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n          {[...Array(xCount)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX[i]}\r\n              y={treadsY[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"red\"\r\n            />\r\n          ))}\r\n          {[...Array(xCount)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"red\"\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n  )\r\n}\r\n\r\nexport default Stair","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport TotalRun from './Components/inputs/totalrun';\nimport TotalRise from './Components/inputs/totalrise';\nimport IdealRun from './Components/inputs/idealrun';\nimport IdealRise from './Components/inputs/idealrise';\nimport Details from './Components/inputs/details';\nimport StairAngle from './Components/inputs/stairangle';\nimport Height from './Components/inputs/height';\nimport FloorThickness from './Components/inputs/floorthickness';\nimport Stair from './Components/stair';\n\n\nclass App extends Component {\n\n  state = {\n    totalRunft: 10 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 6 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 7 * Math.sin(Math.atan(7 / 11)),\n    stringerfr: 0,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    \n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n\n    riserin: 1,\n    riserfr: 0,\n\n    nosingin: 0,\n    nosingfr: 0,\n\n    runOn: true\n\n  }\n\n  // //Retrieves run count\n  // runCount = () => {\n  //   let sumRuntotal = parseInt( parseInt(this.state.totalRunft) + parseInt(this.state.totalRunin) + parseFloat(this.state.totalRunfr) );\n  //   let sumRunideal = parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) );\n  //   return ( sumRuntotal / sumRunideal )\n  // }\n\n  // //Retrieves rise count\n  // riseCount = () => {\n  //   let sumRisetotal = parseInt( parseInt(this.state.totalRiseft) + parseInt(this.state.totalRisein) + parseFloat(this.state.totalRisefr) );\n  //   let sumRiseideal = parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) );\n  //   return ( sumRisetotal / sumRiseideal )\n  // }\n\n  // //Changes rise input values based on run\n  // riseChange = () => {\n  //   let totalRise = this.runCount * (parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) ) );\n  //   return totalRise\n  // }\n\n  // //Changes run input values based on rise\n  // runChange = () => {\n  //   let totalRun = this.riseCount * (parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) ) );\n  //   return totalRun\n  // }\n\n  //Handlers for changing total run\n  changetotalRunft = (event) => {\n      this.setState({\n        totalRunft:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunin = (event) => {\n      this.setState({\n        totalRunin:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunfr = (event) => {\n      this.setState({\n        totalRunfr:event.target.value,\n        runOn: true\n      })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = (event) => {\n      this.setState({\n        totalRiseft:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisein = (event) => {\n      this.setState({\n        totalRisein:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisefr = (event) => {\n      this.setState({\n        totalRisefr:event.target.value,\n        runOn: false\n      })\n  }\n\n  //Handlers for changing ideal run\n  changeidealRunin = (event) => {\n    this.setState({idealRunin:event.target.value})\n  }\n  changeidealRunfr = (event) => {\n      this.setState({idealRunfr:event.target.value})\n  }\n\n  //Handlers for changing ideal rise\n  changeidealRisein = (event) => {\n      this.setState({idealRisein:event.target.value})\n  }\n  changeidealRisefr = (event) => {\n      this.setState({idealRisefr:event.target.value})\n  }\n\n  //Handlers for changing stringer\n  changestringerin = (event) => {\n    this.setState({stringerin:event.target.value})\n  }\n\n  changestringerfr = (event) => {\n    this.setState({stringerfr:event.target.value})\n  }\n\n  //Handlers for changing floor thickness\n  changefloorft = (event) => {\n    this.setState({floorft:event.target.value})\n  }\n\n  changefloorin = (event) => {\n    this.setState({floorin:event.target.value})\n  }\n\n  changefloorfr = (event) => {\n    this.setState({floorfr:event.target.value})\n  }\n  \n  //Handlers for headroom\n  changeheadroomlength = (event) => {\n    this.setState({\n      headroomLength:event.target.value\n    })\n  }\n\n  //Handlers for tread\n  changetreadin = (event) => {\n    this.setState({\n      treadin:event.target.value\n    })\n  }\n  changetreadfr = (event) => {\n    this.setState({\n      treadfr:event.target.value\n    })\n  }\n\n  //Handlers for riser\n  changeriserin = (event) => {\n    this.setState({\n      riserin:event.target.value\n    })\n  }\n  changeriserfr = (event) => {\n    this.setState({\n      riserfr:event.target.value\n    })\n  }\n\n   //Handlers for nosing\n   changenosingin = (event) => {\n    this.setState({\n      nosingin:event.target.value\n    })\n  }\n  changenosingfr = (event) => {\n    this.setState({\n      nosingfr:event.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n\n          <div id=\"sidebar\" className=\"col-4\">\n              <div>\n                <div>Rise-run</div>\n                <TotalRun \n                    totalRunft = {this.state.totalRunft}\n                    totalRunin = {this.state.totalRunin}\n                    totalRunfr = {this.state.totalRunfr}\n                    changetotalRunft = {this.changetotalRunft}\n                    changetotalRunin = {this.changetotalRunin}\n                    changetotalRunfr = {this.changetotalRunfr}\n                />\n                <TotalRise \n                    totalRiseft = {this.state.totalRiseft}\n                    totalRisein = {this.state.totalRisein}\n                    totalRisefr = {this.state.totalRisefr}\n                    changetotalRiseft = {this.changetotalRiseft}\n                    changetotalRisein = {this.changetotalRisein}\n                    changetotalRisefr = {this.changetotalRisefr}\n                />\n                <IdealRun \n                    idealRunin = {this.state.idealRunin}\n                    idealRunfr = {this.state.idealRunfr}\n                    changeidealRunin = {this.changeidealRunin}\n                    changeidealRunfr = {this.changeidealRunfr}\n                />\n                <IdealRise \n                    idealRisein = {this.state.idealRisein}\n                    idealRisefr = {this.state.idealRisefr}\n                    changeidealRisein = {this.changeidealRisein}\n                    changeidealRisefr = {this.changeidealRisefr}\n                />\n              </div>\n\n            <Details \n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n              changetreadin={this.changetreadin}\n              changetreadfr={this.changetreadfr}\n              changeriserin={this.changeriserin}\n              changeriserfr={this.changeriserfr}\n              changenosingin={this.changenosingin}\n              changenosingfr={this.changenosingfr}\n            />\n\n            <div>\n                <div>Headroom</div>\n                <Height \n                  totalRunft={this.state.totalRunft}\n                  totalRunin={this.state.totalRunin}\n                  totalRunfr={this.state.totalRunfr}\n                  headroomLength={this.state.headroomLength}\n                  changeheadroomlength={this.changeheadroomlength}\n                />\n                <FloorThickness \n                  floorft={this.state.floorft}\n                  floorin={this.state.floorin}\n                  floorfr={this.state.floorfr}\n                  changefloorft={this.changefloorft}\n                  changefloorin={this.changefloorin}\n                  changefloorfr={this.changefloorfr}\n                />\n\n            </div>\n\n            <StairAngle />\n        </div>\n\n        <div className=\"col-8\" id=\"container\">\n          <Stair \n            totalRunft={this.state.totalRunft}\n            totalRunin={this.state.totalRunin}\n            totalRunfr={this.state.totalRunfr}\n            totalRiseft={this.state.totalRiseft}\n            totalRisein={this.state.totalRisein}\n            totalRisefr={this.state.totalRisefr}\n            idealRunin={this.state.idealRunin}\n            idealRunfr={this.state.idealRunfr}\n            idealRisein={this.state.idealRisein}\n            idealRisefr={this.state.idealRisefr}\n            boolean={this.state.runOn}\n            runCount={this.state.runCount}\n            riseCount={this.state.riseCount}\n            stringerin={this.state.stringerin}\n            stringerfr={this.state.stringerfr}\n            floorft={this.state.floorft}\n            floorin={this.state.floorin}\n            floorfr={this.state.floorfr}\n            headroomLength={this.state.headroomLength}\n            headroomDelta={this.state.headroomDelta}\n            treadin={this.state.treadin}\n            treadfr={this.state.treadfr}\n            riserin={this.state.riserin}\n            riserfr={this.state.riserfr}\n            nosingin={this.state.nosingin}\n            nosingfr={this.state.nosingfr}\n          />\n        </div>\n        \n      </div>\n\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}