{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/sidebarSections/riserun.js","Components/sidebarSections/details.js","Components/inputs/height.js","Components/inputs/flooropening.js","Components/inputs/floorthickness.js","Components/sidebarSections/headroom.js","Components/sidebarSections/stairangle.js","Components/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","id","Array","from","e","i","value","key","TotalRise","IdealRun","IdealRise","RiseRun","Details","Height","FloorOpening","FloorThickness","Headroom","StairAngle","type","min","max","Sidebar","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.155f5581.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let maxFeetRun = 50 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Total run</label>\r\n            <select id=\"totalRunFeet\">\r\n                {Array.from(Array(maxFeetRun), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunInches\">\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunFraction\">\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let maxFeetRise = 30 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Total rise</label>\r\n            <select id=\"totalRise\">\r\n                {Array.from(Array(maxFeetRise), (e, i) => {\r\n                    return ( <option key={i}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = () => {\r\n\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Ideal run</label>\r\n            <select>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = () => {\r\n\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Ideal rise</label>\r\n            <select>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\nimport TotalRun from '../inputs/totalrun';\r\nimport TotalRise from '../inputs/totalrise';\r\nimport IdealRun from '../inputs/idealrun';\r\nimport IdealRise from '../inputs/idealrise';\r\n\r\nconst RiseRun = () => {\r\n    return (\r\n    <div>\r\n        <div>Rise-run</div>\r\n        <TotalRun />\r\n        <TotalRise />\r\n        <IdealRun />\r\n        <IdealRise />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RiseRun\r\n","import React from 'react';\r\n\r\nconst Details = () => {\r\n\r\n    let selectInches = 6 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <div>Details</div>\r\n            <div>\r\n                <label>Tread thickness</label>\r\n                <select>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Riser thickness</label>\r\n                <select>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Nosing</label>\r\n                <select>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let maxHeight = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Height</label>\r\n            <select>\r\n                {Array.from(Array(maxHeight), (e, i) => {\r\n                    return ( <option key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorOpening = (props) => {\r\n\r\n    let maxOpening = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Floor Opening</label>\r\n            <select>\r\n                {Array.from(Array(maxOpening), (e, i) => {\r\n                    return ( <option key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorOpening","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Floor Thickness</label>\r\n            <select>\r\n                {Array.from(Array(maxThickness), (e, i) => {\r\n                    return ( <option key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport Height from '../inputs/height';\r\nimport FloorOpening from '../inputs/flooropening';\r\nimport FloorThickness from '../inputs/floorthickness';\r\n\r\nconst Headroom = () => {\r\n    return (\r\n    <div>\r\n        <div>Headroom</div>\r\n        <Height />\r\n        <FloorOpening />\r\n        <FloorThickness />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Headroom\r\n","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <label>Stair Angle</label>\r\n            <input type=\"range\" min=\"30\" max=\"45\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\nimport RiseRun from './sidebarSections/riserun';\r\nimport Details from './sidebarSections/details';\r\nimport Headroom from './sidebarSections/headroom';\r\nimport StairAngle from './sidebarSections/stairangle';\r\n\r\nconst Sidebar = () => {\r\n\r\nreturn (\r\n<div>\r\n    <RiseRun />\r\n    <Details />\r\n    <Headroom />\r\n    <StairAngle />\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Sidebar\r\n\r\n\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Sidebar from './Components/sidebar';\n\nfunction App() {\n\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-4\"><Sidebar/></div>\n        <div className=\"col-8\" id=\"container\">\n    \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}