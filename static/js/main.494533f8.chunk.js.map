{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","id","defaultValue","totalRunft","onChange","changetotalRunft","Array","from","e","i","value","key","totalRunin","changetotalRunin","totalRunfr","changetotalRunfr","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","IdealRun","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","Details","stringerin","changestringerin","stringerfr","changestringerfr","StairAngle","type","min","max","Height","totalRun","parseInt","parseFloat","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","Stair","windowWidth","window","innerWidth","move","totalRise","idealRun","idealRise","xCount","yCount","stringerA","Math","sin","atan","stringerB","coordinates","floorThickness","boolean","push","length","lengthH","headroomLength","headroomPts","width","height","innerHeight","x","y","points","stroke","strokeWidth","lineCap","lineJoin","closed","App","state","runOn","runCount","riseCount","riseChange","runChange","event","setState","target","className","this","headroomDelta","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.494533f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = 60 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label>Total run</label>\r\n            <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft}>\r\n                {Array.from(Array(selectFeet), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = 30 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Total rise</label>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft}>\r\n                {Array.from(Array(selectFeet), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Ideal run</label>\r\n            <select defaultValue={props.idealRunin} onChange={props.changeidealRunin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRunfr} onChange={props.changeidealRunfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Ideal rise</label>\r\n            <select defaultValue={props.idealRisein} onChange={props.changeidealRisein}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.idealRisefr} onChange={props.changeidealRisefr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n\r\n    let selectInches = 6 + 1;\r\n    let selectFractions = 16;\r\n    let selectStringer = 11 + 1;\r\n\r\n    return (\r\n        <div>\r\n            <div>Details</div>\r\n            <div>\r\n                <label>Tread thickness</label>\r\n                <select>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Riser thickness</label>\r\n                <select>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Nosing</label>\r\n                <select>\r\n                    {Array.from(Array(selectInches), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>Stringer Width</label>\r\n                <select defaultValue={props.stringerin} onChange={props.changestringerin}>\r\n                    {Array.from(Array(selectStringer), (e, i) => {\r\n                        return ( <option key={i}>{i +'\"'}</option> )\r\n                    })}\r\n                </select>\r\n                <select defaultValue={props.stringerfr} onChange={props.changestringerfr}>\r\n                    {Array.from(Array(selectFractions), (e, i) => {\r\n                        return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <label>Stair Angle</label>\r\n            <input type=\"range\" min=\"30\" max=\"45\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n    let headroomMax = parseFloat(totalRun / 2);\r\n\r\n    return (\r\n        <div>\r\n            <label>Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" max={headroomMax} onChange={props.changeheadroomlength} />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 15 + 1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    return (\r\n        <div>\r\n            <label>Floor Thickness</label>\r\n            <select defaultValue={props.floorft} onChange={props.changefloorft}>\r\n                {Array.from(Array(maxThickness), (e, i) => {\r\n                    return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorin} onChange={props.changefloorin}>\r\n                {Array.from(Array(selectInches), (e, i) => {\r\n                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                })}\r\n            </select>\r\n            <select defaultValue={props.floorfr} onChange={props.changefloorfr}>\r\n                {Array.from(Array(selectFractions), (e, i) => {\r\n                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                })}\r\n            </select>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from 'react';\r\nimport { Stage, Layer, Line } from 'react-konva';\r\n\r\nconst Stair = (props) => {\r\n\r\n  let windowWidth = window.innerWidth * 0.65;\r\n  let move = [windowWidth/2,100];\r\n\r\n  let totalRun = parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr);\r\n  let totalRise = parseInt(props.totalRiseft) + parseInt(props.totalRisein) + parseFloat(props.totalRisefr);\r\n\r\n  let idealRun = parseFloat(props.idealRunin) + parseFloat(props.idealRunfr);\r\n  let idealRise = parseFloat(props.idealRisein) + parseFloat(props.idealRisefr);\r\n\r\n  let xCount = parseInt(totalRun/idealRun);\r\n  let yCount = parseInt(totalRise/idealRise);\r\n\r\n  let landing = 36;\r\n\r\n  let stringerA = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRun / idealRise));\r\n  let stringerB = (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) / Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = (parseFloat(props.floorft) + parseFloat(props.floorin) + parseFloat(props.floorfr));\r\n\r\n\r\n  if (props.boolean === true){\r\n    for (let i=0; i<xCount; i++){\r\n      coordinates.push( (totalRise)-(idealRun*i), idealRise*i, (totalRise)-(idealRun*(i+1)), idealRise*i, (totalRise)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  } else if (props.boolean === false){\r\n    for (let i=0; i<yCount; i++){\r\n      coordinates.push( (totalRun)-(idealRun*i), idealRise*i, (totalRun)-(idealRun*(i+1)), idealRise*i, (totalRun)-(idealRun*(i+1)), (idealRise*(i+1)) )\r\n    }\r\n    coordinates.push( (coordinates[coordinates.length-2]+stringerB), coordinates[coordinates.length-1], coordinates[0], stringerA, coordinates[0], floorThickness, (coordinates[0]+landing), floorThickness, (coordinates[0]+landing), 0)\r\n  }\r\n\r\n  let lengthH = parseFloat(props.headroomLength);\r\n\r\n  let headroomPts = [ (coordinates[coordinates.length-12]-(idealRun*3)), floorThickness, (coordinates[coordinates.length-12]-(idealRun*3)), 0, coordinates[coordinates.length-12]-idealRun + lengthH, 0, coordinates[coordinates.length-12]-idealRun + lengthH, floorThickness ];\r\n\r\n  let headroomDelta = coordinates[3] - (coordinates[coordinates.length-12]-idealRun + lengthH);\r\n\r\n  return (\r\n    <Stage width={windowWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={coordinates}\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n        <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n            lineCap='sqare'\r\n            lineJoin='sqare'\r\n            closed='true'\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n  )\r\n}\r\n\r\nexport default Stair","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport TotalRun from './Components/inputs/totalrun';\nimport TotalRise from './Components/inputs/totalrise';\nimport IdealRun from './Components/inputs/idealrun';\nimport IdealRise from './Components/inputs/idealrise';\nimport Details from './Components/inputs/details';\nimport StairAngle from './Components/inputs/stairangle';\nimport Height from './Components/inputs/height';\nimport FloorOpening from './Components/inputs/flooropening';\nimport FloorThickness from './Components/inputs/floorthickness';\nimport Stair from './Components/stair';\n\n\nclass App extends Component {\n\n  state = {\n    totalRunft: 10 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n\n    totalRiseft: 6 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n\n    stringerin: 7 * Math.sin(Math.atan(7 / 11)),\n    stringerfr: 0,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    \n    headroomMax: 0,\n    headroomLength: 0,\n\n    runOn: true\n\n  }\n\n  //Retrieves run count\n  runCount = () => {\n    let sumRuntotal = parseInt( parseInt(this.state.totalRunft) + parseInt(this.state.totalRunin) + parseFloat(this.state.totalRunfr) );\n    let sumRunideal = parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) );\n    return ( sumRuntotal / sumRunideal )\n  }\n\n  //Retrieves rise count\n  riseCount = () => {\n    let sumRisetotal = parseInt( parseInt(this.state.totalRiseft) + parseInt(this.state.totalRisein) + parseFloat(this.state.totalRisefr) );\n    let sumRiseideal = parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) );\n    return ( sumRisetotal / sumRiseideal )\n  }\n\n  //Changes rise input values based on run\n  riseChange = () => {\n    let totalRise = this.runCount * (parseInt( parseInt(this.state.idealRisein) + parseFloat(this.state.idealRisefr) ) );\n    return totalRise\n  }\n\n  //Changes run input values based on rise\n  runChange = () => {\n    let totalRun = this.riseCount * (parseInt( parseInt(this.state.idealRunin) + parseFloat(this.state.idealRunfr) ) );\n    return totalRun\n  }\n\n  //Handlers for changing total run\n  changetotalRunft = (event) => {\n      this.setState({\n        totalRunft:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunin = (event) => {\n      this.setState({\n        totalRunin:event.target.value,\n        runOn: true\n      })\n  }\n  changetotalRunfr = (event) => {\n      this.setState({\n        totalRunfr:event.target.value,\n        runOn: true\n      })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = (event) => {\n      this.setState({\n        totalRiseft:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisein = (event) => {\n      this.setState({\n        totalRisein:event.target.value,\n        runOn: false\n      })\n  }\n  changetotalRisefr = (event) => {\n      this.setState({\n        totalRisefr:event.target.value,\n        runOn: false\n      })\n  }\n\n  //Handlers for changing ideal run\n  changeidealRunin = (event) => {\n    this.setState({idealRunin:event.target.value})\n  }\n  changeidealRunfr = (event) => {\n      this.setState({idealRunfr:event.target.value})\n  }\n\n  //Handlers for changing ideal rise\n  changeidealRisein = (event) => {\n      this.setState({idealRisein:event.target.value})\n  }\n  changeidealRisefr = (event) => {\n      this.setState({idealRisefr:event.target.value})\n  }\n\n  //Handlers for changing stringer\n  changestringerin = (event) => {\n    this.setState({stringerin:event.target.value})\n  }\n\n  changestringerfr = (event) => {\n    this.setState({stringerfr:event.target.value})\n  }\n\n  //Handlers for changing floor thickness\n  changefloorft = (event) => {\n    this.setState({floorft:event.target.value})\n  }\n\n  changefloorin = (event) => {\n    this.setState({floorin:event.target.value})\n  }\n\n  changefloorfr = (event) => {\n    this.setState({floorfr:event.target.value})\n  }\n  \n  //Handlers for headroom\n  changeheadroomlength = (event) => {\n    this.setState({\n      headroomLength:event.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n\n          <div id=\"sidebar\" className=\"col-4\">\n              <div>\n                <div>Rise-run</div>\n                <TotalRun \n                    totalRunft = {this.state.totalRunft}\n                    totalRunin = {this.state.totalRunin}\n                    totalRunfr = {this.state.totalRunfr}\n                    changetotalRunft = {this.changetotalRunft}\n                    changetotalRunin = {this.changetotalRunin}\n                    changetotalRunfr = {this.changetotalRunfr}\n                />\n                <TotalRise \n                    totalRiseft = {this.state.totalRiseft}\n                    totalRisein = {this.state.totalRisein}\n                    totalRisefr = {this.state.totalRisefr}\n                    changetotalRiseft = {this.changetotalRiseft}\n                    changetotalRisein = {this.changetotalRisein}\n                    changetotalRisefr = {this.changetotalRisefr}\n                />\n                <IdealRun \n                    idealRunin = {this.state.idealRunin}\n                    idealRunfr = {this.state.idealRunfr}\n                    changeidealRunin = {this.changeidealRunin}\n                    changeidealRunfr = {this.changeidealRunfr}\n                />\n                <IdealRise \n                    idealRisein = {this.state.idealRisein}\n                    idealRisefr = {this.state.idealRisefr}\n                    changeidealRisein = {this.changeidealRisein}\n                    changeidealRisefr = {this.changeidealRisefr}\n                />\n              </div>\n\n            <Details \n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n            />\n\n            <div>\n                <div>Headroom</div>\n                <Height \n                  totalRunft={this.state.totalRunft}\n                  totalRunin={this.state.totalRunin}\n                  totalRunfr={this.state.totalRunfr}\n                  headroomLength={this.state.headroomLength}\n                  changeheadroomlength={this.changeheadroomlength}\n                />\n                <FloorThickness \n                  floorft={this.state.floorft}\n                  floorin={this.state.floorin}\n                  floorfr={this.state.floorfr}\n                  changefloorft={this.changefloorft}\n                  changefloorin={this.changefloorin}\n                  changefloorfr={this.changefloorfr}\n                />\n\n            </div>\n\n            <StairAngle />\n        </div>\n\n        <div className=\"col-8\" id=\"container\">\n          <Stair \n            totalRunft={this.state.totalRunft}\n            totalRunin={this.state.totalRunin}\n            totalRunfr={this.state.totalRunfr}\n            totalRiseft={this.state.totalRiseft}\n            totalRisein={this.state.totalRisein}\n            totalRisefr={this.state.totalRisefr}\n            idealRunin={this.state.idealRunin}\n            idealRunfr={this.state.idealRunfr}\n            idealRisein={this.state.idealRisein}\n            idealRisefr={this.state.idealRisefr}\n            boolean={this.state.runOn}\n            runCount={this.state.runCount}\n            riseCount={this.state.riseCount}\n            stringerin={this.state.stringerin}\n            stringerfr={this.state.stringerfr}\n            floorft={this.state.floorft}\n            floorin={this.state.floorin}\n            floorfr={this.state.floorfr}\n            headroomLength={this.state.headroomLength}\n            headroomDelta={this.state.headroomDelta}\n          />\n        </div>\n        \n      </div>\n\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}