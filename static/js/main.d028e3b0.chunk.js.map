{"version":3,"sources":["Components/inputs/totalrun.js","Components/inputs/totalrise.js","Components/inputs/idealrun.js","Components/inputs/idealrise.js","Components/inputs/topstair.js","Components/inputs/details.js","Components/inputs/stairangle.js","Components/inputs/height.js","Components/inputs/floorthickness.js","Components/stair.js","Components/inputs/units.js","Components/inputs/dimensions.js","Components/inputs/detailsToggle.js","App.js","serviceWorker.js","index.js"],"names":["TotalRun","props","selectFeet","Array","from","length","v","k","selectInchesMin","className","units","parseInt","totalRunft","Fragment","id","defaultValue","onChange","changetotalRunft","i","value","key","changetotalRunin","totalRunfr","changetotalRunfr","e","totalRunin","type","Math","round","totalRunmm","min","max","changetotalRunmm","TotalRise","totalRiseft","changetotalRiseft","totalRisein","changetotalRisein","totalRisefr","changetotalRisefr","totalRisemm","changetotalRisemm","IdealRun","selectInches","idealRunin","changeidealRunin","idealRunfr","changeidealRunfr","idealRunmm","changeidealRunmm","IdealRise","idealRisein","changeidealRisein","idealRisefr","changeidealRisefr","idealRisemm","changeidealRisemm","Topstair","topStair","onClick","changeTopStairOn","changeTopStairOff","Details","nosingFractionsMin","nosingFractionsMax","stringerInches","details","treadin","changetreadin","changetreadfr","treadmm","changetreadmm","riserin","changeriserin","changeriserfr","risermm","changerisermm","nosingin","changenosingin","nosingfr","changenosingfr","nosingmm","changenosingmm","stringerin","changestringerin","stringerfr","changestringerfr","stringermm","changestringermm","StairAngle","stairAngle","step","changeStairAngle","Height","totalRun","parseFloat","headroomMax","changeheadroomlength","FloorThickness","floorft","changefloorft","floorin","changefloorin","floorfr","changefloorfr","floormm","changefloormm","Stair","window","matchMedia","mdMin","lgMax","lgMin","totalRise","idealRun","idealRise","preTreadThickness","treadfr","preRiserThickness","riserfr","count","totalBoolean","lengthH","headroomLength","stringerTotal","treadTotal","riserTotal","nosingTotal","stringerA","sin","atan","stringerB","coordinates","floorThickness","idealBoolean","stairToggle","tan","PI","push","headroomPts","headroomTrue","windowWidth","matches","innerWidth","windowHeight","innerHeight","stairLength","wr","abs","ratio","m","n","slice","moveCenter","move","treadThickness","riserThickness","nosing","treadLength","riserHeight","treadsX","treadsY","risersY","j","treadsW","h","treadsX2","r","treadsY2","t","detailCount","topTread","topStairLine","topStairLanding","arrowWidth","arrowOffset","textLineOffset","textNumOffset","textSize","strokeWidth","strokeDash","dRise","dRiseArrowTop","dRiseArrowBot","dRiseText","dRiseDashedTop","dRiseDashedBot","dRiseFeet","floor","dRiseInches","dRiseFraction","dRiseValue","dRun","dRunArrowLeft","dRunArrowRight","dRunText","dRunDashedLeft","dRunDashedRight","dRunFeet","dRunInches","dRunFraction","dRunValue","sZ","sA","sAlpha","sC","sqrt","sX","sY","stringerTrue","dStringer","cos","dStringerValue","dNosing","dNosingDashedLeft","dNosingDashedRight","dNosingText","dNosingValue","dHeadroomStepX","dHeadroomStepY","p","dHeadroomDashed","headroomBoolean","dHeadroom","dHeadroomArrowTop","dHeadroomArrowBot","dHeadroomText","dHeadroomValue","toFixed","dHeadroomFeet","dHeadroomInches","dHeadroomFraction","dHeadroomValueText","dFloor","dFloorArrowTop","dFloorArrowBot","dFloorText","dFloorDashedTop","dFloorDashedBot","dFloorValue","dAngleStart","dAngle","dAngleText","dStep","runCount","idealRunParsedIn","idealRunParsedFr","idealRunParsedMM","idealRiseParsedIn","idealRiseParsedFr","idealRiseParsedMM","riseCountValue","runCountValue","errors","ePosition","eHeadroomText","eHeadroomColor","withNosing","eRunText","eAngleText","eAngleColor","eRiseText","eMessage","width","height","x","y","fill","stroke","points","lineCap","lineJoin","closed","dimensions","fontFamily","fontSize","text","align","map","_","dash","rotation","Units","unitsTrue","changeUnitsIn","changeUnitsMM","Dimensions","dimensionsTrue","changeDimensionsOn","changeDimensionsOff","DetailsToggle","detailsTrue","changeDetailsOn","changeDetailsOff","App","state","runOn","idealOn","event","setState","target","this","changetotalRunSwitchOn","changetotalRunSwitchOff","riseCount","headroomDelta","Component","Boolean","location","hostname","match","WebFont","load","custom","families","active","console","log","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d028e3b0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TotalRun = (props) => {\r\n\r\n    let selectFeet = Array.from({length:15-1+1},(v,k)=>k+1);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n    let selectInchesMin = Array.from({length:2-1+1},(v,k)=>k+10);\r\n\r\n    let min = 22 * 25.4;\r\n    let max = 191.9375 * 25.4;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n            {props.units ? (\r\n                parseInt(props.totalRunft) === 12 ? (\r\n                    <React.Fragment>\r\n                        <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(selectFeet, (i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunInches\" defaultValue={10} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInchesMin, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ) :\r\n                (\r\n                    <React.Fragment>\r\n                        <select id=\"totalRunFeet\" defaultValue={props.totalRunft} onChange={props.changetotalRunft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(selectFeet, (i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunInches\" defaultValue={props.totalRunin} onChange={props.changetotalRunin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(selectInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select id=\"totalRunFraction\" defaultValue={props.totalRunfr} onChange={props.changetotalRunfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                )\r\n            ):\r\n            (\r\n                <input type=\"number\" defaultValue={Math.round(props.totalRunmm)} min={min} max={max} onChange={props.changetotalRunmm} className=\"dropdown dropdown__mm\" />\r\n            )}\r\n\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRun","import React from 'react';\r\n\r\nconst TotalRise = (props) => {\r\n\r\n    let selectFeet = Array.from({length:11-1+1},(v,k)=>k);\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n\r\n    let min = 22 * 25.4;\r\n    let max = 191.9375 * 25.4;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Total rise</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n            {props.units ? (\r\n                <React.Fragment>\r\n                    <select id=\"totalRiseft\" defaultValue={props.totalRiseft} onChange={props.changetotalRiseft} className=\"dropdown dropdown__feet\">\r\n                        {Array.from(selectFeet, (i) => {\r\n                            return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select id=\"totalRisein\" defaultValue={props.totalRisein} onChange={props.changetotalRisein} className=\"dropdown dropdown__inch\">\r\n                        {Array.from(Array(selectInches), (e, i) => {\r\n                            return ( <option key={i}>{i +'\"'}</option> )\r\n                        })}\r\n                    </select>\r\n                    <select id=\"totalRiseft\" defaultValue={props.totalRisefr} onChange={props.changetotalRisefr} className=\"dropdown dropdown__fraction\">\r\n                        {Array.from(Array(selectFractions), (e, i) => {\r\n                            return ( <option key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                        })}\r\n                    </select>\r\n                </React.Fragment>\r\n            ):\r\n            (\r\n                <input type=\"number\" defaultValue={Math.round(props.totalRisemm)} min={min} max={max} onChange={props.changetotalRisemm} className=\"dropdown dropdown__mm\" />\r\n            )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default TotalRise","import React from 'react';\r\n\r\nconst IdealRun = (props) => {\r\n\r\n    let selectInches = Array.from({length:24-10+1},(v,k)=>k+10);\r\n    let selectFractions = 16;\r\n\r\n    let idealMin = 10 * 25.4;\r\n    let idealMax = (24 + 0.0625 * 15) * 25.4;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Ideal run</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select value={props.idealRunin} onChange={props.changeidealRunin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInches, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select value={props.idealRunfr} onChange={props.changeidealRunfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.idealRunmm)} min={idealMin} max={idealMax} onChange={props.changeidealRunmm} className=\"dropdown dropdown__mm\" />\r\n                )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default IdealRun","import React from 'react';\r\n\r\nconst IdealRise = (props) => {\r\n\r\n    let selectInches = Array.from({length:7-4+1},(v,k)=>k+4);\r\n    let selectFractions = 13;\r\n\r\n    let idealMin = 4 * 25.4;\r\n    let idealMax = (7 + 0.0625 * 12) * 25.4;\r\n\r\n    return (\r\n        <div className=\"select-wrapper\">\r\n            <label className=\"subtitle d-flex\">Ideal rise</label>\r\n            <div className=\"dropdown__parent d-flex justify-content-start\">\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select value={props.idealRisein} onChange={props.changeidealRisein} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInches, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select value={props.idealRisefr} onChange={props.changeidealRisefr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.idealRisemm)} min={idealMin} max={idealMax} onChange={props.changeidealRisemm} className=\"dropdown dropdown__mm\" />\r\n                )}\r\n            </div>\r\n        </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default IdealRise","import React from 'react';\r\n\r\nconst Topstair = (props) => {\r\n\r\n    let topStair = props.topStair;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Top Stair</div>\r\n            {topStair ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeTopStairOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeTopStairOff}>OFF</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topstair","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n    \r\n    let treadInches = 1 + 1;\r\n    let nosingInches = 1 + 1;\r\n    let nosingFractionsMin = Array.from({length:12-5+1},(v,k)=>k+8);\r\n    let nosingFractionsMax = Array.from({length:13-5+1},(v,k)=>k+0);\r\n    let selectFractions = 16;\r\n    let stringerInches = Array.from({length:11-5+1},(v,k)=>k+5);\r\n\r\n    let nosingMin = 0;\r\n    let nosingMax = (1 + (0.0625 * 8)) * 25.4;\r\n\r\n    let treadMin = 0;\r\n    let treadMax = (1 + (0.0625 * 8)) * 25.4;\r\n\r\n    let riserMin = 0;\r\n    let riserMax = (1 + (0.0625 * 8)) * 25.4;\r\n\r\n    let stringerMin = 5 * 25.4;\r\n    let stringerMax = (11 + (0.0625 * 15)) * 25.4;\r\n\r\n    return (\r\n        <div className=\"sidebar__section  sidebar__section--third\">\r\n            <div className=\"title\">Details</div>\r\n            {props.details ? (\r\n                <React.Fragment>\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    {props.units ? (\r\n                        <React.Fragment>\r\n                            <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch\">\r\n                                {Array.from(Array(treadInches), (e, i) => {\r\n                                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction\">\r\n                                {Array.from(Array(selectFractions), (e, i) => {\r\n                                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                })}\r\n                            </select>\r\n                        </React.Fragment>\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.treadmm)} min={treadMin} max={treadMax} onChange={props.changetreadmm} className=\"dropdown dropdown__mm\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(treadInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.risermm)} min={riserMin} max={riserMax} onChange={props.changerisermm} className=\"dropdown dropdown__mm\" />\r\n                )}\r\n            </div>\r\n            {props.units  ? (\r\n                props.nosingin === 0 ? (\r\n                    <div>\r\n                        <label className=\"subtitle d-flex\">Nosing</label>\r\n                        <select defaultValue={0} onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(nosingInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(nosingFractionsMin, (i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                ):\r\n                (\r\n                    <div>\r\n                        <label className=\"subtitle d-flex\">Nosing</label>\r\n                        <select defaultValue={0} onChange={props.changenosingin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(nosingInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(nosingFractionsMax, (i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                )\r\n\r\n            ):\r\n            (   \r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Nosing</label>\r\n                    <input type=\"number\" defaultValue={Math.round(props.nosingmm)} min={nosingMin} max={nosingMax} onChange={props.changenosingmm} className=\"dropdown dropdown__mm\" />\r\n                </div>\r\n            )}\r\n\r\n            <div>\r\n                <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(stringerInches, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.stringermm)} min={stringerMin} max={stringerMax} onChange={props.changestringermm} className=\"dropdown dropdown__mm\" />\r\n                )}\r\n            </div>\r\n            </React.Fragment>\r\n\r\n            ):\r\n            (\r\n\r\n            <React.Fragment>\r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Tread thickness</label>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        {props.units ? (\r\n                            <React.Fragment>\r\n                                <select defaultValue={props.treadin} onChange={props.changetreadin} className=\"dropdown dropdown__inch disabled\">\r\n                                    {Array.from(Array(treadInches), (e, i) => {\r\n                                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                    })}\r\n                                </select>\r\n                                <select defaultValue=\"0\" onChange={props.changetreadfr} className=\"dropdown dropdown__fraction disabled\">\r\n                                    {Array.from(Array(selectFractions), (e, i) => {\r\n                                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                    })}\r\n                                </select>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.treadmm)} min={treadMin} max={treadMax} onChange={props.changetreadmm} className=\"dropdown dropdown__mm\" />\r\n                        )}\r\n                    </div>                                                          \r\n                </div>\r\n\r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Riser thickness</label>\r\n                    {props.units ? (\r\n                        <React.Fragment>\r\n                            <select defaultValue={props.riserin} onChange={props.changeriserin} className=\"dropdown dropdown__inch disabled\">\r\n                                {Array.from(Array(treadInches), (e, i) => {\r\n                                    return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                })}\r\n                            </select>\r\n                            <select defaultValue=\"0\" onChange={props.changeriserfr} className=\"dropdown dropdown__fraction disabled\">\r\n                                {Array.from(Array(selectFractions), (e, i) => {\r\n                                    return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                })}\r\n                            </select>\r\n                        </React.Fragment>\r\n                    ):\r\n                    (\r\n                        <input type=\"number\" defaultValue={Math.round(props.risermm)} min={riserMin} max={riserMax} onChange={props.changerisermm} className=\"dropdown dropdown__mm\" />        \r\n                    )}\r\n                </div>\r\n                \r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Nosing</label>\r\n                        {props.units ? (\r\n                            <React.Fragment>\r\n                                <select defaultValue=\"0\" onChange={props.changenosingin} className=\"dropdown dropdown__inch disabled\">\r\n                                    {Array.from(Array(nosingInches), (e, i) => {\r\n                                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                    })}\r\n                                </select>\r\n                                <select defaultValue={props.nosingfr} onChange={props.changenosingfr} className=\"dropdown dropdown__fraction disabled\">\r\n                                    {Array.from(Array(16), (e, i) => {\r\n                                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                    })}\r\n                                </select>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.nosingmm)} min={nosingMin} max={nosingMax} onChange={props.changenosingmm} className=\"dropdown dropdown__mm\" />  \r\n                        )}\r\n                </div>\r\n\r\n                <div>\r\n                    <label className=\"subtitle d-flex\">Stringer Width</label>\r\n                        {props.units ? (\r\n                            <React.Fragment>\r\n                                <select defaultValue={props.stringerin} onChange={props.changestringerin} className=\"dropdown dropdown__inch\">\r\n                                    {Array.from(stringerInches, (i) => {\r\n                                        return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                                    })}\r\n                                </select>\r\n                                <select defaultValue={props.stringerfr} onChange={props.changestringerfr} className=\"dropdown dropdown__fraction\">\r\n                                    {Array.from(Array(selectFractions), (e, i) => {\r\n                                        return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                                    })}\r\n                                </select>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                            <input type=\"number\" defaultValue={Math.round(props.stringermm)} min={stringerMin} max={stringerMax} onChange={props.changestringermm} className=\"dropdown dropdown__mm\" />  \r\n                        )}\r\n                </div>\r\n        \r\n            </React.Fragment>\r\n            )}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Details ","import React from 'react';\r\n\r\nconst StairAngle = (props) => {\r\n\r\n    return (\r\n        <div className=\"sidebar__section--last sidebar__section\">\r\n            <label className=\"title d-flex\">Stair Angle</label>\r\n            <div className=\"d-flex justify-content-between sidebar__section--stairangle\">\r\n                <input type=\"number\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.1\" onChange={props.changeStairAngle} className=\"stairangle__number dropdown\"/>\r\n                <input type=\"range\" value={props.stairAngle} min=\"25\" max=\"45\" step=\"0.01\" onChange={props.changeStairAngle} className=\"slider slider__angle\"/>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StairAngle","import React from 'react';\r\n\r\nconst Height = (props) => {\r\n\r\n    let totalRun = \r\n        props.units ? (\r\n            parseInt(props.totalRunft) + parseInt(props.totalRunin) + parseFloat(props.totalRunfr)\r\n        ):\r\n        (\r\n            parseFloat(props.totalRunmm)\r\n        )\r\n\r\n    let headroomMax = parseFloat(totalRun / 3);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Height</label>\r\n            <input type=\"range\" defaultValue=\"0\" min=\"0\" step=\"0.01\" max={headroomMax} onChange={props.changeheadroomlength} className=\"slider slider__height\"/>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Height","import React from 'react';\r\n\r\nconst FloorThickness = (props) => {\r\n\r\n    let maxThickness = 1+1;\r\n    let selectInches = 11 + 1;\r\n    let selectFractions = 16;\r\n    let selectInchesMin = Array.from({length:6-1+1},(v,k)=>k+6);\r\n\r\n    let floorMin = 6 * 25.4;\r\n    let floorMax =( 23 + (0.0625 * 15)) * 25.4;\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"subtitle d-flex\">Floor Thickness</label>\r\n            <div className=\"d-flex justify-content-start\">\r\n                {props.units ? (\r\n                    <React.Fragment>\r\n                        <select defaultValue={props.floorft} onChange={props.changefloorft} className=\"dropdown dropdown__feet\">\r\n                            {Array.from(Array(maxThickness), (e, i) => {\r\n                                return ( <option value={i*12} key={i*12}>{i +\"'\"}</option> )\r\n                            })}\r\n                        </select>\r\n                        {parseInt(props.floorft) === 0 ? (\r\n                        <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(selectInchesMin, (i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select>\r\n                        ): \r\n                        (\r\n                        <select defaultValue={props.floorin} onChange={props.changefloorin} className=\"dropdown dropdown__inch\">\r\n                            {Array.from(Array(selectInches), (e, i) => {\r\n                                return ( <option value={i} key={i}>{i +'\"'}</option> )\r\n                            })}\r\n                        </select> \r\n                        )}\r\n                        <select defaultValue={props.floorfr} onChange={props.changefloorfr} className=\"dropdown dropdown__fraction\">\r\n                            {Array.from(Array(selectFractions), (e, i) => {\r\n                                return ( <option value={i * 0.0625} key={i * 0.0625}>{i + \"/16\"}</option> )\r\n                            })}\r\n                        </select>\r\n                    </React.Fragment>\r\n                ):\r\n                (\r\n                    <input type=\"number\" defaultValue={Math.round(props.floormm)} min={floorMin} max={floorMax} onChange={props.changefloormm} className=\"dropdown dropdown__mm\" />\r\n                )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FloorThickness","import React from \"react\";\r\nimport { Stage, Layer, Line, Rect, Text } from \"react-konva\";\r\nimport \"../Styles/fonts.css\";\r\n\r\nconst Stair = props => {\r\n\r\n  var smMax = window.matchMedia(\"(max-width: 540px)\");\r\n  var smMin = window.matchMedia(\"(min-width: 540px)\");\r\n\r\n  var mdMax = window.matchMedia(\"(max-width: 720px)\");\r\n  var mdMin = window.matchMedia(\"(min-width: 720px)\");\r\n\r\n  var lgMax = window.matchMedia(\"(max-width: 960px)\");\r\n  var lgMin = window.matchMedia(\"(min-width: 960px)\");\r\n\r\n  var xlMax = window.matchMedia(\"(max-width: 1140px)\");\r\n  var xlMin = window.matchMedia(\"(min-width: 1140px)\");\r\n\r\n  \r\n  let totalRun =\r\n    props.units ? (\r\n      parseInt(props.totalRunft) === 12 ? (\r\n        parseInt(props.totalRunin) === 11 ? (\r\n          23\r\n        ):\r\n        (\r\n          22\r\n        )\r\n      ):\r\n      (\r\n        parseInt(props.totalRunft) +\r\n        parseInt(props.totalRunin) +\r\n        parseFloat(props.totalRunfr)\r\n      )\r\n    ):\r\n    (\r\n      parseFloat(props.totalRunmm) / 25.4\r\n    )\r\n\r\n  let totalRise =\r\n    props.units ? (\r\n      parseInt(props.totalRiseft) +\r\n      parseInt(props.totalRisein) +\r\n      parseFloat(props.totalRisefr)\r\n    ):\r\n    (\r\n      parseFloat(props.totalRisemm) / 25.4\r\n    )\r\n\r\n  let idealRun = \r\n    props.units ? (\r\n      parseFloat(props.idealRunin) + parseFloat(props.idealRunfr)\r\n    ):\r\n    (\r\n      parseFloat(props.idealRunmm) / 25.4\r\n    )\r\n\r\n  let idealRise = \r\n    props.units ? (\r\n      parseFloat(props.idealRisein) + parseFloat(props.idealRisefr)\r\n    ):\r\n    (\r\n      parseFloat(props.idealRisemm) / 25.4\r\n    )\r\n\r\n  let preTreadThickness = \r\n    props.units ? (\r\n      props.details ? (\r\n        parseFloat(props.treadin) + parseFloat(props.treadfr) \r\n      ):\r\n      ( \r\n        0\r\n      )\r\n    ):\r\n    (\r\n      props.details ? (\r\n        (parseFloat(props.treadmm) / 25.4)\r\n      ):\r\n      ( \r\n        0\r\n      )\r\n    )\r\n\r\n  let preRiserThickness = \r\n    props.units ? (\r\n      props.details ? (\r\n        parseFloat(props.riserin) + parseFloat(props.riserfr) \r\n      ):\r\n      (\r\n        0\r\n      )\r\n    ):\r\n    (\r\n      props.details ? (\r\n        (parseFloat(props.risermm) / 25.4)\r\n      ):\r\n      (\r\n        0\r\n      )\r\n    )\r\n\r\n  let count = 0;\r\n\r\n  if (props.totalBoolean === true) {\r\n    count = parseInt(totalRun / idealRun);\r\n  } else if (props.totalBoolean === false) {\r\n    count = parseInt(totalRise / idealRise);\r\n  }\r\n\r\n  let landing = 36;\r\n  let lengthH = \r\n    props.units ? (\r\n      parseFloat(props.headroomLength)\r\n    ):\r\n    (\r\n      (parseFloat(props.headroomLength) / 25.4)\r\n    )\r\n\r\n  let stringerTotal = \r\n    props.units ? (\r\n      parseFloat(props.stringerin) + parseFloat(props.stringerfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.stringermm) / 25.4)\r\n    )\r\n  \r\n  let treadTotal =\r\n    props.units ? (\r\n      parseFloat(props.treadin) + parseFloat(props.treadfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.treadmm) / 25.4)\r\n    )\r\n  \r\n  let riserTotal =\r\n    props.units ? (\r\n      parseFloat(props.riserin) + parseFloat(props.riserfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.risermm) / 25.4)\r\n    )\r\n\r\n  let nosingTotal =\r\n    props.units ? (\r\n      parseFloat(props.nosingin) + parseFloat(props.nosingfr)\r\n    ):\r\n    (\r\n      (parseFloat(props.nosingmm) / 25.4)\r\n    )\r\n\r\n  let stringerA =\r\n    stringerTotal / \r\n    Math.sin(Math.atan(idealRun / idealRise));\r\n\r\n  let stringerB =\r\n    stringerTotal / \r\n    Math.sin(Math.atan(idealRise / idealRun));\r\n\r\n  if (props.details) {\r\n    stringerA =\r\n      stringerTotal /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n        )\r\n      );\r\n    stringerB =\r\n      stringerTotal /\r\n      Math.sin(\r\n        Math.atan(\r\n          (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n        )\r\n      );\r\n  } else {\r\n    stringerA =\r\n      stringerTotal /\r\n      Math.sin(Math.atan(idealRun / idealRise));\r\n    stringerB =\r\n      stringerTotal /\r\n      Math.sin(Math.atan(idealRise / idealRun));\r\n  }\r\n\r\n  let coordinates = [];\r\n\r\n  let floorThickness = \r\n    props.units ? (\r\n      parseInt(props.floorft) === 0 ? (\r\n        parseInt(props.floorin) < 6 ? (\r\n          6\r\n        ):\r\n        (\r\n          props.floorin\r\n        )\r\n      ):\r\n      (\r\n        parseFloat(props.floorft) +\r\n        parseFloat(props.floorin) +\r\n        parseFloat(props.floorfr)\r\n      )\r\n    ):\r\n    (\r\n      parseFloat(props.floormm) / 25.4\r\n    )\r\n\r\n  //This creates the stair drawing based on whether total rise or run is being selected\r\n  if (props.totalBoolean === true) {\r\n    //If total run is selected (need to change so that total run changes ideal run)\r\n    if (props.idealBoolean === true) {\r\n      //If ideal is selected\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n        stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n          stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n          stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n          stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n          stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n  \r\n\r\n    } else {\r\n      count = Math.round(totalRun / 11);\r\n      idealRun = totalRun / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRun - idealRun * i,\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRun - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n        \r\n\r\n    }\r\n  } else if (props.totalBoolean === false) {\r\n    //If total rise is selected (need to change so that total rise changes ideal rise)\r\n    if (props.idealBoolean === true) {\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          0\r\n        )\r\n      )\r\n        \r\n\r\n    } else {\r\n      count = Math.round(totalRise / 7);\r\n      idealRise = totalRise / count;\r\n      if (props.stairToggle === true) {\r\n        idealRun = parseFloat(\r\n          idealRise / Math.tan(props.stairAngle * (Math.PI / 180))\r\n        );\r\n        stringerA =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRun / idealRise));\r\n        stringerB =\r\n          stringerTotal /\r\n          Math.sin(Math.atan(idealRise / idealRun));\r\n        if (props.details) {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRun - preRiserThickness) / (idealRise - preTreadThickness)\r\n              )\r\n            );\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(\r\n              Math.atan(\r\n                (idealRise - preTreadThickness) / (idealRun - preRiserThickness)\r\n              )\r\n            );\r\n        } else {\r\n          stringerA =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRun / idealRise));\r\n          stringerB =\r\n            stringerTotal /\r\n            Math.sin(Math.atan(idealRise / idealRun));\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        coordinates.push(\r\n          totalRise - idealRun * i,\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * i,\r\n          totalRise - idealRun * (i + 1),\r\n          idealRise * (i + 1)\r\n        );\r\n      }\r\n\r\n      //This creates the landing and stringer\r\n      props.topStair ? (\r\n        coordinates.push(\r\n            coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n            coordinates[coordinates.length - 1],\r\n            coordinates[0],\r\n            stringerA + preTreadThickness,\r\n            coordinates[0],\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            floorThickness,\r\n            coordinates[0] + landing,\r\n            0\r\n          )\r\n      ):\r\n      (\r\n        coordinates.push(\r\n          coordinates[coordinates.length - 2] + (stringerB + preRiserThickness),\r\n          coordinates[coordinates.length - 1],\r\n          coordinates[2],\r\n          coordinates[5] + stringerA + preTreadThickness,\r\n          coordinates[2],\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          floorThickness,\r\n          coordinates[2] + landing,\r\n          \r\n        )\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  //This is for the headroom part\r\n  let headroomPts = [\r\n    coordinates[coordinates.length - 12] - idealRun * 3,\r\n    floorThickness,\r\n    coordinates[coordinates.length - 12] - idealRun * 3,\r\n    0,\r\n    coordinates[coordinates.length - 12] - idealRun + lengthH,\r\n    0,\r\n    coordinates[coordinates.length - 12] - idealRun + lengthH,\r\n    floorThickness\r\n  ];\r\n  //This part removes the headroom if the stair is too short\r\n  let headroomTrue = true;\r\n  if (\r\n    totalRise < 84 ||\r\n    idealRise * count < 84 ||\r\n    totalRun < 84 ||\r\n    idealRun * count < 84\r\n  ) {\r\n    headroomTrue = false;\r\n  }\r\n\r\n  //This is the scale factor for the stair drawing\r\n  let windowWidth = \r\n    lgMin.matches \r\n      ? (window.innerWidth * 0.82 - 15)\r\n      : (window.innerWidth);\r\n  let windowHeight = \r\n    lgMin.matches\r\n      ? (window.innerHeight)\r\n      : (window.innerHeight * 0.5);\r\n  let stairLength = (headroomPts[0] + landing + coordinates[0]);\r\n  let wr = windowWidth / (Math.abs(headroomPts[0]) + landing + coordinates[0]);\r\n  let ratio = lgMin.matches ? wr * 0.75 : wr* 0.8;\r\n\r\n  //This transforms the drawing based on the scale factor\r\n  for (var m = 0; m < coordinates.length; m++) {\r\n    coordinates[m] = coordinates[m] * ratio;\r\n  }\r\n  for (var n = 0; n < headroomPts.length; n++) {\r\n    headroomPts[n] = headroomPts[n] * ratio;\r\n  }\r\n  if (props.topStair === false){\r\n    coordinates = coordinates.slice(4, coordinates.length - 4);\r\n  }\r\n\r\n  //This moves the drawing to the center\r\n  let moveCenter = (windowWidth / 2) - (stairLength * ratio) / 2;\r\n  let move = lgMin.matches ? [moveCenter, 150] : [moveCenter - 30, 100];\r\n\r\n  //Treads, risers, and nosing dimensions\r\n  let treadThickness =\r\n    ratio * treadTotal;\r\n  let riserThickness =\r\n    ratio * riserTotal;\r\n  let nosing =\r\n    ratio * nosingTotal;\r\n\r\n  let treadLength = idealRun * ratio + nosing + riserThickness;\r\n  let riserHeight = idealRise * ratio - treadThickness;\r\n\r\n  //Coordinates for treads, risers, and nosing\r\n  let treadsX = [];\r\n  if (props.topStair){\r\n    for (let k = 2; k < coordinates.length; k += 6) {\r\n      treadsX.push(move[0] + coordinates[k] - nosing);\r\n    }\r\n  } else {\r\n    for (let k = 6; k < coordinates.length; k += 6) {\r\n      treadsX.push(move[0] + coordinates[k] - nosing);\r\n    }\r\n  }\r\n  let treadsY = [];\r\n  let risersY = [];\r\n  for (let j = 3; j < coordinates.length; j += 6) {\r\n    treadsY.push(move[1] + coordinates[j]);\r\n    risersY.push(move[1] + coordinates[j] + treadThickness);\r\n  }\r\n  let treadsW = [];\r\n  for (let h = 0; h < treadsX.length; h++) {\r\n    treadsW.push(treadsX[h] + nosing);\r\n  }\r\n\r\n  //Coordinates for all treads minus the top one\r\n  let treadsX2 = [];\r\n  for (let r = 1; r < treadsX.length; r++) {\r\n    treadsX2.push(treadsX[r]);\r\n  }\r\n  let treadsY2 = [];\r\n  for (let t = 1; t < treadsY.length; t++) {\r\n    treadsY2.push(treadsY[t]);\r\n  }\r\n\r\n  let detailCount = props.topStair ? count : count - 1;\r\n\r\n  //Coordinates and dimensions for the top tread\r\n  let topTread = [treadsX[0], treadsY[0]];\r\n\r\n  //This is for the line between the top stair and landing\r\n  let topStairLine = [coordinates[0], coordinates[1], coordinates[0], coordinates[5]];\r\n\r\n  //This is the landing when the top stair is toggled off\r\n  let topStairLanding = [coordinates[2], coordinates[3]];\r\n\r\n  //Dimension strings\r\n  //These are the settings for arrows, text, and stroke width\r\n  let arrowWidth = lgMin.matches ? (10 / 2) : (10 / 4);\r\n  let arrowOffset = lgMin.matches ? 40 : 20;\r\n  let textLineOffset = lgMin.matches ? 25 : 12.5;\r\n  let textNumOffset = lgMin.matches ? 10 : 5;\r\n  let textSize = lgMin.matches ? 12 : 6;\r\n  let strokeWidth = lgMin.matches ? 1.5 : 0.75;\r\n  let strokeDash = lgMin.matches ? [3, 4] : [1, 2];\r\n\r\n  if (mdMin.matches && lgMax.matches){\r\n    arrowWidth = 10 / 3;\r\n    arrowOffset = 30;\r\n    textLineOffset = 8.3;\r\n    textNumOffset = 7.5;\r\n    textSize = 9;\r\n    strokeWidth = 1;\r\n    strokeDash = [2, 3];\r\n  }\r\n\r\n  //This is the dimension string for the total rise\r\n  let dRise = \r\n    props.topStair ? (\r\n      [\r\n        coordinates[coordinates.length - 2] + arrowOffset,\r\n        0,\r\n        coordinates[coordinates.length - 2] + arrowOffset,\r\n        coordinates[coordinates.length - 9]\r\n      ]\r\n    ):\r\n    (\r\n      [\r\n        coordinates[2] + landing*ratio + arrowOffset,\r\n        0,\r\n        coordinates[2] + landing*ratio + arrowOffset,\r\n        coordinates[coordinates.length - 5]\r\n      ]\r\n    )\r\n\r\n  let dRiseArrowTop = [\r\n    dRise[0] - arrowWidth,\r\n    dRise[1] + arrowWidth,\r\n    dRise[0],\r\n    dRise[1],\r\n    dRise[0] + arrowWidth,\r\n    dRise[1] + arrowWidth\r\n  ];\r\n  let dRiseArrowBot = [\r\n    dRise[2] - arrowWidth,\r\n    dRise[3] - arrowWidth,\r\n    dRise[2],\r\n    dRise[3],\r\n    dRise[2] + arrowWidth,\r\n    dRise[3] - arrowWidth\r\n  ];\r\n  let dRiseText = [dRise[0], (dRise[1] + dRise[3]) / 2];\r\n  let dRiseDashedTop = [\r\n    coordinates[coordinates.length - 2],\r\n    dRise[1],\r\n    dRise[0],\r\n    dRise[1]\r\n  ];\r\n  let dRiseDashedBot = [\r\n    coordinates[coordinates.length - 10],\r\n    dRise[3],\r\n    dRise[0],\r\n    dRise[3]\r\n  ];\r\n  let dRiseFeet = Math.floor(\r\n    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio / 12\r\n  );\r\n  let dRiseInches = Math.floor(\r\n    (coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n      dRiseFeet * 12\r\n  );\r\n  let dRiseFraction = Math.round(\r\n    ((coordinates[coordinates.length - 11] - coordinates[1]) / ratio -\r\n      dRiseFeet * 12 -\r\n      dRiseInches) *\r\n      16\r\n  );\r\n  let dRiseValue = \r\n    props.units ? (\r\n      dRiseFeet + \"' \" + dRiseInches + '\" ' + dRiseFraction + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(((coordinates[coordinates.length - 11] - coordinates[1]) * 25.4) / ratio) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the total run\r\n  let dRun = \r\n    props.topStair ? (\r\n      [\r\n        coordinates[coordinates.length - 12],\r\n        coordinates[coordinates.length - 11] + arrowOffset,\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 11] + arrowOffset\r\n      ]\r\n    ):\r\n    (\r\n      [\r\n        coordinates[coordinates.length - 8],\r\n        coordinates[coordinates.length - 7] + arrowOffset,\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 7] + arrowOffset\r\n      ]\r\n    )\r\n\r\n  let dRunArrowLeft = [\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] - arrowWidth,\r\n    dRun[0],\r\n    dRun[1],\r\n    dRun[0] + arrowWidth,\r\n    dRun[1] + arrowWidth\r\n  ];\r\n  let dRunArrowRight = [\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] - arrowWidth,\r\n    dRun[2],\r\n    dRun[3],\r\n    dRun[2] - arrowWidth,\r\n    dRun[3] + arrowWidth\r\n  ];\r\n  let dRunText = [(dRun[0] + dRun[2]) / 2, dRun[1]];\r\n  let dRunDashedLeft = [dRun[0], dRun[1], dRun[0], dRun[1] - arrowOffset];\r\n  let dRunDashedRight = [dRun[2], dRun[3], dRun[2], coordinates[5]];\r\n  let dRunFeet = Math.floor(\r\n    (coordinates[0] - coordinates[coordinates.length - 12]) / ratio / 12\r\n  );\r\n  let dRunInches = Math.floor(\r\n    (coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n      dRunFeet * 12\r\n  );\r\n  let dRunFraction = Math.round(\r\n    ((coordinates[0] - coordinates[coordinates.length - 12]) / ratio -\r\n      dRunFeet * 12 -\r\n      dRunInches) *\r\n      16\r\n  );\r\n  let dRunValue =\r\n    props.units ? (\r\n      dRunFeet + \"' \" + dRunInches + '\" ' + dRunFraction + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(((coordinates[0] - coordinates[coordinates.length - 12]) * 25.4) / ratio) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the stringer\r\n  let sZ =\r\n    (parseFloat(props.stringerin) + parseFloat(props.stringerfr)) * ratio;\r\n  let sA = stringerA * ratio;\r\n  let sAlpha = Math.atan(idealRise / idealRun);\r\n  let sC = Math.sqrt(sA * sA - sZ * sZ);\r\n\r\n  let sX = props.details ? (coordinates[10] + riserThickness) : (coordinates[10]);\r\n  let sY = props.details ? (coordinates[11] + treadThickness) : (coordinates[11]);\r\n\r\n  if (count <= 3) {\r\n    sX = coordinates[4] + riserThickness;\r\n    sY = coordinates[5] + treadThickness;\r\n  }\r\n\r\n  if (props.topStair === false){\r\n    sY += (idealRise * ratio);\r\n  }\r\n\r\n  let stringerTrue = count > 2;\r\n\r\n  let sX1 = sX + sC * Math.cos(sAlpha);\r\n  let sY1 = sY + sA - sC * Math.sin(sAlpha);\r\n  let dStringer = [sX, sY, sX1 + sZ / 2, sY1 + sA / 2];\r\n  let dStringerValue = \r\n    props.units ? (\r\n      props.stringerin + '\" ' + Math.round(props.stringerfr * 16) + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(props.stringermm) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the nosing\r\n  let dNosing = \r\n    props.topStair ? (\r\n      [coordinates[2], 0, coordinates[2] - nosing, 0] \r\n    ):\r\n    ( \r\n      [coordinates[4], idealRise*ratio, coordinates[4] - nosing, idealRise*ratio]\r\n    )\r\n  let dNosingDashedLeft = [\r\n    dNosing[0],\r\n    dNosing[1],\r\n    dNosing[0],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingDashedRight = [\r\n    dNosing[2],\r\n    dNosing[1],\r\n    dNosing[2],\r\n    dNosing[1] - arrowOffset\r\n  ];\r\n  let dNosingText = [(dNosing[0] + dNosing[2]) / 2, dNosing[1] - (textSize * 2.5)];\r\n  let dNosingValue = \r\n    props.units ? (\r\n      props.nosingin + '\" ' + props.nosingfr * 16 + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(props.nosingmm) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the headroom\r\n  let dHeadroomStepX = headroomPts[6];\r\n  let dHeadroomStepY = props.topStair ? coordinates[coordinates.length - 9] : coordinates[coordinates.length - 5];\r\n  for (var p = 0; p < coordinates.length; p += 2) {\r\n    if (\r\n      dHeadroomStepX > coordinates[p + 2] &&\r\n      dHeadroomStepX < coordinates[p - 2]\r\n    ) {\r\n      dHeadroomStepY = coordinates[p + 1];\r\n    }\r\n  }\r\n\r\n  let dHeadroomDashed = \r\n    props.topStair ?\r\n      [\r\n        dHeadroomStepX,\r\n        coordinates[coordinates.length - 9],\r\n        coordinates[coordinates.length - 10],\r\n        coordinates[coordinates.length - 9]\r\n      ]\r\n  :\r\n      [\r\n        dHeadroomStepX,\r\n        coordinates[coordinates.length - 5],\r\n        coordinates[coordinates.length - 6],\r\n        coordinates[coordinates.length - 5]\r\n      ]\r\n\r\n  let headroomBoolean = false;\r\n  if (dHeadroomStepX < coordinates[coordinates.length - 10]) {\r\n    headroomBoolean = true;\r\n  }\r\n\r\n  let dHeadroom = [\r\n    dHeadroomStepX,\r\n    headroomPts[7],\r\n    dHeadroomStepX,\r\n    dHeadroomStepY\r\n  ];\r\n  let dHeadroomArrowTop = [\r\n    dHeadroom[0] - arrowWidth,\r\n    dHeadroom[1] + arrowWidth,\r\n    dHeadroom[0],\r\n    dHeadroom[1],\r\n    dHeadroom[0] + arrowWidth,\r\n    dHeadroom[1] + arrowWidth\r\n  ];\r\n  let dHeadroomArrowBot = [\r\n    dHeadroom[2] - arrowWidth,\r\n    dHeadroom[3] - arrowWidth,\r\n    dHeadroom[2],\r\n    dHeadroom[3],\r\n    dHeadroom[2] + arrowWidth,\r\n    dHeadroom[3] - arrowWidth\r\n  ];\r\n  let dHeadroomText = [dHeadroom[0], (dHeadroom[1] + dHeadroom[3]) / 2];\r\n  let dHeadroomValue =\r\n    ((parseFloat(dHeadroomStepY) - parseFloat(dHeadroom[1])) / ratio).toFixed(2);\r\n  let dHeadroomFeet = Math.floor(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio / 12\r\n  );\r\n  let dHeadroomInches = Math.floor(\r\n    (dHeadroomStepY - dHeadroom[1]) / ratio - dHeadroomFeet * 12\r\n  );\r\n  let dHeadroomFraction =\r\n    Math.round(\r\n      (dHeadroomStepY - dHeadroom[1]) / ratio -\r\n        dHeadroomFeet * 12 -\r\n        dHeadroomInches\r\n    ) * 16;\r\n  let dHeadroomValueText = \r\n    props.units ? (\r\n      dHeadroomFeet + \"' \" + dHeadroomInches + '\" ' + dHeadroomFraction + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(((dHeadroomStepY - dHeadroom[1]) * 25.4) / ratio) + \" MM\"\r\n    )\r\n\r\n  //These are for the weird dimension string bugs\r\n  if (dHeadroomFraction === 16){\r\n  \r\n    dHeadroomInches += 1;\r\n    dHeadroomFraction = 0;\r\n\r\n    if (dHeadroomInches === 12){\r\n      dHeadroomFeet += 1;\r\n      dHeadroomInches = 0;\r\n    } else if (dHeadroomInches === 11){\r\n      dHeadroomFeet += 1;\r\n      dHeadroomInches = 0;\r\n      dHeadroomFraction = 0;\r\n    }\r\n\r\n  }\r\n\r\n  //This is the dimension string for the floor thickness\r\n  let dFloor = [headroomPts[6], headroomPts[7], headroomPts[4], headroomPts[5]];\r\n  let dFloorArrowTop = [\r\n    dFloor[2] - arrowWidth,\r\n    dFloor[3] + arrowWidth,\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowWidth,\r\n    dFloor[3] + arrowWidth\r\n  ];\r\n  let dFloorArrowBot = [\r\n    dFloor[0] - arrowWidth,\r\n    dFloor[1] - arrowWidth,\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowWidth,\r\n    dFloor[1] - arrowWidth\r\n  ];\r\n  let dFloorText = [dFloor[2], dFloor[3]];\r\n  let dFloorDashedTop = [\r\n    dFloor[2],\r\n    dFloor[3],\r\n    dFloor[2] + arrowOffset,\r\n    dFloor[3]\r\n  ];\r\n  let dFloorDashedBot = [\r\n    dFloor[0],\r\n    dFloor[1],\r\n    dFloor[0] + arrowOffset,\r\n    dFloor[1]\r\n  ];\r\n  let dFloorValue = \r\n    props.units ? (\r\n      props.floorft / 12 + \"' \" + props.floorin + '\" ' + props.floorfr * 16 + \"/16\"\r\n    ):\r\n    (\r\n      Math.round(props.floormm) + \" MM\"\r\n    )\r\n\r\n  //This is the dimension string for the stair angle\r\n  let dAngleStart = \r\n    props.topStair ?\r\n      [\r\n        coordinates[coordinates.length - 12],\r\n        coordinates[coordinates.length - 11]\r\n      ]\r\n    :\r\n      [\r\n        coordinates[coordinates.length - 8],\r\n        coordinates[coordinates.length - 7]\r\n      ]\r\n  \r\n  let dAngle = [\r\n    dAngleStart[0],\r\n    dAngleStart[1],\r\n    dAngleStart[0] - idealRun * ratio,\r\n    dAngleStart[1],\r\n    dAngleStart[0],\r\n    dAngleStart[1] - idealRise * ratio\r\n  ];\r\n\r\n  let dAngleText = \r\n    props.topStair ?\r\n      [\r\n        coordinates[coordinates.length - 10] + (idealRun / 2) * ratio,\r\n        dAngle[1]\r\n      ]\r\n    :\r\n    [\r\n      coordinates[coordinates.length - 6] + (idealRun / 2) * ratio,\r\n      dAngle[1]\r\n    ]\r\n\r\n  let stairAngle = (Math.atan(idealRise / idealRun) * (180 / Math.PI)).toFixed(2)\r\n\r\n  if (stairAngle < 30 || count <= 3) {\r\n    if (props.topStair){\r\n      dAngleText = [\r\n        coordinates[coordinates.length - 10] + (idealRun / 2) * ratio + 10,\r\n        dAngle[1]\r\n      ];\r\n    } else {\r\n      dAngleText = [\r\n        coordinates[coordinates.length - 6] + (idealRun / 2) * ratio + 10,\r\n        dAngle[1]\r\n      ];\r\n    }\r\n  }\r\n\r\n  //These are coordinates for the rise and run dimension text\r\n  let dStep = \r\n    props.topStair ? (\r\n      [coordinates[coordinates.length - 2], coordinates[coordinates.length - 11]]\r\n    ): \r\n    (\r\n      [coordinates[2] + landing*ratio, coordinates[coordinates.length - 7]]\r\n    );\r\n\r\n  let runCount = props.topStair ? (count) : (count - 1);\r\n\r\n  let idealRunParsedIn = Math.floor((coordinates[12] - coordinates[14]) / ratio);\r\n  let idealRunParsedFr = Math.round((((coordinates[12] - coordinates[14]) / ratio) - idealRunParsedIn) * 0.0625);\r\n  let idealRunParsedMM = Math.round(((coordinates[12] - coordinates[14]) / ratio) * 25.4);\r\n\r\n  let idealRiseParsedIn = Math.floor((coordinates[11] - coordinates[9]) / ratio);\r\n  let idealRiseParsedFr = Math.round((((coordinates[11] - coordinates[9]) / ratio) - idealRunParsedIn) * 0.0625);\r\n  let idealRiseParsedMM = Math.round(((coordinates[11] - coordinates[9]) / ratio) * 25.4);\r\n\r\n\r\n  let riseCountValue = \r\n      props.units ? (\r\n        runCount + \" rises at \" + idealRiseParsedIn + '\" ' + idealRiseParsedFr + \"/16\"\r\n      ):\r\n      (\r\n        runCount + \" rises at \" + idealRiseParsedMM + \" MM\"\r\n      )\r\n\r\n  let runCountValue = \r\n      props.units ? (\r\n        runCount + \" runs at \" + idealRunParsedIn + '\" ' + idealRunParsedFr + \"/16\"\r\n      ):\r\n      (\r\n        runCount + \" runs at \" + idealRunParsedMM + \" MM\"\r\n      )\r\n\r\n  //Error message texts\r\n  let errors = [];\r\n  let ePosition = [80, 80];\r\n\r\n  //Headroom errors\r\n  let eHeadroomText = \"\";\r\n  let eHeadroomColor = \"#ff0000\";\r\n  if (dHeadroomValue < 84 && headroomTrue) {\r\n    eHeadroomColor = \"#ff0000\";\r\n    eHeadroomText = \"Low Headroom\";\r\n    errors.push(eHeadroomText);\r\n  } else {\r\n    eHeadroomColor = \"#5541EA\";\r\n  }\r\n\r\n  //Tread length errors\r\n  let withNosing = false;\r\n  if (idealRun === 10 && props.nosingin === 0) {\r\n    withNosing = true;\r\n  }\r\n  let eRunText = \"\";\r\n  if (idealRun < 11 && withNosing) {\r\n    eRunText = 'Stair run is short';\r\n    errors.push(eRunText);\r\n  }\r\n\r\n  //Stair angle errors\r\n  let eAngleText = \"\";\r\n  let eAngleColor = \"#5541EA\";\r\n  if (stairAngle > 42 || stairAngle < 30) {\r\n    eAngleText = \"Angle must be between 30° and 42°\";\r\n    eAngleColor = \"#ff0000\";\r\n    errors.push(eAngleText);\r\n  }\r\n\r\n  //Rise error\r\n  let eRiseText = \"\";\r\n  if (idealRise > 7){\r\n    eRiseText = 'Stair rise is steep'\r\n    errors.push(eRiseText);\r\n  }\r\n\r\n  //Compiled error messages\r\n  let eMessage = \"\";\r\n  if (errors.length === 1) {\r\n    eMessage = errors[0];\r\n  } else if (errors.length === 2) {\r\n    eMessage = errors[0] + \" • \" + errors[1];\r\n  } else if (errors.length === 3) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2];\r\n  } else if (errors.length === 4) {\r\n    eMessage = errors[0] + \" • \" + errors[1] + \" • \" + errors[2] + \" • \" + errors[3];\r\n  }\r\n  \r\n\r\n  return (\r\n    <Stage width={windowWidth} height={windowHeight}>\r\n      <Layer>\r\n        {props.topStair === false && (\r\n          <Rect\r\n            x={move[0] + topStairLanding[0]}\r\n            y={move[1] + topStairLanding[1] - (idealRise * ratio)}\r\n            width={landing * ratio}\r\n            height={floorThickness * ratio}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n          />\r\n        )}\r\n        {props.topStair && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={topStairLine}\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.dimensions && (\r\n          <Text\r\n            x={ePosition[0]}\r\n            y={ePosition[1]}\r\n            fontFamily=\"Sohne Mono Buch\"\r\n            fontSize={textSize}\r\n            fill=\"#ff0000\"\r\n            text={eMessage}\r\n            align=\"left\"\r\n          />\r\n        )}\r\n        <Line\r\n          x={move[0]}\r\n          y={move[1]}\r\n          points={coordinates}\r\n          stroke=\"black\"\r\n          strokeWidth={strokeWidth}\r\n          lineCap=\"sqare\"\r\n          lineJoin=\"sqare\"\r\n          closed=\"true\"\r\n        />\r\n        {headroomTrue && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={headroomPts}\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            closed=\"true\"\r\n          />\r\n        )}\r\n        {props.details && (\r\n          <Rect\r\n            x={topTread[0]}\r\n            y={topTread[1]}\r\n            width={treadLength - riserThickness}\r\n            height={treadThickness}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={strokeWidth}\r\n          />\r\n        )}\r\n        {props.details &&\r\n          [...Array(detailCount - 1)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsX2[i]}\r\n              y={treadsY2[i]}\r\n              width={treadLength}\r\n              height={treadThickness}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={strokeWidth}\r\n            />\r\n          ))}\r\n        {props.details &&\r\n          [...Array(detailCount)].map((_, i) => (\r\n            <Rect\r\n              key={i}\r\n              x={treadsW[i]}\r\n              y={risersY[i]}\r\n              width={riserThickness}\r\n              height={riserHeight}\r\n              fill=\"white\"\r\n              stroke=\"black\"\r\n              strokeWidth={strokeWidth}\r\n            />\r\n          ))}\r\n      </Layer>\r\n      <Layer>\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRise}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRiseDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textNumOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Rise\"\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRiseText[0] - textLineOffset}\r\n              y={move[1] + dRiseText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={\r\n                dRiseValue\r\n              }\r\n              rotation={90}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRun}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowLeft}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunArrowRight}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dRunDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Total Run\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dRunText[0] - 75}\r\n              y={move[1] + dRunText[1] + textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dRunValue}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && props.details && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedLeft}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dNosingDashedRight}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - textSize - textLineOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Nosing\"\r\n              align=\"center\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dNosingText[0] - 75}\r\n              y={move[1] + dNosingText[1] - textSize - textNumOffset}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dNosingValue}\r\n              align=\"center\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedTop}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dFloorDashedBot}\r\n              stroke=\"black\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"sqare\"\r\n              lineJoin=\"sqare\"\r\n              dash={strokeDash}\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowTop}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloorArrowBot}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0] + arrowOffset}\r\n              y={move[1]}\r\n              points={dFloor}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Floor thickness\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + arrowOffset / 2 + dFloor[2] + arrowOffset}\r\n              y={move[1] + dFloorText[1] + textSize + 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dFloorValue}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dAngleText[0] + (textSize + 2)}\r\n              y={move[1] + dAngleText[1] - (textSize + 2)}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eAngleColor}\r\n              text={stairAngle + \"°\"}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroom}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowTop}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dHeadroomArrowBot}\r\n              stroke={eHeadroomColor}\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={100}\r\n              x={move[0] + dHeadroomText[0] - textLineOffset}\r\n              y={move[1] + dHeadroomText[1] - 50}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text={dHeadroomValueText}\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dHeadroomText[0] - textNumOffset}\r\n              y={move[1] + dHeadroomText[1] - 75}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill={eHeadroomColor}\r\n              text=\"Headroom height\"\r\n              align=\"center\"\r\n              rotation={90}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && headroomTrue && headroomBoolean && (\r\n          <Line\r\n            x={move[0]}\r\n            y={move[1]}\r\n            points={dHeadroomDashed}\r\n            stroke=\"black\"\r\n            strokeWidth={0.75}\r\n            lineCap=\"sqare\"\r\n            lineJoin=\"sqare\"\r\n            dash={strokeDash}\r\n          />\r\n        )}\r\n        {props.dimensions && stringerTrue && (\r\n          <React.Fragment>\r\n            <Line\r\n              x={move[0]}\r\n              y={move[1]}\r\n              points={dStringer}\r\n              stroke=\"#5541EA\"\r\n              strokeWidth={0.75}\r\n              lineCap=\"round\"\r\n              lineJoin=\"round\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3]}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text=\"Stringer width\"\r\n              align=\"left\"\r\n            />\r\n            <Text\r\n              width={150}\r\n              x={move[0] + dStringer[2]}\r\n              y={move[1] + dStringer[3] + textSize + 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={dStringerValue}\r\n              align=\"left\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {props.dimensions && (\r\n          <React.Fragment>\r\n            <Text\r\n              width={200}\r\n              x={move[0] + dStep[0] - 200}\r\n              y={move[1] + dStep[1] + (textSize / 2)}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={runCountValue}\r\n              align=\"right\"\r\n            />\r\n            <Text\r\n              width={200}\r\n              x={move[0] + dStep[0] - 200}\r\n              y={move[1] + dStep[1] + (textSize / 2) + textSize + 2}\r\n              fontFamily=\"Sohne Mono Buch\"\r\n              fontSize={textSize}\r\n              fill=\"#5541EA\"\r\n              text={riseCountValue}\r\n              align=\"right\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Stair;\r\n","import React from 'react';\r\n\r\nconst Units = (props) => {\r\n\r\n    let unitsTrue = props.units;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Units</div>\r\n            {unitsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeUnitsIn}>IN</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeUnitsMM}>MM</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Units","import React from 'react';\r\n\r\nconst Dimensions = (props) => {\r\n    \r\n    let dimensionsTrue = props.dimensions;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Dimensions</div>\r\n            {dimensionsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDimensionsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDimensionsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dimensions","import React from 'react';\r\n\r\nconst DetailsToggle = (props) => {\r\n    \r\n    let detailsTrue = props.details;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">Treads & Risers</div>\r\n            {detailsTrue ? (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--active\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--inactive\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        ) : (\r\n                <div className=\"toggle-group d-flex justify-content-between\">\r\n                    <button className=\"toggle toggle__left toggle--inactive\" onClick={props.changeDetailsOn}>ON</button>\r\n                    <button className=\"toggle toggle__right toggle--active\" onClick={props.changeDetailsOff}>OFF</button>\r\n                </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsToggle","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Styles/App.css\";\nimport TotalRun from \"./Components/inputs/totalrun\";\nimport TotalRise from \"./Components/inputs/totalrise\";\nimport IdealRun from \"./Components/inputs/idealrun\";\nimport IdealRise from \"./Components/inputs/idealrise\";\nimport TopStair from \"./Components/inputs/topstair\";\nimport Details from \"./Components/inputs/details\";\nimport StairAngle from \"./Components/inputs/stairangle\";\nimport Height from \"./Components/inputs/height\";\nimport FloorThickness from \"./Components/inputs/floorthickness\";\nimport Stair from \"./Components/stair\";\nimport Units from \"./Components/inputs/units\";\nimport Dimensions from \"./Components/inputs/dimensions\";\nimport DetailsToggle from \"./Components/inputs/detailsToggle\";\n\nclass App extends Component {\n  state = {\n    totalRunft: 12 * 12,\n    totalRunin: 0,\n    totalRunfr: 0,\n    totalRunmm: 144 * 25.4,\n\n    totalRiseft: 9 * 12,\n    totalRisein: 0,\n    totalRisefr: 0,\n    totalRisemm: 108 * 25.4,\n\n    idealRisein: 7,\n    idealRisefr: 0,\n    idealRisemm: 7 * 25.4,\n\n    idealRunin: 11,\n    idealRunfr: 0,\n    idealRunmm: 11 * 25.4,\n\n    stringerin: 5,\n    stringerfr: 0.0625 * 15,\n    stringermm: (5 + (0.0625 * 15)) * 25.4,\n\n    floorft: 0,\n    floorin: 7,\n    floorfr: 0,\n    floormm: 7 * 25.4,\n\n    headroomMax: 0,\n    headroomLength: 0,\n\n    treadin: 1,\n    treadfr: 0,\n    treadmm: 1 * 25.4,\n\n    riserin: 1,\n    riserfr: 0,\n    risermm: 1 * 25.4,\n\n    nosingin: 0,\n    nosingfr: 0.0625 * 8,\n    nosingmm: 0.0625 * 8 * 25.4,\n\n    stairAngle: 32.5,\n    stairToggle: false,\n\n    runOn: true,\n    idealOn: false,\n    dimensions: true,\n    units: true,\n    details: true,\n    topStair: true\n  };\n\n  //Handlers for changing total run\n  changetotalRunft = event => {\n    this.setState({\n      totalRunft: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunin = event => {\n    this.setState({\n      totalRunin: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunfr = event => {\n    this.setState({\n      totalRunfr: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRunmm = event => {\n    this.setState({\n      totalRunmm: event.target.value,\n      runOn: true,\n      stairToggle: false,\n      idealOn: false\n    })\n  }\n\n  //Handlers for changing total rise\n  changetotalRiseft = event => {\n    this.setState({\n      totalRiseft: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisein = event => {\n    this.setState({\n      totalRisein: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisefr = event => {\n    this.setState({\n      totalRisefr: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n  changetotalRisemm = event => {\n    this.setState({\n      totalRisemm: event.target.value,\n      runOn: false,\n      stairToggle: false,\n      idealOn: false\n    });\n  };\n\n  //Handlers for changing ideal run\n  changeidealRunin = event => {\n    this.setState({\n      idealRunin: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRunfr = event => {\n    this.setState({\n      idealRunfr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRunmm = event => {\n    this.setState({\n      idealRunmm: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing ideal rise\n  changeidealRisein = event => {\n    this.setState({\n      idealRisein: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRisefr = event => {\n    this.setState({\n      idealRisefr: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n  changeidealRisemm = event => {\n    this.setState({\n      idealRisemm: event.target.value,\n      stairToggle: false,\n      idealOn: true\n    });\n  };\n\n  //Handlers for changing stringer\n  changestringerin = event => {\n    this.setState({ stringerin: event.target.value });\n  };\n\n  changestringerfr = event => {\n    this.setState({ stringerfr: event.target.value });\n  };\n  changestringermm = event => {\n    this.setState({ stringermm: event.target.value });\n  };\n\n  //Handlers for changing floor thickness\n  changefloorft = event => {\n    this.setState({ floorft: event.target.value });\n  };\n\n  changefloorin = event => {\n    this.setState({ floorin: event.target.value });\n  };\n\n  changefloorfr = event => {\n    this.setState({ floorfr: event.target.value });\n  };\n  changefloormm = event => {\n    this.setState({ floormm: event.target.value });\n  };\n\n  //Handlers for headroom\n  changeheadroomlength = event => {\n    this.setState({\n      headroomLength: event.target.value\n    });\n  };\n\n  //Handlers for tread\n  changetreadin = event => {\n    this.setState({\n      treadin: event.target.value\n    });\n  };\n  changetreadfr = event => {\n    this.setState({\n      treadfr: event.target.value\n    });\n  };\n  changetreadmm = event => {\n    this.setState({\n      treadmm: event.target.value\n    });\n  };\n\n  //Handlers for riser\n  changeriserin = event => {\n    this.setState({\n      riserin: event.target.value\n    });\n  };\n  changeriserfr = event => {\n    this.setState({\n      riserfr: event.target.value\n    });\n  };\n  changerisermm = event => {\n    this.setState({\n      risermm: event.target.value\n    });\n  };\n\n  //Handlers for nosing\n  changenosingin = event => {\n    this.setState({\n      nosingin: event.target.value\n    });\n  };\n  changenosingfr = event => {\n    this.setState({\n      nosingfr: event.target.value\n    });\n  };\n  changenosingmm = event => {\n    this.setState({\n      nosingmm: event.target.value\n    });\n  };\n\n  //Handlers for toggles\n  changeUnitsIn = () => {\n    this.setState({\n      units: true\n    });\n  };\n  changeUnitsMM = () => {\n    this.setState({\n      units: false\n    });\n  };\n  changeDimensionsOn = () => {\n    this.setState({\n      dimensions: true\n    });\n  };\n  changeDimensionsOff = () => {\n    this.setState({\n      dimensions: false\n    });\n  };\n  changeDetailsOn = () => {\n    this.setState({\n      details: true\n    });\n  };\n  changeDetailsOff = () => {\n    this.setState({\n      details: false\n    });\n  };\n  changeTopStairOn = () => {\n    this.setState({\n      topStair: true\n    })\n  }\n  changeTopStairOff = () => {\n    this.setState({\n      topStair: false\n    })\n  }\n\n\n  //Handler for stair angle\n  changeStairAngle = event => {\n    this.setState({\n      stairToggle: true,\n      stairAngle: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div id=\"sidebar\" className=\"col-12 col-lg-2\">\n            <div className=\"sidebar__section sidebar__section--first\">\n              <div className=\"title\">Toggles</div>\n              <Units\n                units={this.state.units}\n                changeUnitsIn={this.changeUnitsIn}\n                changeUnitsMM={this.changeUnitsMM}\n              />\n              <Dimensions\n                dimensions={this.state.dimensions}\n                changeDimensionsOn={this.changeDimensionsOn}\n                changeDimensionsOff={this.changeDimensionsOff}\n              />\n              <DetailsToggle\n                details={this.state.details}\n                changeDetailsOn={this.changeDetailsOn}\n                changeDetailsOff={this.changeDetailsOff}\n              />\n              <TopStair\n                topStair={this.state.topStair}\n                changeTopStairOn={this.changeTopStairOn}\n                changeTopStairOff={this.changeTopStairOff}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--second\">\n              <div className=\"title\">Rise-run</div>\n              <TotalRun\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                totalRunmm={this.state.totalRunmm}\n                changetotalRunft={this.changetotalRunft}\n                changetotalRunin={this.changetotalRunin}\n                changetotalRunfr={this.changetotalRunfr}\n                changetotalRunmm={this.changetotalRunmm}\n                changetotalRunSwitchOn={this.changetotalRunSwitchOn}\n                changetotalRunSwitchOff={this.changetotalRunSwitchOff}\n                units={this.state.units}\n              />\n              <TotalRise\n                totalRiseft={this.state.totalRiseft}\n                totalRisein={this.state.totalRisein}\n                totalRisefr={this.state.totalRisefr}\n                totalRisemm={this.state.totalRisemm}\n                changetotalRiseft={this.changetotalRiseft}\n                changetotalRisein={this.changetotalRisein}\n                changetotalRisefr={this.changetotalRisefr}\n                changetotalRisemm={this.changetotalRisemm}\n                units={this.state.units}\n              />\n              <IdealRun\n                idealRunin={this.state.idealRunin}\n                idealRunfr={this.state.idealRunfr}\n                idealRunmm={this.state.idealRunmm}\n                changeidealRunin={this.changeidealRunin}\n                changeidealRunfr={this.changeidealRunfr}\n                changeidealRunmm={this.changeidealRunmm}\n                units={this.state.units}\n              />\n              <IdealRise\n                idealRisein={this.state.idealRisein}\n                idealRisefr={this.state.idealRisefr}\n                idealRisemm={this.state.idealRisemm}\n                changeidealRisein={this.changeidealRisein}\n                changeidealRisefr={this.changeidealRisefr}\n                changeidealRisemm={this.changeidealRisemm}\n                units={this.state.units}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <Details\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              treadmm={this.state.treadmm}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              risermm={this.state.risermm}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              nosingmm={this.state.nosingmm}\n              changetreadin={this.changetreadin}\n              changetreadfr={this.changetreadfr}\n              changetreadmm={this.changetreadmm}\n              changeriserin={this.changeriserin}\n              changeriserfr={this.changeriserfr}\n              changerisermm={this.changerisermm}\n              changenosingin={this.changenosingin}\n              changenosingfr={this.changenosingfr}\n              changenosingmm={this.changenosingmm}\n              changestringerin={this.changestringerin}\n              changestringerfr={this.changestringerfr}\n              changestringermm={this.changestringermm}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              stringermm={this.state.stringermm}\n              details={this.state.details}\n              units={this.state.units}\n            />\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <div className=\"sidebar__section sidebar__section--fourth\">\n              <div className=\"title\">Headroom</div>\n              <Height\n                totalRunft={this.state.totalRunft}\n                totalRunin={this.state.totalRunin}\n                totalRunfr={this.state.totalRunfr}\n                totalRunmm={this.state.totalRunmm}\n                headroomLength={this.state.headroomLength}\n                changeheadroomlength={this.changeheadroomlength}\n                units={this.state.units}\n              />\n              <FloorThickness\n                floorft={this.state.floorft}\n                floorin={this.state.floorin}\n                floorfr={this.state.floorfr}\n                floormm={this.state.floormm}\n                changefloorft={this.changefloorft}\n                changefloorin={this.changefloorin}\n                changefloorfr={this.changefloorfr}\n                changefloormm={this.changefloormm}\n                units={this.state.units}\n              />\n            </div>\n\n            <div className=\"sidebar__section--border\"></div>\n\n            <StairAngle\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              changeStairAngle={this.changeStairAngle}\n              stairAngle={this.state.stairAngle}\n            />\n          </div>\n\n          <div id=\"container\" className=\"col-12 col-lg-10\">\n            <Stair\n              units={this.state.units}\n              totalRunft={this.state.totalRunft}\n              totalRunin={this.state.totalRunin}\n              totalRunfr={this.state.totalRunfr}\n              totalRunmm={this.state.totalRunmm}\n              totalRiseft={this.state.totalRiseft}\n              totalRisein={this.state.totalRisein}\n              totalRisefr={this.state.totalRisefr}\n              totalRisemm={this.state.totalRisemm}\n              idealRunin={this.state.idealRunin}\n              idealRunfr={this.state.idealRunfr}\n              idealRunmm={this.state.idealRunmm}\n              idealRisein={this.state.idealRisein}\n              idealRisefr={this.state.idealRisefr}\n              idealRisemm={this.state.idealRisemm}\n              totalBoolean={this.state.runOn}\n              runCount={this.state.runCount}\n              riseCount={this.state.riseCount}\n              stringerin={this.state.stringerin}\n              stringerfr={this.state.stringerfr}\n              stringermm={this.state.stringermm}\n              floorft={this.state.floorft}\n              floorin={this.state.floorin}\n              floorfr={this.state.floorfr}\n              floormm={this.state.floormm}\n              headroomLength={this.state.headroomLength}\n              headroomDelta={this.state.headroomDelta}\n              treadin={this.state.treadin}\n              treadfr={this.state.treadfr}\n              treadmm={this.state.treadmm}\n              riserin={this.state.riserin}\n              riserfr={this.state.riserfr}\n              risermm={this.state.risermm}\n              nosingin={this.state.nosingin}\n              nosingfr={this.state.nosingfr}\n              nosingmm={this.state.nosingmm}\n              details={this.state.details}\n              dimensions={this.state.dimensions}\n              stairAngle={this.state.stairAngle}\n              stairToggle={this.state.stairToggle}\n              idealBoolean={this.state.idealOn}\n              topStair={this.state.topStair}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.scss\";\nimport \"./Styles/fonts.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\n\nfunction initApp() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nWebFont.load({\n  custom: {\n    families: [\"Sohne Mono Buch\"]\n  },\n  active: () => {\n    console.log(\"font loaded\");\n    initApp();\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}